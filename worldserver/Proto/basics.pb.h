// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: basics.proto

#ifndef PROTOBUF_basics_2eproto__INCLUDED
#define PROTOBUF_basics_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace WakfuProto {
class IdentificationMessage;
class IdentificationMessageDefaultTypeInternal;
extern IdentificationMessageDefaultTypeInternal _IdentificationMessage_default_instance_;
}  // namespace WakfuProto

namespace WakfuProto {

namespace protobuf_basics_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_basics_2eproto

// ===================================================================

class IdentificationMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WakfuProto.IdentificationMessage) */ {
 public:
  IdentificationMessage();
  virtual ~IdentificationMessage();

  IdentificationMessage(const IdentificationMessage& from);

  inline IdentificationMessage& operator=(const IdentificationMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IdentificationMessage& default_instance();

  static inline const IdentificationMessage* internal_default_instance() {
    return reinterpret_cast<const IdentificationMessage*>(
               &_IdentificationMessage_default_instance_);
  }

  void Swap(IdentificationMessage* other);

  // implements Message ----------------------------------------------

  inline IdentificationMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  IdentificationMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IdentificationMessage& from);
  void MergeFrom(const IdentificationMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IdentificationMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string platformName = 1;
  bool has_platformname() const;
  void clear_platformname();
  static const int kPlatformNameFieldNumber = 1;
  const ::std::string& platformname() const;
  void set_platformname(const ::std::string& value);
  #if LANG_CXX11
  void set_platformname(::std::string&& value);
  #endif
  void set_platformname(const char* value);
  void set_platformname(const char* value, size_t size);
  ::std::string* mutable_platformname();
  ::std::string* release_platformname();
  void set_allocated_platformname(::std::string* platformname);

  // required string serviceName = 2;
  bool has_servicename() const;
  void clear_servicename();
  static const int kServiceNameFieldNumber = 2;
  const ::std::string& servicename() const;
  void set_servicename(const ::std::string& value);
  #if LANG_CXX11
  void set_servicename(::std::string&& value);
  #endif
  void set_servicename(const char* value);
  void set_servicename(const char* value, size_t size);
  ::std::string* mutable_servicename();
  ::std::string* release_servicename();
  void set_allocated_servicename(::std::string* servicename);

  // required int32 serverId = 3;
  bool has_serverid() const;
  void clear_serverid();
  static const int kServerIdFieldNumber = 3;
  ::google::protobuf::int32 serverid() const;
  void set_serverid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WakfuProto.IdentificationMessage)
 private:
  void set_has_platformname();
  void clear_has_platformname();
  void set_has_servicename();
  void clear_has_servicename();
  void set_has_serverid();
  void clear_has_serverid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr platformname_;
  ::google::protobuf::internal::ArenaStringPtr servicename_;
  ::google::protobuf::int32 serverid_;
  friend struct  protobuf_basics_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// IdentificationMessage

// required string platformName = 1;
inline bool IdentificationMessage::has_platformname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IdentificationMessage::set_has_platformname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IdentificationMessage::clear_has_platformname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IdentificationMessage::clear_platformname() {
  platformname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_platformname();
}
inline const ::std::string& IdentificationMessage::platformname() const {
  // @@protoc_insertion_point(field_get:WakfuProto.IdentificationMessage.platformName)
  return platformname_.GetNoArena();
}
inline void IdentificationMessage::set_platformname(const ::std::string& value) {
  set_has_platformname();
  platformname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WakfuProto.IdentificationMessage.platformName)
}
#if LANG_CXX11
inline void IdentificationMessage::set_platformname(::std::string&& value) {
  set_has_platformname();
  platformname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WakfuProto.IdentificationMessage.platformName)
}
#endif
inline void IdentificationMessage::set_platformname(const char* value) {
  set_has_platformname();
  platformname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WakfuProto.IdentificationMessage.platformName)
}
inline void IdentificationMessage::set_platformname(const char* value, size_t size) {
  set_has_platformname();
  platformname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WakfuProto.IdentificationMessage.platformName)
}
inline ::std::string* IdentificationMessage::mutable_platformname() {
  set_has_platformname();
  // @@protoc_insertion_point(field_mutable:WakfuProto.IdentificationMessage.platformName)
  return platformname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IdentificationMessage::release_platformname() {
  // @@protoc_insertion_point(field_release:WakfuProto.IdentificationMessage.platformName)
  clear_has_platformname();
  return platformname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IdentificationMessage::set_allocated_platformname(::std::string* platformname) {
  if (platformname != NULL) {
    set_has_platformname();
  } else {
    clear_has_platformname();
  }
  platformname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platformname);
  // @@protoc_insertion_point(field_set_allocated:WakfuProto.IdentificationMessage.platformName)
}

// required string serviceName = 2;
inline bool IdentificationMessage::has_servicename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IdentificationMessage::set_has_servicename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IdentificationMessage::clear_has_servicename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IdentificationMessage::clear_servicename() {
  servicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_servicename();
}
inline const ::std::string& IdentificationMessage::servicename() const {
  // @@protoc_insertion_point(field_get:WakfuProto.IdentificationMessage.serviceName)
  return servicename_.GetNoArena();
}
inline void IdentificationMessage::set_servicename(const ::std::string& value) {
  set_has_servicename();
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WakfuProto.IdentificationMessage.serviceName)
}
#if LANG_CXX11
inline void IdentificationMessage::set_servicename(::std::string&& value) {
  set_has_servicename();
  servicename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WakfuProto.IdentificationMessage.serviceName)
}
#endif
inline void IdentificationMessage::set_servicename(const char* value) {
  set_has_servicename();
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WakfuProto.IdentificationMessage.serviceName)
}
inline void IdentificationMessage::set_servicename(const char* value, size_t size) {
  set_has_servicename();
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WakfuProto.IdentificationMessage.serviceName)
}
inline ::std::string* IdentificationMessage::mutable_servicename() {
  set_has_servicename();
  // @@protoc_insertion_point(field_mutable:WakfuProto.IdentificationMessage.serviceName)
  return servicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IdentificationMessage::release_servicename() {
  // @@protoc_insertion_point(field_release:WakfuProto.IdentificationMessage.serviceName)
  clear_has_servicename();
  return servicename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IdentificationMessage::set_allocated_servicename(::std::string* servicename) {
  if (servicename != NULL) {
    set_has_servicename();
  } else {
    clear_has_servicename();
  }
  servicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), servicename);
  // @@protoc_insertion_point(field_set_allocated:WakfuProto.IdentificationMessage.serviceName)
}

// required int32 serverId = 3;
inline bool IdentificationMessage::has_serverid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IdentificationMessage::set_has_serverid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IdentificationMessage::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IdentificationMessage::clear_serverid() {
  serverid_ = 0;
  clear_has_serverid();
}
inline ::google::protobuf::int32 IdentificationMessage::serverid() const {
  // @@protoc_insertion_point(field_get:WakfuProto.IdentificationMessage.serverId)
  return serverid_;
}
inline void IdentificationMessage::set_serverid(::google::protobuf::int32 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.IdentificationMessage.serverId)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace WakfuProto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_basics_2eproto__INCLUDED
