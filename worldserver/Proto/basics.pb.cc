// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: basics.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "basics.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace WakfuProto {
class IdentificationMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<IdentificationMessage> {
} _IdentificationMessage_default_instance_;

namespace protobuf_basics_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdentificationMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdentificationMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdentificationMessage, platformname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdentificationMessage, servicename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdentificationMessage, serverid_),
  0,
  1,
  2,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(IdentificationMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_IdentificationMessage_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "basics.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _IdentificationMessage_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _IdentificationMessage_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\014basics.proto\022\nWakfuProto\"T\n\025Identifica"
      "tionMessage\022\024\n\014platformName\030\001 \002(\t\022\023\n\013ser"
      "viceName\030\002 \002(\t\022\020\n\010serverId\030\003 \002(\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 112);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "basics.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_basics_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IdentificationMessage::kPlatformNameFieldNumber;
const int IdentificationMessage::kServiceNameFieldNumber;
const int IdentificationMessage::kServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdentificationMessage::IdentificationMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_basics_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WakfuProto.IdentificationMessage)
}
IdentificationMessage::IdentificationMessage(const IdentificationMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  platformname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_platformname()) {
    platformname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platformname_);
  }
  servicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_servicename()) {
    servicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servicename_);
  }
  serverid_ = from.serverid_;
  // @@protoc_insertion_point(copy_constructor:WakfuProto.IdentificationMessage)
}

void IdentificationMessage::SharedCtor() {
  _cached_size_ = 0;
  platformname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverid_ = 0;
}

IdentificationMessage::~IdentificationMessage() {
  // @@protoc_insertion_point(destructor:WakfuProto.IdentificationMessage)
  SharedDtor();
}

void IdentificationMessage::SharedDtor() {
  platformname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servicename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IdentificationMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IdentificationMessage::descriptor() {
  protobuf_basics_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_basics_2eproto::file_level_metadata[0].descriptor;
}

const IdentificationMessage& IdentificationMessage::default_instance() {
  protobuf_basics_2eproto::InitDefaults();
  return *internal_default_instance();
}

IdentificationMessage* IdentificationMessage::New(::google::protobuf::Arena* arena) const {
  IdentificationMessage* n = new IdentificationMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IdentificationMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:WakfuProto.IdentificationMessage)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_platformname()) {
      GOOGLE_DCHECK(!platformname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*platformname_.UnsafeRawStringPointer())->clear();
    }
    if (has_servicename()) {
      GOOGLE_DCHECK(!servicename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*servicename_.UnsafeRawStringPointer())->clear();
    }
  }
  serverid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool IdentificationMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WakfuProto.IdentificationMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string platformName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platformname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->platformname().data(), this->platformname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "WakfuProto.IdentificationMessage.platformName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string serviceName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servicename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->servicename().data(), this->servicename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "WakfuProto.IdentificationMessage.serviceName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 serverId = 3;
      case 3: {
        if (tag == 24u) {
          set_has_serverid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WakfuProto.IdentificationMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WakfuProto.IdentificationMessage)
  return false;
#undef DO_
}

void IdentificationMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WakfuProto.IdentificationMessage)
  // required string platformName = 1;
  if (has_platformname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platformname().data(), this->platformname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "WakfuProto.IdentificationMessage.platformName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->platformname(), output);
  }

  // required string serviceName = 2;
  if (has_servicename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->servicename().data(), this->servicename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "WakfuProto.IdentificationMessage.serviceName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->servicename(), output);
  }

  // required int32 serverId = 3;
  if (has_serverid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->serverid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WakfuProto.IdentificationMessage)
}

::google::protobuf::uint8* IdentificationMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WakfuProto.IdentificationMessage)
  // required string platformName = 1;
  if (has_platformname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platformname().data(), this->platformname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "WakfuProto.IdentificationMessage.platformName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->platformname(), target);
  }

  // required string serviceName = 2;
  if (has_servicename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->servicename().data(), this->servicename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "WakfuProto.IdentificationMessage.serviceName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->servicename(), target);
  }

  // required int32 serverId = 3;
  if (has_serverid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->serverid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WakfuProto.IdentificationMessage)
  return target;
}

size_t IdentificationMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:WakfuProto.IdentificationMessage)
  size_t total_size = 0;

  if (has_platformname()) {
    // required string platformName = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->platformname());
  }

  if (has_servicename()) {
    // required string serviceName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servicename());
  }

  if (has_serverid()) {
    // required int32 serverId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  return total_size;
}
size_t IdentificationMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WakfuProto.IdentificationMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string platformName = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->platformname());

    // required string serviceName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servicename());

    // required int32 serverId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IdentificationMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WakfuProto.IdentificationMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const IdentificationMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IdentificationMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WakfuProto.IdentificationMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WakfuProto.IdentificationMessage)
    MergeFrom(*source);
  }
}

void IdentificationMessage::MergeFrom(const IdentificationMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WakfuProto.IdentificationMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_platformname()) {
      set_has_platformname();
      platformname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platformname_);
    }
    if (from.has_servicename()) {
      set_has_servicename();
      servicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servicename_);
    }
    if (from.has_serverid()) {
      set_serverid(from.serverid());
    }
  }
}

void IdentificationMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WakfuProto.IdentificationMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdentificationMessage::CopyFrom(const IdentificationMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WakfuProto.IdentificationMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdentificationMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void IdentificationMessage::Swap(IdentificationMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IdentificationMessage::InternalSwap(IdentificationMessage* other) {
  platformname_.Swap(&other->platformname_);
  servicename_.Swap(&other->servicename_);
  std::swap(serverid_, other->serverid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IdentificationMessage::GetMetadata() const {
  protobuf_basics_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_basics_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IdentificationMessage

// required string platformName = 1;
bool IdentificationMessage::has_platformname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void IdentificationMessage::set_has_platformname() {
  _has_bits_[0] |= 0x00000001u;
}
void IdentificationMessage::clear_has_platformname() {
  _has_bits_[0] &= ~0x00000001u;
}
void IdentificationMessage::clear_platformname() {
  platformname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_platformname();
}
const ::std::string& IdentificationMessage::platformname() const {
  // @@protoc_insertion_point(field_get:WakfuProto.IdentificationMessage.platformName)
  return platformname_.GetNoArena();
}
void IdentificationMessage::set_platformname(const ::std::string& value) {
  set_has_platformname();
  platformname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WakfuProto.IdentificationMessage.platformName)
}
#if LANG_CXX11
void IdentificationMessage::set_platformname(::std::string&& value) {
  set_has_platformname();
  platformname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WakfuProto.IdentificationMessage.platformName)
}
#endif
void IdentificationMessage::set_platformname(const char* value) {
  set_has_platformname();
  platformname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WakfuProto.IdentificationMessage.platformName)
}
void IdentificationMessage::set_platformname(const char* value, size_t size) {
  set_has_platformname();
  platformname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WakfuProto.IdentificationMessage.platformName)
}
::std::string* IdentificationMessage::mutable_platformname() {
  set_has_platformname();
  // @@protoc_insertion_point(field_mutable:WakfuProto.IdentificationMessage.platformName)
  return platformname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IdentificationMessage::release_platformname() {
  // @@protoc_insertion_point(field_release:WakfuProto.IdentificationMessage.platformName)
  clear_has_platformname();
  return platformname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IdentificationMessage::set_allocated_platformname(::std::string* platformname) {
  if (platformname != NULL) {
    set_has_platformname();
  } else {
    clear_has_platformname();
  }
  platformname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platformname);
  // @@protoc_insertion_point(field_set_allocated:WakfuProto.IdentificationMessage.platformName)
}

// required string serviceName = 2;
bool IdentificationMessage::has_servicename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void IdentificationMessage::set_has_servicename() {
  _has_bits_[0] |= 0x00000002u;
}
void IdentificationMessage::clear_has_servicename() {
  _has_bits_[0] &= ~0x00000002u;
}
void IdentificationMessage::clear_servicename() {
  servicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_servicename();
}
const ::std::string& IdentificationMessage::servicename() const {
  // @@protoc_insertion_point(field_get:WakfuProto.IdentificationMessage.serviceName)
  return servicename_.GetNoArena();
}
void IdentificationMessage::set_servicename(const ::std::string& value) {
  set_has_servicename();
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WakfuProto.IdentificationMessage.serviceName)
}
#if LANG_CXX11
void IdentificationMessage::set_servicename(::std::string&& value) {
  set_has_servicename();
  servicename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WakfuProto.IdentificationMessage.serviceName)
}
#endif
void IdentificationMessage::set_servicename(const char* value) {
  set_has_servicename();
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WakfuProto.IdentificationMessage.serviceName)
}
void IdentificationMessage::set_servicename(const char* value, size_t size) {
  set_has_servicename();
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WakfuProto.IdentificationMessage.serviceName)
}
::std::string* IdentificationMessage::mutable_servicename() {
  set_has_servicename();
  // @@protoc_insertion_point(field_mutable:WakfuProto.IdentificationMessage.serviceName)
  return servicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IdentificationMessage::release_servicename() {
  // @@protoc_insertion_point(field_release:WakfuProto.IdentificationMessage.serviceName)
  clear_has_servicename();
  return servicename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IdentificationMessage::set_allocated_servicename(::std::string* servicename) {
  if (servicename != NULL) {
    set_has_servicename();
  } else {
    clear_has_servicename();
  }
  servicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), servicename);
  // @@protoc_insertion_point(field_set_allocated:WakfuProto.IdentificationMessage.serviceName)
}

// required int32 serverId = 3;
bool IdentificationMessage::has_serverid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void IdentificationMessage::set_has_serverid() {
  _has_bits_[0] |= 0x00000004u;
}
void IdentificationMessage::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000004u;
}
void IdentificationMessage::clear_serverid() {
  serverid_ = 0;
  clear_has_serverid();
}
::google::protobuf::int32 IdentificationMessage::serverid() const {
  // @@protoc_insertion_point(field_get:WakfuProto.IdentificationMessage.serverId)
  return serverid_;
}
void IdentificationMessage::set_serverid(::google::protobuf::int32 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.IdentificationMessage.serverId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace WakfuProto

// @@protoc_insertion_point(global_scope)
