// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rewards.proto

#ifndef PROTOBUF_rewards_2eproto__INCLUDED
#define PROTOBUF_rewards_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace WakfuProto {
class AddRewardsMessage;
class AddRewardsMessageDefaultTypeInternal;
extern AddRewardsMessageDefaultTypeInternal _AddRewardsMessage_default_instance_;
class ConsultRewardsMessage;
class ConsultRewardsMessageDefaultTypeInternal;
extern ConsultRewardsMessageDefaultTypeInternal _ConsultRewardsMessage_default_instance_;
class ConsultRewardsResultMessage;
class ConsultRewardsResultMessageDefaultTypeInternal;
extern ConsultRewardsResultMessageDefaultTypeInternal _ConsultRewardsResultMessage_default_instance_;
class ConsumeRewardMessage;
class ConsumeRewardMessageDefaultTypeInternal;
extern ConsumeRewardMessageDefaultTypeInternal _ConsumeRewardMessage_default_instance_;
class ConsumeRewardResultMessage;
class ConsumeRewardResultMessageDefaultTypeInternal;
extern ConsumeRewardResultMessageDefaultTypeInternal _ConsumeRewardResultMessage_default_instance_;
class ContainerDescription;
class ContainerDescriptionDefaultTypeInternal;
extern ContainerDescriptionDefaultTypeInternal _ContainerDescription_default_instance_;
class Reward;
class RewardDefaultTypeInternal;
extern RewardDefaultTypeInternal _Reward_default_instance_;
class Rewards;
class RewardsDefaultTypeInternal;
extern RewardsDefaultTypeInternal _Rewards_default_instance_;
class RewardsContainer;
class RewardsContainerDefaultTypeInternal;
extern RewardsContainerDefaultTypeInternal _RewardsContainer_default_instance_;
}  // namespace WakfuProto

namespace WakfuProto {

namespace protobuf_rewards_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_rewards_2eproto

enum RewardsCategories {
  DUNGEON_LADDER = 1
};
bool RewardsCategories_IsValid(int value);
const RewardsCategories RewardsCategories_MIN = DUNGEON_LADDER;
const RewardsCategories RewardsCategories_MAX = DUNGEON_LADDER;
const int RewardsCategories_ARRAYSIZE = RewardsCategories_MAX + 1;

const ::google::protobuf::EnumDescriptor* RewardsCategories_descriptor();
inline const ::std::string& RewardsCategories_Name(RewardsCategories value) {
  return ::google::protobuf::internal::NameOfEnum(
    RewardsCategories_descriptor(), value);
}
inline bool RewardsCategories_Parse(
    const ::std::string& name, RewardsCategories* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RewardsCategories>(
    RewardsCategories_descriptor(), name, value);
}
enum RewardsTypes {
  ITEM = 1
};
bool RewardsTypes_IsValid(int value);
const RewardsTypes RewardsTypes_MIN = ITEM;
const RewardsTypes RewardsTypes_MAX = ITEM;
const int RewardsTypes_ARRAYSIZE = RewardsTypes_MAX + 1;

const ::google::protobuf::EnumDescriptor* RewardsTypes_descriptor();
inline const ::std::string& RewardsTypes_Name(RewardsTypes value) {
  return ::google::protobuf::internal::NameOfEnum(
    RewardsTypes_descriptor(), value);
}
inline bool RewardsTypes_Parse(
    const ::std::string& name, RewardsTypes* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RewardsTypes>(
    RewardsTypes_descriptor(), name, value);
}
// ===================================================================


// -------------------------------------------------------------------

class AddRewardsMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WakfuProto.AddRewardsMessage) */ {
 public:
  AddRewardsMessage();
  virtual ~AddRewardsMessage();

  AddRewardsMessage(const AddRewardsMessage& from);

  inline AddRewardsMessage& operator=(const AddRewardsMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddRewardsMessage& default_instance();

  static inline const AddRewardsMessage* internal_default_instance() {
    return reinterpret_cast<const AddRewardsMessage*>(
               &_AddRewardsMessage_default_instance_);
  }

  void Swap(AddRewardsMessage* other);

  // implements Message ----------------------------------------------

  inline AddRewardsMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  AddRewardsMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddRewardsMessage& from);
  void MergeFrom(const AddRewardsMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddRewardsMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int64, .WakfuProto.RewardsContainer> rewards = 1;
  int rewards_size() const;
  void clear_rewards();
  static const int kRewardsFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int64, ::WakfuProto::RewardsContainer >&
      rewards() const;
  ::google::protobuf::Map< ::google::protobuf::int64, ::WakfuProto::RewardsContainer >*
      mutable_rewards();

  // @@protoc_insertion_point(class_scope:WakfuProto.AddRewardsMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int64, ::WakfuProto::RewardsContainer,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      AddRewardsMessage_RewardsEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int64, ::WakfuProto::RewardsContainer,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > rewards_;
  friend struct  protobuf_rewards_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConsultRewardsMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WakfuProto.ConsultRewardsMessage) */ {
 public:
  ConsultRewardsMessage();
  virtual ~ConsultRewardsMessage();

  ConsultRewardsMessage(const ConsultRewardsMessage& from);

  inline ConsultRewardsMessage& operator=(const ConsultRewardsMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConsultRewardsMessage& default_instance();

  static inline const ConsultRewardsMessage* internal_default_instance() {
    return reinterpret_cast<const ConsultRewardsMessage*>(
               &_ConsultRewardsMessage_default_instance_);
  }

  void Swap(ConsultRewardsMessage* other);

  // implements Message ----------------------------------------------

  inline ConsultRewardsMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  ConsultRewardsMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConsultRewardsMessage& from);
  void MergeFrom(const ConsultRewardsMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConsultRewardsMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 ownerId = 1;
  bool has_ownerid() const;
  void clear_ownerid();
  static const int kOwnerIdFieldNumber = 1;
  ::google::protobuf::int64 ownerid() const;
  void set_ownerid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:WakfuProto.ConsultRewardsMessage)
 private:
  void set_has_ownerid();
  void clear_has_ownerid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 ownerid_;
  friend struct  protobuf_rewards_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConsultRewardsResultMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WakfuProto.ConsultRewardsResultMessage) */ {
 public:
  ConsultRewardsResultMessage();
  virtual ~ConsultRewardsResultMessage();

  ConsultRewardsResultMessage(const ConsultRewardsResultMessage& from);

  inline ConsultRewardsResultMessage& operator=(const ConsultRewardsResultMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConsultRewardsResultMessage& default_instance();

  static inline const ConsultRewardsResultMessage* internal_default_instance() {
    return reinterpret_cast<const ConsultRewardsResultMessage*>(
               &_ConsultRewardsResultMessage_default_instance_);
  }

  void Swap(ConsultRewardsResultMessage* other);

  // implements Message ----------------------------------------------

  inline ConsultRewardsResultMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  ConsultRewardsResultMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConsultRewardsResultMessage& from);
  void MergeFrom(const ConsultRewardsResultMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConsultRewardsResultMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .WakfuProto.Rewards rewards = 2;
  bool has_rewards() const;
  void clear_rewards();
  static const int kRewardsFieldNumber = 2;
  const ::WakfuProto::Rewards& rewards() const;
  ::WakfuProto::Rewards* mutable_rewards();
  ::WakfuProto::Rewards* release_rewards();
  void set_allocated_rewards(::WakfuProto::Rewards* rewards);

  // required int64 ownerId = 1;
  bool has_ownerid() const;
  void clear_ownerid();
  static const int kOwnerIdFieldNumber = 1;
  ::google::protobuf::int64 ownerid() const;
  void set_ownerid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:WakfuProto.ConsultRewardsResultMessage)
 private:
  void set_has_ownerid();
  void clear_has_ownerid();
  void set_has_rewards();
  void clear_has_rewards();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::WakfuProto::Rewards* rewards_;
  ::google::protobuf::int64 ownerid_;
  friend struct  protobuf_rewards_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConsumeRewardMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WakfuProto.ConsumeRewardMessage) */ {
 public:
  ConsumeRewardMessage();
  virtual ~ConsumeRewardMessage();

  ConsumeRewardMessage(const ConsumeRewardMessage& from);

  inline ConsumeRewardMessage& operator=(const ConsumeRewardMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConsumeRewardMessage& default_instance();

  static inline const ConsumeRewardMessage* internal_default_instance() {
    return reinterpret_cast<const ConsumeRewardMessage*>(
               &_ConsumeRewardMessage_default_instance_);
  }

  void Swap(ConsumeRewardMessage* other);

  // implements Message ----------------------------------------------

  inline ConsumeRewardMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  ConsumeRewardMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConsumeRewardMessage& from);
  void MergeFrom(const ConsumeRewardMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConsumeRewardMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 ownerId = 1;
  bool has_ownerid() const;
  void clear_ownerid();
  static const int kOwnerIdFieldNumber = 1;
  ::google::protobuf::int64 ownerid() const;
  void set_ownerid(::google::protobuf::int64 value);

  // required int64 containerId = 2;
  bool has_containerid() const;
  void clear_containerid();
  static const int kContainerIdFieldNumber = 2;
  ::google::protobuf::int64 containerid() const;
  void set_containerid(::google::protobuf::int64 value);

  // optional int64 rewardId = 3;
  bool has_rewardid() const;
  void clear_rewardid();
  static const int kRewardIdFieldNumber = 3;
  ::google::protobuf::int64 rewardid() const;
  void set_rewardid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:WakfuProto.ConsumeRewardMessage)
 private:
  void set_has_ownerid();
  void clear_has_ownerid();
  void set_has_containerid();
  void clear_has_containerid();
  void set_has_rewardid();
  void clear_has_rewardid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 ownerid_;
  ::google::protobuf::int64 containerid_;
  ::google::protobuf::int64 rewardid_;
  friend struct  protobuf_rewards_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConsumeRewardResultMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WakfuProto.ConsumeRewardResultMessage) */ {
 public:
  ConsumeRewardResultMessage();
  virtual ~ConsumeRewardResultMessage();

  ConsumeRewardResultMessage(const ConsumeRewardResultMessage& from);

  inline ConsumeRewardResultMessage& operator=(const ConsumeRewardResultMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConsumeRewardResultMessage& default_instance();

  static inline const ConsumeRewardResultMessage* internal_default_instance() {
    return reinterpret_cast<const ConsumeRewardResultMessage*>(
               &_ConsumeRewardResultMessage_default_instance_);
  }

  void Swap(ConsumeRewardResultMessage* other);

  // implements Message ----------------------------------------------

  inline ConsumeRewardResultMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  ConsumeRewardResultMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConsumeRewardResultMessage& from);
  void MergeFrom(const ConsumeRewardResultMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConsumeRewardResultMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .WakfuProto.RewardsContainer container = 2;
  bool has_container() const;
  void clear_container();
  static const int kContainerFieldNumber = 2;
  const ::WakfuProto::RewardsContainer& container() const;
  ::WakfuProto::RewardsContainer* mutable_container();
  ::WakfuProto::RewardsContainer* release_container();
  void set_allocated_container(::WakfuProto::RewardsContainer* container);

  // required int64 ownerId = 1;
  bool has_ownerid() const;
  void clear_ownerid();
  static const int kOwnerIdFieldNumber = 1;
  ::google::protobuf::int64 ownerid() const;
  void set_ownerid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:WakfuProto.ConsumeRewardResultMessage)
 private:
  void set_has_ownerid();
  void clear_has_ownerid();
  void set_has_container();
  void clear_has_container();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::WakfuProto::RewardsContainer* container_;
  ::google::protobuf::int64 ownerid_;
  friend struct  protobuf_rewards_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Rewards : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WakfuProto.Rewards) */ {
 public:
  Rewards();
  virtual ~Rewards();

  Rewards(const Rewards& from);

  inline Rewards& operator=(const Rewards& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Rewards& default_instance();

  static inline const Rewards* internal_default_instance() {
    return reinterpret_cast<const Rewards*>(
               &_Rewards_default_instance_);
  }

  void Swap(Rewards* other);

  // implements Message ----------------------------------------------

  inline Rewards* New() const PROTOBUF_FINAL { return New(NULL); }

  Rewards* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Rewards& from);
  void MergeFrom(const Rewards& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Rewards* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .WakfuProto.RewardsContainer rewards = 1;
  int rewards_size() const;
  void clear_rewards();
  static const int kRewardsFieldNumber = 1;
  const ::WakfuProto::RewardsContainer& rewards(int index) const;
  ::WakfuProto::RewardsContainer* mutable_rewards(int index);
  ::WakfuProto::RewardsContainer* add_rewards();
  ::google::protobuf::RepeatedPtrField< ::WakfuProto::RewardsContainer >*
      mutable_rewards();
  const ::google::protobuf::RepeatedPtrField< ::WakfuProto::RewardsContainer >&
      rewards() const;

  // @@protoc_insertion_point(class_scope:WakfuProto.Rewards)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::WakfuProto::RewardsContainer > rewards_;
  friend struct  protobuf_rewards_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class RewardsContainer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WakfuProto.RewardsContainer) */ {
 public:
  RewardsContainer();
  virtual ~RewardsContainer();

  RewardsContainer(const RewardsContainer& from);

  inline RewardsContainer& operator=(const RewardsContainer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RewardsContainer& default_instance();

  static inline const RewardsContainer* internal_default_instance() {
    return reinterpret_cast<const RewardsContainer*>(
               &_RewardsContainer_default_instance_);
  }

  void Swap(RewardsContainer* other);

  // implements Message ----------------------------------------------

  inline RewardsContainer* New() const PROTOBUF_FINAL { return New(NULL); }

  RewardsContainer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RewardsContainer& from);
  void MergeFrom(const RewardsContainer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RewardsContainer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, .WakfuProto.Reward> reward = 3;
  int reward_size() const;
  void clear_reward();
  static const int kRewardFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::WakfuProto::Reward >&
      reward() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::WakfuProto::Reward >*
      mutable_reward();

  // required .WakfuProto.ContainerDescription description = 2;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::WakfuProto::ContainerDescription& description() const;
  ::WakfuProto::ContainerDescription* mutable_description();
  ::WakfuProto::ContainerDescription* release_description();
  void set_allocated_description(::WakfuProto::ContainerDescription* description);

  // required int64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // optional int64 characterId = 4;
  bool has_characterid() const;
  void clear_characterid();
  static const int kCharacterIdFieldNumber = 4;
  ::google::protobuf::int64 characterid() const;
  void set_characterid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:WakfuProto.RewardsContainer)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_description();
  void clear_has_description();
  void set_has_characterid();
  void clear_has_characterid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::WakfuProto::Reward,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      RewardsContainer_RewardEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::WakfuProto::Reward,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > reward_;
  ::WakfuProto::ContainerDescription* description_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 characterid_;
  friend struct  protobuf_rewards_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Reward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WakfuProto.Reward) */ {
 public:
  Reward();
  virtual ~Reward();

  Reward(const Reward& from);

  inline Reward& operator=(const Reward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Reward& default_instance();

  static inline const Reward* internal_default_instance() {
    return reinterpret_cast<const Reward*>(
               &_Reward_default_instance_);
  }

  void Swap(Reward* other);

  // implements Message ----------------------------------------------

  inline Reward* New() const PROTOBUF_FINAL { return New(NULL); }

  Reward* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Reward& from);
  void MergeFrom(const Reward& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Reward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // required int32 quantity = 4;
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 4;
  ::google::protobuf::int32 quantity() const;
  void set_quantity(::google::protobuf::int32 value);

  // required .WakfuProto.RewardsTypes type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::WakfuProto::RewardsTypes type() const;
  void set_type(::WakfuProto::RewardsTypes value);

  // @@protoc_insertion_point(class_scope:WakfuProto.Reward)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_type();
  void clear_has_type();
  void set_has_quantity();
  void clear_has_quantity();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 quantity_;
  int type_;
  friend struct  protobuf_rewards_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ContainerDescription : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WakfuProto.ContainerDescription) */ {
 public:
  ContainerDescription();
  virtual ~ContainerDescription();

  ContainerDescription(const ContainerDescription& from);

  inline ContainerDescription& operator=(const ContainerDescription& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContainerDescription& default_instance();

  static inline const ContainerDescription* internal_default_instance() {
    return reinterpret_cast<const ContainerDescription*>(
               &_ContainerDescription_default_instance_);
  }

  void Swap(ContainerDescription* other);

  // implements Message ----------------------------------------------

  inline ContainerDescription* New() const PROTOBUF_FINAL { return New(NULL); }

  ContainerDescription* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ContainerDescription& from);
  void MergeFrom(const ContainerDescription& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ContainerDescription* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 seasonNumber = 2;
  bool has_seasonnumber() const;
  void clear_seasonnumber();
  static const int kSeasonNumberFieldNumber = 2;
  ::google::protobuf::int32 seasonnumber() const;
  void set_seasonnumber(::google::protobuf::int32 value);

  // required .WakfuProto.RewardsCategories type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::WakfuProto::RewardsCategories type() const;
  void set_type(::WakfuProto::RewardsCategories value);

  // @@protoc_insertion_point(class_scope:WakfuProto.ContainerDescription)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_seasonnumber();
  void clear_has_seasonnumber();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 seasonnumber_;
  int type_;
  friend struct  protobuf_rewards_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// AddRewardsMessage

// map<int64, .WakfuProto.RewardsContainer> rewards = 1;
inline int AddRewardsMessage::rewards_size() const {
  return rewards_.size();
}
inline void AddRewardsMessage::clear_rewards() {
  rewards_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int64, ::WakfuProto::RewardsContainer >&
AddRewardsMessage::rewards() const {
  // @@protoc_insertion_point(field_map:WakfuProto.AddRewardsMessage.rewards)
  return rewards_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int64, ::WakfuProto::RewardsContainer >*
AddRewardsMessage::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_map:WakfuProto.AddRewardsMessage.rewards)
  return rewards_.MutableMap();
}

// -------------------------------------------------------------------

// ConsultRewardsMessage

// required int64 ownerId = 1;
inline bool ConsultRewardsMessage::has_ownerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConsultRewardsMessage::set_has_ownerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConsultRewardsMessage::clear_has_ownerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConsultRewardsMessage::clear_ownerid() {
  ownerid_ = GOOGLE_LONGLONG(0);
  clear_has_ownerid();
}
inline ::google::protobuf::int64 ConsultRewardsMessage::ownerid() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ConsultRewardsMessage.ownerId)
  return ownerid_;
}
inline void ConsultRewardsMessage::set_ownerid(::google::protobuf::int64 value) {
  set_has_ownerid();
  ownerid_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ConsultRewardsMessage.ownerId)
}

// -------------------------------------------------------------------

// ConsultRewardsResultMessage

// required int64 ownerId = 1;
inline bool ConsultRewardsResultMessage::has_ownerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConsultRewardsResultMessage::set_has_ownerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConsultRewardsResultMessage::clear_has_ownerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConsultRewardsResultMessage::clear_ownerid() {
  ownerid_ = GOOGLE_LONGLONG(0);
  clear_has_ownerid();
}
inline ::google::protobuf::int64 ConsultRewardsResultMessage::ownerid() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ConsultRewardsResultMessage.ownerId)
  return ownerid_;
}
inline void ConsultRewardsResultMessage::set_ownerid(::google::protobuf::int64 value) {
  set_has_ownerid();
  ownerid_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ConsultRewardsResultMessage.ownerId)
}

// required .WakfuProto.Rewards rewards = 2;
inline bool ConsultRewardsResultMessage::has_rewards() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConsultRewardsResultMessage::set_has_rewards() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConsultRewardsResultMessage::clear_has_rewards() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConsultRewardsResultMessage::clear_rewards() {
  if (rewards_ != NULL) rewards_->::WakfuProto::Rewards::Clear();
  clear_has_rewards();
}
inline const ::WakfuProto::Rewards& ConsultRewardsResultMessage::rewards() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ConsultRewardsResultMessage.rewards)
  return rewards_ != NULL ? *rewards_
                         : *::WakfuProto::Rewards::internal_default_instance();
}
inline ::WakfuProto::Rewards* ConsultRewardsResultMessage::mutable_rewards() {
  set_has_rewards();
  if (rewards_ == NULL) {
    rewards_ = new ::WakfuProto::Rewards;
  }
  // @@protoc_insertion_point(field_mutable:WakfuProto.ConsultRewardsResultMessage.rewards)
  return rewards_;
}
inline ::WakfuProto::Rewards* ConsultRewardsResultMessage::release_rewards() {
  // @@protoc_insertion_point(field_release:WakfuProto.ConsultRewardsResultMessage.rewards)
  clear_has_rewards();
  ::WakfuProto::Rewards* temp = rewards_;
  rewards_ = NULL;
  return temp;
}
inline void ConsultRewardsResultMessage::set_allocated_rewards(::WakfuProto::Rewards* rewards) {
  delete rewards_;
  rewards_ = rewards;
  if (rewards) {
    set_has_rewards();
  } else {
    clear_has_rewards();
  }
  // @@protoc_insertion_point(field_set_allocated:WakfuProto.ConsultRewardsResultMessage.rewards)
}

// -------------------------------------------------------------------

// ConsumeRewardMessage

// required int64 ownerId = 1;
inline bool ConsumeRewardMessage::has_ownerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConsumeRewardMessage::set_has_ownerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConsumeRewardMessage::clear_has_ownerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConsumeRewardMessage::clear_ownerid() {
  ownerid_ = GOOGLE_LONGLONG(0);
  clear_has_ownerid();
}
inline ::google::protobuf::int64 ConsumeRewardMessage::ownerid() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ConsumeRewardMessage.ownerId)
  return ownerid_;
}
inline void ConsumeRewardMessage::set_ownerid(::google::protobuf::int64 value) {
  set_has_ownerid();
  ownerid_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ConsumeRewardMessage.ownerId)
}

// required int64 containerId = 2;
inline bool ConsumeRewardMessage::has_containerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConsumeRewardMessage::set_has_containerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConsumeRewardMessage::clear_has_containerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConsumeRewardMessage::clear_containerid() {
  containerid_ = GOOGLE_LONGLONG(0);
  clear_has_containerid();
}
inline ::google::protobuf::int64 ConsumeRewardMessage::containerid() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ConsumeRewardMessage.containerId)
  return containerid_;
}
inline void ConsumeRewardMessage::set_containerid(::google::protobuf::int64 value) {
  set_has_containerid();
  containerid_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ConsumeRewardMessage.containerId)
}

// optional int64 rewardId = 3;
inline bool ConsumeRewardMessage::has_rewardid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConsumeRewardMessage::set_has_rewardid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConsumeRewardMessage::clear_has_rewardid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConsumeRewardMessage::clear_rewardid() {
  rewardid_ = GOOGLE_LONGLONG(0);
  clear_has_rewardid();
}
inline ::google::protobuf::int64 ConsumeRewardMessage::rewardid() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ConsumeRewardMessage.rewardId)
  return rewardid_;
}
inline void ConsumeRewardMessage::set_rewardid(::google::protobuf::int64 value) {
  set_has_rewardid();
  rewardid_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ConsumeRewardMessage.rewardId)
}

// -------------------------------------------------------------------

// ConsumeRewardResultMessage

// required int64 ownerId = 1;
inline bool ConsumeRewardResultMessage::has_ownerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConsumeRewardResultMessage::set_has_ownerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConsumeRewardResultMessage::clear_has_ownerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConsumeRewardResultMessage::clear_ownerid() {
  ownerid_ = GOOGLE_LONGLONG(0);
  clear_has_ownerid();
}
inline ::google::protobuf::int64 ConsumeRewardResultMessage::ownerid() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ConsumeRewardResultMessage.ownerId)
  return ownerid_;
}
inline void ConsumeRewardResultMessage::set_ownerid(::google::protobuf::int64 value) {
  set_has_ownerid();
  ownerid_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ConsumeRewardResultMessage.ownerId)
}

// required .WakfuProto.RewardsContainer container = 2;
inline bool ConsumeRewardResultMessage::has_container() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConsumeRewardResultMessage::set_has_container() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConsumeRewardResultMessage::clear_has_container() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConsumeRewardResultMessage::clear_container() {
  if (container_ != NULL) container_->::WakfuProto::RewardsContainer::Clear();
  clear_has_container();
}
inline const ::WakfuProto::RewardsContainer& ConsumeRewardResultMessage::container() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ConsumeRewardResultMessage.container)
  return container_ != NULL ? *container_
                         : *::WakfuProto::RewardsContainer::internal_default_instance();
}
inline ::WakfuProto::RewardsContainer* ConsumeRewardResultMessage::mutable_container() {
  set_has_container();
  if (container_ == NULL) {
    container_ = new ::WakfuProto::RewardsContainer;
  }
  // @@protoc_insertion_point(field_mutable:WakfuProto.ConsumeRewardResultMessage.container)
  return container_;
}
inline ::WakfuProto::RewardsContainer* ConsumeRewardResultMessage::release_container() {
  // @@protoc_insertion_point(field_release:WakfuProto.ConsumeRewardResultMessage.container)
  clear_has_container();
  ::WakfuProto::RewardsContainer* temp = container_;
  container_ = NULL;
  return temp;
}
inline void ConsumeRewardResultMessage::set_allocated_container(::WakfuProto::RewardsContainer* container) {
  delete container_;
  container_ = container;
  if (container) {
    set_has_container();
  } else {
    clear_has_container();
  }
  // @@protoc_insertion_point(field_set_allocated:WakfuProto.ConsumeRewardResultMessage.container)
}

// -------------------------------------------------------------------

// Rewards

// repeated .WakfuProto.RewardsContainer rewards = 1;
inline int Rewards::rewards_size() const {
  return rewards_.size();
}
inline void Rewards::clear_rewards() {
  rewards_.Clear();
}
inline const ::WakfuProto::RewardsContainer& Rewards::rewards(int index) const {
  // @@protoc_insertion_point(field_get:WakfuProto.Rewards.rewards)
  return rewards_.Get(index);
}
inline ::WakfuProto::RewardsContainer* Rewards::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:WakfuProto.Rewards.rewards)
  return rewards_.Mutable(index);
}
inline ::WakfuProto::RewardsContainer* Rewards::add_rewards() {
  // @@protoc_insertion_point(field_add:WakfuProto.Rewards.rewards)
  return rewards_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::WakfuProto::RewardsContainer >*
Rewards::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:WakfuProto.Rewards.rewards)
  return &rewards_;
}
inline const ::google::protobuf::RepeatedPtrField< ::WakfuProto::RewardsContainer >&
Rewards::rewards() const {
  // @@protoc_insertion_point(field_list:WakfuProto.Rewards.rewards)
  return rewards_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// RewardsContainer

// required int64 id = 1;
inline bool RewardsContainer::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RewardsContainer::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RewardsContainer::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RewardsContainer::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 RewardsContainer::id() const {
  // @@protoc_insertion_point(field_get:WakfuProto.RewardsContainer.id)
  return id_;
}
inline void RewardsContainer::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.RewardsContainer.id)
}

// required .WakfuProto.ContainerDescription description = 2;
inline bool RewardsContainer::has_description() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RewardsContainer::set_has_description() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RewardsContainer::clear_has_description() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RewardsContainer::clear_description() {
  if (description_ != NULL) description_->::WakfuProto::ContainerDescription::Clear();
  clear_has_description();
}
inline const ::WakfuProto::ContainerDescription& RewardsContainer::description() const {
  // @@protoc_insertion_point(field_get:WakfuProto.RewardsContainer.description)
  return description_ != NULL ? *description_
                         : *::WakfuProto::ContainerDescription::internal_default_instance();
}
inline ::WakfuProto::ContainerDescription* RewardsContainer::mutable_description() {
  set_has_description();
  if (description_ == NULL) {
    description_ = new ::WakfuProto::ContainerDescription;
  }
  // @@protoc_insertion_point(field_mutable:WakfuProto.RewardsContainer.description)
  return description_;
}
inline ::WakfuProto::ContainerDescription* RewardsContainer::release_description() {
  // @@protoc_insertion_point(field_release:WakfuProto.RewardsContainer.description)
  clear_has_description();
  ::WakfuProto::ContainerDescription* temp = description_;
  description_ = NULL;
  return temp;
}
inline void RewardsContainer::set_allocated_description(::WakfuProto::ContainerDescription* description) {
  delete description_;
  description_ = description;
  if (description) {
    set_has_description();
  } else {
    clear_has_description();
  }
  // @@protoc_insertion_point(field_set_allocated:WakfuProto.RewardsContainer.description)
}

// map<int32, .WakfuProto.Reward> reward = 3;
inline int RewardsContainer::reward_size() const {
  return reward_.size();
}
inline void RewardsContainer::clear_reward() {
  reward_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::WakfuProto::Reward >&
RewardsContainer::reward() const {
  // @@protoc_insertion_point(field_map:WakfuProto.RewardsContainer.reward)
  return reward_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::WakfuProto::Reward >*
RewardsContainer::mutable_reward() {
  // @@protoc_insertion_point(field_mutable_map:WakfuProto.RewardsContainer.reward)
  return reward_.MutableMap();
}

// optional int64 characterId = 4;
inline bool RewardsContainer::has_characterid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RewardsContainer::set_has_characterid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RewardsContainer::clear_has_characterid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RewardsContainer::clear_characterid() {
  characterid_ = GOOGLE_LONGLONG(0);
  clear_has_characterid();
}
inline ::google::protobuf::int64 RewardsContainer::characterid() const {
  // @@protoc_insertion_point(field_get:WakfuProto.RewardsContainer.characterId)
  return characterid_;
}
inline void RewardsContainer::set_characterid(::google::protobuf::int64 value) {
  set_has_characterid();
  characterid_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.RewardsContainer.characterId)
}

// -------------------------------------------------------------------

// Reward

// required int64 id = 1;
inline bool Reward::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Reward::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Reward::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Reward::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 Reward::id() const {
  // @@protoc_insertion_point(field_get:WakfuProto.Reward.id)
  return id_;
}
inline void Reward::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.Reward.id)
}

// required .WakfuProto.RewardsTypes type = 2;
inline bool Reward::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Reward::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Reward::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Reward::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::WakfuProto::RewardsTypes Reward::type() const {
  // @@protoc_insertion_point(field_get:WakfuProto.Reward.type)
  return static_cast< ::WakfuProto::RewardsTypes >(type_);
}
inline void Reward::set_type(::WakfuProto::RewardsTypes value) {
  assert(::WakfuProto::RewardsTypes_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.Reward.type)
}

// required int32 quantity = 4;
inline bool Reward::has_quantity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Reward::set_has_quantity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Reward::clear_has_quantity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Reward::clear_quantity() {
  quantity_ = 0;
  clear_has_quantity();
}
inline ::google::protobuf::int32 Reward::quantity() const {
  // @@protoc_insertion_point(field_get:WakfuProto.Reward.quantity)
  return quantity_;
}
inline void Reward::set_quantity(::google::protobuf::int32 value) {
  set_has_quantity();
  quantity_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.Reward.quantity)
}

// -------------------------------------------------------------------

// ContainerDescription

// required .WakfuProto.RewardsCategories type = 1;
inline bool ContainerDescription::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContainerDescription::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContainerDescription::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContainerDescription::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::WakfuProto::RewardsCategories ContainerDescription::type() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ContainerDescription.type)
  return static_cast< ::WakfuProto::RewardsCategories >(type_);
}
inline void ContainerDescription::set_type(::WakfuProto::RewardsCategories value) {
  assert(::WakfuProto::RewardsCategories_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ContainerDescription.type)
}

// optional int32 seasonNumber = 2;
inline bool ContainerDescription::has_seasonnumber() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContainerDescription::set_has_seasonnumber() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContainerDescription::clear_has_seasonnumber() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContainerDescription::clear_seasonnumber() {
  seasonnumber_ = 0;
  clear_has_seasonnumber();
}
inline ::google::protobuf::int32 ContainerDescription::seasonnumber() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ContainerDescription.seasonNumber)
  return seasonnumber_;
}
inline void ContainerDescription::set_seasonnumber(::google::protobuf::int32 value) {
  set_has_seasonnumber();
  seasonnumber_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ContainerDescription.seasonNumber)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace WakfuProto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::WakfuProto::RewardsCategories> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WakfuProto::RewardsCategories>() {
  return ::WakfuProto::RewardsCategories_descriptor();
}
template <> struct is_proto_enum< ::WakfuProto::RewardsTypes> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WakfuProto::RewardsTypes>() {
  return ::WakfuProto::RewardsTypes_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rewards_2eproto__INCLUDED
