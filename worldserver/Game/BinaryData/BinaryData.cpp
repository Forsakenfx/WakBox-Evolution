#include "BinaryData.h"

AchievementStorage<AchievementBinaryData> sAchievementStorage;
AchievementCategoryStorage<AchievementCategoryBinaryData> sAchievementCategoryStorage;
AchievementListStorage<AchievementListBinaryData> sAchievementListStorage;
AchievementVariableStorage<AchievementVariableBinaryData> sAchievementVariableStorage;
AlmanachDateStorage<AlmanachDateBinaryData> sAlmanachDateStorage;
AlmanachEntryStorage<AlmanachEntryBinaryData> sAlmanachEntryStorage;
AptitudeStorage<AptitudeBinaryData> sAptitudeStorage;
AptitudeBonusStorage<AptitudeBonusBinaryData> sAptitudeBonusStorage;
AptitudeBonusCategoryStorage<AptitudeBonusCategoryBinaryData> sAptitudeBonusCategoryStorage;
ArcadeChallengeStorage<ArcadeChallengeBinaryData> sArcadeChallengeStorage;
ArcadeDungeonStorage<ArcadeDungeonBinaryData> sArcadeDungeonStorage;
AreaEffectStorage<AreaEffectBinaryData> sAreaEffectStorage;
AudioMarkerInteractiveElementParamStorage<AudioMarkerInteractiveElementParamBinaryData> sAudioMarkerInteractiveElementParamStorage;
AvatarBreedStorage<AvatarBreedBinaryData> sAvatarBreedStorage;
AvatarBreedColorsStorage<AvatarBreedColorsBinaryData> sAvatarBreedColorsStorage;
BackgroundFeedbackStorage<BackgroundFeedbackBinaryData> sBackgroundFeedbackStorage;
BackgroundInteractiveElementParamStorage<BackgroundInteractiveElementParamBinaryData> sBackgroundInteractiveElementParamStorage;
BagsStorage<BagsBinaryData> sBagsStorage;
BoardInteractiveElementParamStorage<BoardInteractiveElementParamBinaryData> sBoardInteractiveElementParamStorage;
BoatStorage<BoatBinaryData> sBoatStorage;
BoatLinkStorage<BoatLinkBinaryData> sBoatLinkStorage;
BookcaseInteractiveElementParamStorage<BookcaseInteractiveElementParamBinaryData> sBookcaseInteractiveElementParamStorage;
CannonStorage<CannonBinaryData> sCannonStorage;
CensoredEntryStorage<CensoredEntryBinaryData> sCensoredEntryStorage;
ChallengeLootListStorage<ChallengeLootListBinaryData> sChallengeLootListStorage;
ChaosParamStorage<ChaosParamBinaryData> sChaosParamStorage;
CharacGainPerLevelStorage<CharacGainPerLevelBinaryData> sCharacGainPerLevelStorage;
CitizenRankStorage<CitizenRankBinaryData> sCitizenRankStorage;
ClientEventStorage<ClientEventBinaryData> sClientEventStorage;
ClimateBonusStorage<ClimateBonusBinaryData> sClimateBonusStorage;
ClimateBonusListStorage<ClimateBonusListBinaryData> sClimateBonusListStorage;
CollectInteractiveElementParamStorage<CollectInteractiveElementParamBinaryData> sCollectInteractiveElementParamStorage;
CompanionItemStorage<CompanionItemBinaryData> sCompanionItemStorage;
CraftStorage<CraftBinaryData> sCraftStorage;
CraftInteractiveElementParamStorage<CraftInteractiveElementParamBinaryData> sCraftInteractiveElementParamStorage;
DecorationInteractiveElementParamStorage<DecorationInteractiveElementParamBinaryData> sDecorationInteractiveElementParamStorage;
DestructibleElementParamStorage<DestructibleElementParamBinaryData> sDestructibleElementParamStorage;
DialogStorage<DialogBinaryData> sDialogStorage;
DoorInteractiveElementParamStorage<DoorInteractiveElementParamBinaryData> sDoorInteractiveElementParamStorage;
DragoStorage<DragoBinaryData> sDragoStorage;
DungeonStorage<DungeonBinaryData> sDungeonStorage;
DungeonDisplayerInteractiveElementParamStorage<DungeonDisplayerInteractiveElementParamBinaryData> sDungeonDisplayerInteractiveElementParamStorage;
EffectGroupStorage<EffectGroupBinaryData> sEffectGroupStorage;
EmoteStorage<EmoteBinaryData> sEmoteStorage;
EquipableDummyInteractiveElementParamStorage<EquipableDummyInteractiveElementParamBinaryData> sEquipableDummyInteractiveElementParamStorage;
ExchangeInteractiveElementParamStorage<ExchangeInteractiveElementParamBinaryData> sExchangeInteractiveElementParamStorage;
FightChallengeStorage<FightChallengeBinaryData> sFightChallengeStorage;
FightChallengeMonsterStorage<FightChallengeMonsterBinaryData> sFightChallengeMonsterStorage;
GemAndPowderStorage<GemAndPowderBinaryData> sGemAndPowderStorage;
GemBackgroundInteractiveElementParamStorage<GemBackgroundInteractiveElementParamBinaryData> sGemBackgroundInteractiveElementParamStorage;
GenericActivableInteractiveElementParamStorage<GenericActivableInteractiveElementParamBinaryData> sGenericActivableInteractiveElementParamStorage;
GroundStorage<GroundBinaryData> sGroundStorage;
HavenBagModelViewStorage<HavenBagModelViewBinaryData> sHavenBagModelViewStorage;
HavenWorldBoardInteractiveElementParamStorage<HavenWorldBoardInteractiveElementParamBinaryData> sHavenWorldBoardInteractiveElementParamStorage;
HavenWorldBuildingStorage<HavenWorldBuildingBinaryData> sHavenWorldBuildingStorage;
HavenWorldBuildingCatalogStorage<HavenWorldBuildingCatalogBinaryData> sHavenWorldBuildingCatalogStorage;
HavenWorldBuildingDecoStorage<HavenWorldBuildingDecoBinaryData> sHavenWorldBuildingDecoStorage;
HavenWorldBuildingEvolutionStorage<HavenWorldBuildingEvolutionBinaryData> sHavenWorldBuildingEvolutionStorage;
HavenWorldBuildingVisualDefinitionStorage<HavenWorldBuildingVisualDefinitionBinaryData> sHavenWorldBuildingVisualDefinitionStorage;
HavenWorldDefinitionStorage<HavenWorldDefinitionBinaryData> sHavenWorldDefinitionStorage;
HavenWorldPatchDefinitionStorage<HavenWorldPatchDefinitionBinaryData> sHavenWorldPatchDefinitionStorage;
InstanceInteractionLevelStorage<InstanceInteractionLevelBinaryData> sInstanceInteractionLevelStorage;
InteractiveElementModelStorage<InteractiveElementModelBinaryData> sInteractiveElementModelStorage;
InteractiveElementTemplateStorage<InteractiveElementTemplateBinaryData> sInteractiveElementTemplateStorage;
ItemStorage<ItemBinaryData> sItemStorage;
ItemSetStorage<ItemSetBinaryData> sItemSetStorage;
ItemTypeStorage<ItemTypeBinaryData> sItemTypeStorage;
KrosmozFigureStorage<KrosmozFigureBinaryData> sKrosmozFigureStorage;
KrosmozGameBoardInteractiveElementParamStorage<KrosmozGameBoardInteractiveElementParamBinaryData> sKrosmozGameBoardInteractiveElementParamStorage;
KrosmozGameCollectionInteractiveElementParamStorage<KrosmozGameCollectionInteractiveElementParamBinaryData> sKrosmozGameCollectionInteractiveElementParamStorage;
LightLootListStorage<LightLootListBinaryData> sLightLootListStorage;
LockStorage<LockBinaryData> sLockStorage;
LootChestInteractiveElementParamStorage<LootChestInteractiveElementParamBinaryData> sLootChestInteractiveElementParamStorage;
MagiCraftLootListStorage<MagiCraftLootListBinaryData> sMagiCraftLootListStorage;
MarketBoardInteractiveElementParamStorage<MarketBoardInteractiveElementParamBinaryData> sMarketBoardInteractiveElementParamStorage;
MonsterStorage<MonsterBinaryData> sMonsterStorage;
MonsterTypeStorage<MonsterTypeBinaryData> sMonsterTypeStorage;
MonsterTypeDungeonStorage<MonsterTypeDungeonBinaryData> sMonsterTypeDungeonStorage;
MonsterTypePestStorage<MonsterTypePestBinaryData> sMonsterTypePestStorage;
MonsterTypeRelashionshipStorage<MonsterTypeRelashionshipBinaryData> sMonsterTypeRelashionshipStorage;
NationColorsStorage<NationColorsBinaryData> sNationColorsStorage;
NationLawStorage<NationLawBinaryData> sNationLawStorage;
NationRankStorage<NationRankBinaryData> sNationRankStorage;
PetStorage<PetBinaryData> sPetStorage;
ProtectorStorage<ProtectorBinaryData> sProtectorStorage;
ProtectorBuffStorage<ProtectorBuffBinaryData> sProtectorBuffStorage;
ProtectorBuffListStorage<ProtectorBuffListBinaryData> sProtectorBuffListStorage;
ProtectorEcosystemProtectionStorage<ProtectorEcosystemProtectionBinaryData> sProtectorEcosystemProtectionStorage;
RecipeStorage<RecipeBinaryData> sRecipeStorage;
RecycleMachineInteractiveElementParamStorage<RecycleMachineInteractiveElementParamBinaryData> sRecycleMachineInteractiveElementParamStorage;
ResourceStorage<ResourceBinaryData> sResourceStorage;
RewardDisplayerInteractiveElementParamStorage<RewardDisplayerInteractiveElementParamBinaryData> sRewardDisplayerInteractiveElementParamStorage;
SecretStorage<SecretBinaryData> sSecretStorage;
SkillActionStorage<SkillActionBinaryData> sSkillActionStorage;
SkillStorage<SkillBinaryData> sSkillStorage;
SpellStorage<SpellBinaryData> sSpellStorage;
StateStorage<StateBinaryData> sStateStorage;
StaticEffectStorage<StaticEffectBinaryData> sStaticEffectStorage;
StoolInteractiveElementParamStorage<StoolInteractiveElementParamBinaryData> sStoolInteractiveElementParamStorage;
StorageBoxStorage<StorageBoxBinaryData> sStorageBoxStorage;
StreetLightInteractiveElementParamStorage<StreetLightInteractiveElementParamBinaryData> sStreetLightInteractiveElementParamStorage;
TeleporterStorage<TeleporterBinaryData> sTeleporterStorage;
TimelineBuffListStorage<TimelineBuffListBinaryData> sTimelineBuffListStorage;
TravelLoadingStorage<TravelLoadingBinaryData> sTravelLoadingStorage;
TreasureStorage<TreasureBinaryData> sTreasureStorage;
TutorialStorage<TutorialBinaryData> sTutorialStorage;
ZaapStorage<ZaapBinaryData> sZaapStorage;
ZaapLinkStorage<ZaapLinkBinaryData> sZaapLinkStorage;

template<class T>
inline void LoadStorage(BinaryDataStorage<T>& storage, QString filename)
{
    QFile file("bdata/" + filename);
    if (!file.open(QIODevice::ReadOnly))
    {
        // todo error handling
        qDebug() << "BinaryStorage file : " << filename << " not found!";
        return;
    }

    QByteArray bdata = file.readAll();
    quint8 fileId = (quint8)QFileInfo(filename).fileName().split(".").at(0).toUInt();

    storage.InitWith(bdata, fileId);
    storage.Load();
}

void LoadBinaryStorage()
{
    LoadStorage(sAchievementStorage, "1.bin");
    LoadStorage(sAchievementVariableStorage, "2.bin");
    LoadStorage(sAchievementCategoryStorage, "3.bin");
    LoadStorage(sAreaEffectStorage, "4.bin");
    LoadStorage(sAudioMarkerInteractiveElementParamStorage, "5.bin");
    LoadStorage(sBackgroundFeedbackStorage, "6.bin");
    LoadStorage(sBackgroundInteractiveElementParamStorage, "7.bin");
    LoadStorage(sBoatStorage, "8.bin");
    LoadStorage(sBoatLinkStorage, "9.bin");
    LoadStorage(sBombSpecialZoneStorage, "10.bin");
    LoadStorage(sBonusPointDistributionTableStorage, "11.bin");
    LoadStorage(sCannonStorage, "12.bin");
    LoadStorage(sCensoredEntryStorage, "13.bin");
    LoadStorage(sChaosStorage, "14.bin");
    LoadStorage(sCharacBaseStorage, "15.bin");
    LoadStorage(sCharacGainPerLevelStorage, "16.bin");
    LoadStorage(sCitizenRankStorage, "17.bin");
    LoadStorage(sClientEventStorage, "18.bin");
    LoadStorage(sClimateStorage, "19.bin");
    LoadStorage(sClimateBonusStorage, "20.bin");
    LoadStorage(sClimateBonusListStorage, "21.bin");
    LoadStorage(sCollectInteractiveElementParamStorage, "22.bin");
    LoadStorage(sCraftStorage, "23.bin");
    LoadStorage(sCraftInteractiveElementParamStorage, "24.bin");
    LoadStorage(sDecorationInteractiveElementParamStorage, "25.bin");
    LoadStorage(sDestructibleInteractiveElementParamStorage, "26.bin");
    LoadStorage(sDialogStorage, "27.bin");
    LoadStorage(sDragoStorage, "28.bin");
    LoadStorage(sEffectGroupStorage, "29.bin");
    LoadStorage(sGemBackgroundInteractiveElementParamStorage, "30.bin");
    LoadStorage(sGenericActivableInteractiveElementParamStorage, "31.bin");
    LoadStorage(sGroundStorage, "32.bin");
    LoadStorage(sHavenBagModelViewStorage, "33.bin");
    LoadStorage(sInteractiveElementModelStorage, "34.bin");
    LoadStorage(sItemStorage, "35.bin");
    LoadStorage(sItemSetStorage, "36.bin");
    LoadStorage(sItemTypeStorage, "37.bin");
    LoadStorage(sLootChestInteractiveElementParamStorage, "38.bin");
    LoadStorage(sLootListStorage, "39.bin");
    LoadStorage(sMarketStorage, "40.bin");
    LoadStorage(sMarketBoardInteractiveElementParamStorage, "41.bin");
    LoadStorage(sMonsterStorage, "42.bin");
    LoadStorage(sMonsterBlahblahStorage, "43.bin");
    LoadStorage(sMonsterFightBubbleStorage, "44.bin");
    LoadStorage(sMonsterGroupTemplateStorage, "45.bin");
    LoadStorage(sMonsterGroupTemplateTableStorage, "46.bin");
    LoadStorage(sMonsterTypeStorage, "47.bin");
    LoadStorage(sMonsterTypePestStorage, "48.bin");
    LoadStorage(sMonsterTypeRelashionshipStorage, "49.bin");
    LoadStorage(sNationStorage, "50.bin");
    LoadStorage(sNationColorsStorage, "51.bin");
    LoadStorage(sNationLawStorage, "52.bin");
    LoadStorage(sNationRankStorage, "53.bin");
    LoadStorage(sProtectorStorage, "54.bin");
    LoadStorage(sProtectorBuffStorage, "55.bin");
    LoadStorage(sProtectorBuffListStorage, "56.bin");
    LoadStorage(sProtectorEcosystemProtectionStorage, "57.bin");
    LoadStorage(sRecipeStorage, "58.bin");
    LoadStorage(sRegistrationEventStorage, "59.bin");
    LoadStorage(sResourceStorage, "60.bin");
    LoadStorage(sResourceTypeStorage, "61.bin");
    LoadStorage(sScenarioStorage, "62.bin");
    LoadStorage(sScenarioChallengeStorage, "63.bin");
    LoadStorage(sSkillStorage, "64.bin");
    LoadStorage(sSkillActionStorage, "65.bin");
    LoadStorage(sSpellStorage, "66.bin");
    LoadStorage(sStateStorage, "67.bin");
    LoadStorage(sStaticEffectStorage, "68.bin");
    LoadStorage(sStoolInteractiveElementParamStorage, "69.bin");
    LoadStorage(sStorageBoxStorage, "70.bin");
    LoadStorage(sStreetLightInteractiveElementParamStorage, "71.bin");
    LoadStorage(sTeleporterStorage, "72.bin");
    LoadStorage(sTimelineBuffListStorage, "73.bin");
    LoadStorage(sUserGroupTemplateStorage, "74.bin");
    LoadStorage(sWorldLootListStorage, "75.bin");
    LoadStorage(sZaapStorage, "76.bin");
    LoadStorage(sZaapLinkStorage, "77.bin");
    LoadStorage(sAptitudeStorage, "78.bin");
    LoadStorage(sBoardInteractiveElementParamStorage, "79.bin");
    LoadStorage(sChallengeLootListStorage, "80.bin");
    LoadStorage(sEmoteStorage, "81.bin");
    LoadStorage(sExchangeInteractiveElementParamStorage, "82.bin");
    LoadStorage(sDisassemblingDropsStorage, "83.bin");
    LoadStorage(sDisassemblingDropRateStorage, "84.bin");
    LoadStorage(sRecycleMachineInteractiveElementParamStorage, "85.bin");
    LoadStorage(sAvatarBreedStorage, "86.bin");
    LoadStorage(sArcadeDungeonStorage, "87.bin");
    LoadStorage(sArcadeEventStorage, "88.bin");
    LoadStorage(sArcadeBonusStorage, "89.bin");
    LoadStorage(sArcadeChallengeStorage, "90.bin");
    LoadStorage(sArcadeWaveCompositionStorage, "91.bin");
    LoadStorage(sGenericInteractiveElementParamStorage, "92.bin");
    LoadStorage(sStatueInteractiveElementParamStorage, "93.bin");
    LoadStorage(sLadderBoardInteractiveElementParamStorage, "94.bin");
    LoadStorage(sDungeonDisplayerInteractiveElementParamStorage, "95.bin");
    LoadStorage(sRewardDisplayerInteractiveElementParamStorage, "96.bin");
    LoadStorage(sHavenWorldBuildingStorage, "97.bin");
    LoadStorage(sAlmanachEntryStorage, "98.bin");
    LoadStorage(sAlmanachDateStorage, "99.bin");
    LoadStorage(sHavenWorldDefinitionStorage, "100.bin");
    LoadStorage(sHavenWorldPatchDefinitionStorage, "101.bin");
    LoadStorage(sHavenWorldBuildingDefinitionStorage, "102.bin");
    LoadStorage(sHavenWorldBuildingEvolutionStorage, "103.bin");
    LoadStorage(sHavenWorldBuildingCatalogStorage, "104.bin");
    LoadStorage(sBookcaseInteractiveElementParamStorage, "105.bin");
    LoadStorage(sEquipableDummyInteractiveElementParamStorage, "106.bin");
    LoadStorage(sHavenWorldBuildingVisualDefinitionStorage, "107.bin");
    LoadStorage(sKrosmozGameBoardInteractiveElementParamStorage, "108.bin");
    LoadStorage(sKrosmozGameCollectionInteractiveElementParamStorage, "109.bin");
    LoadStorage(sHavenWorldEntryInteractiveElementParamStorage, "110.bin");
    LoadStorage(sHavenWorldBoardInteractiveElementParamStorage, "111.bin");
    LoadStorage(sKrosmozFigureItemLinkStorage, "112.bin");
    LoadStorage(sKrosmozFigureStorage, "113.bin");
    LoadStorage(sLightLootListStorage, "114.bin");
    LoadStorage(sAchievementListStorage, "115.bin");
    LoadStorage(sAvatarBreedColorsStorage, "116.bin");
    LoadStorage(sPetStorage, "117.bin");
    LoadStorage(sDoorInteractiveElementParamStorage, "118.bin");
    LoadStorage(sDungeonStorage, "119.bin");
    LoadStorage(sLockStorage, "120.bin");
    LoadStorage(sBagsStorage, "121.bin");
    LoadStorage(sTreasureStorage, "122.bin");
    LoadStorage(sMagicraftLootListStorage, "123.bin");
    LoadStorage(sGemAndPowderStorage, "124.bin");
    LoadStorage(sDungeonTpStorage, "125.bin");
    LoadStorage(sHavenWorldBuildingDecoDefinitionStorage, "126.bin");
    LoadStorage(sMonsterGroupTemplateTableHwStorage, "127.bin");
    LoadStorage(sInteractiveElementTemplateStorage, "128.bin");
    LoadStorage(sTutorialStorage, "129.bin");
    LoadStorage(sFightChallengeStorage, "130.bin");
    LoadStorage(sCompanionItemStorage, "131.bin");
    LoadStorage(sFightChallengeMonsterStorage, "132.bin");
    LoadStorage(sSecretStorage, "133.bin");
    LoadStorage(sInstanceInteractionLevelStorage, "134.bin");
    LoadStorage(sAbilityStorage, "135.bin");
    LoadStorage(sFixedAbilityCategoryStorage, "136.bin");
    LoadStorage(sMonsterTypeDungeonStorage, "137.bin");
}
