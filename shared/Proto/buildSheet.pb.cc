// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: buildSheet.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "buildSheet.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace WakfuProto {
class ProtoBuildSheetSetDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ProtoBuildSheetSet> {
} _ProtoBuildSheetSet_default_instance_;
class ProtoBuildSheetDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ProtoBuildSheet> {
} _ProtoBuildSheet_default_instance_;

namespace protobuf_buildSheet_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoBuildSheetSet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoBuildSheetSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoBuildSheetSet, activesheetindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoBuildSheetSet, buildsheets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoBuildSheetSet, automaticsheet_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoBuildSheet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoBuildSheet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoBuildSheet, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoBuildSheet, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoBuildSheet, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoBuildSheet, spelldeckindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoBuildSheet, aptitudesheetindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoBuildSheet, equipmentsheetindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoBuildSheet, iconindex_),
  1,
  0,
  2,
  3,
  4,
  5,
  6,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(ProtoBuildSheetSet)},
  { 10, 21, sizeof(ProtoBuildSheet)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProtoBuildSheetSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProtoBuildSheet_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "buildSheet.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _ProtoBuildSheetSet_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ProtoBuildSheet_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ProtoBuildSheetSet_default_instance_.DefaultConstruct();
  _ProtoBuildSheet_default_instance_.DefaultConstruct();
  _ProtoBuildSheetSet_default_instance_.get_mutable()->automaticsheet_ = const_cast< ::WakfuProto::ProtoBuildSheet*>(
      ::WakfuProto::ProtoBuildSheet::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\020buildSheet.proto\022\nWakfuProto\"\225\001\n\022Proto"
      "BuildSheetSet\022\030\n\020activeSheetIndex\030\001 \002(\005\022"
      "0\n\013buildSheets\030\002 \003(\0132\033.WakfuProto.ProtoB"
      "uildSheet\0223\n\016automaticSheet\030\003 \002(\0132\033.Wakf"
      "uProto.ProtoBuildSheet\"\241\001\n\017ProtoBuildShe"
      "et\022\r\n\005index\030\001 \002(\005\022\014\n\004name\030\002 \002(\t\022\r\n\005level"
      "\030\003 \002(\005\022\026\n\016spellDeckIndex\030\004 \002(\005\022\032\n\022aptitu"
      "deSheetIndex\030\005 \002(\005\022\033\n\023equipmentSheetInde"
      "x\030\006 \002(\005\022\021\n\ticonIndex\030\007 \002(\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 346);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "buildSheet.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_buildSheet_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoBuildSheetSet::kActiveSheetIndexFieldNumber;
const int ProtoBuildSheetSet::kBuildSheetsFieldNumber;
const int ProtoBuildSheetSet::kAutomaticSheetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoBuildSheetSet::ProtoBuildSheetSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_buildSheet_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WakfuProto.ProtoBuildSheetSet)
}
ProtoBuildSheetSet::ProtoBuildSheetSet(const ProtoBuildSheetSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      buildsheets_(from.buildsheets_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_automaticsheet()) {
    automaticsheet_ = new ::WakfuProto::ProtoBuildSheet(*from.automaticsheet_);
  } else {
    automaticsheet_ = NULL;
  }
  activesheetindex_ = from.activesheetindex_;
  // @@protoc_insertion_point(copy_constructor:WakfuProto.ProtoBuildSheetSet)
}

void ProtoBuildSheetSet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&automaticsheet_, 0, reinterpret_cast<char*>(&activesheetindex_) -
    reinterpret_cast<char*>(&automaticsheet_) + sizeof(activesheetindex_));
}

ProtoBuildSheetSet::~ProtoBuildSheetSet() {
  // @@protoc_insertion_point(destructor:WakfuProto.ProtoBuildSheetSet)
  SharedDtor();
}

void ProtoBuildSheetSet::SharedDtor() {
  if (this != internal_default_instance()) {
    delete automaticsheet_;
  }
}

void ProtoBuildSheetSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoBuildSheetSet::descriptor() {
  protobuf_buildSheet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_buildSheet_2eproto::file_level_metadata[0].descriptor;
}

const ProtoBuildSheetSet& ProtoBuildSheetSet::default_instance() {
  protobuf_buildSheet_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProtoBuildSheetSet* ProtoBuildSheetSet::New(::google::protobuf::Arena* arena) const {
  ProtoBuildSheetSet* n = new ProtoBuildSheetSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoBuildSheetSet::Clear() {
// @@protoc_insertion_point(message_clear_start:WakfuProto.ProtoBuildSheetSet)
  buildsheets_.Clear();
  if (has_automaticsheet()) {
    GOOGLE_DCHECK(automaticsheet_ != NULL);
    automaticsheet_->::WakfuProto::ProtoBuildSheet::Clear();
  }
  activesheetindex_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProtoBuildSheetSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WakfuProto.ProtoBuildSheetSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 activeSheetIndex = 1;
      case 1: {
        if (tag == 8u) {
          set_has_activesheetindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activesheetindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .WakfuProto.ProtoBuildSheet buildSheets = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_buildsheets()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // required .WakfuProto.ProtoBuildSheet automaticSheet = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_automaticsheet()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WakfuProto.ProtoBuildSheetSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WakfuProto.ProtoBuildSheetSet)
  return false;
#undef DO_
}

void ProtoBuildSheetSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WakfuProto.ProtoBuildSheetSet)
  // required int32 activeSheetIndex = 1;
  if (has_activesheetindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activesheetindex(), output);
  }

  // repeated .WakfuProto.ProtoBuildSheet buildSheets = 2;
  for (unsigned int i = 0, n = this->buildsheets_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->buildsheets(i), output);
  }

  // required .WakfuProto.ProtoBuildSheet automaticSheet = 3;
  if (has_automaticsheet()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->automaticsheet_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WakfuProto.ProtoBuildSheetSet)
}

::google::protobuf::uint8* ProtoBuildSheetSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WakfuProto.ProtoBuildSheetSet)
  // required int32 activeSheetIndex = 1;
  if (has_activesheetindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activesheetindex(), target);
  }

  // repeated .WakfuProto.ProtoBuildSheet buildSheets = 2;
  for (unsigned int i = 0, n = this->buildsheets_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->buildsheets(i), false, target);
  }

  // required .WakfuProto.ProtoBuildSheet automaticSheet = 3;
  if (has_automaticsheet()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->automaticsheet_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WakfuProto.ProtoBuildSheetSet)
  return target;
}

size_t ProtoBuildSheetSet::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:WakfuProto.ProtoBuildSheetSet)
  size_t total_size = 0;

  if (has_automaticsheet()) {
    // required .WakfuProto.ProtoBuildSheet automaticSheet = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->automaticsheet_);
  }

  if (has_activesheetindex()) {
    // required int32 activeSheetIndex = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->activesheetindex());
  }

  return total_size;
}
size_t ProtoBuildSheetSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WakfuProto.ProtoBuildSheetSet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .WakfuProto.ProtoBuildSheet automaticSheet = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->automaticsheet_);

    // required int32 activeSheetIndex = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->activesheetindex());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .WakfuProto.ProtoBuildSheet buildSheets = 2;
  {
    unsigned int count = this->buildsheets_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->buildsheets(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoBuildSheetSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WakfuProto.ProtoBuildSheetSet)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoBuildSheetSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoBuildSheetSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WakfuProto.ProtoBuildSheetSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WakfuProto.ProtoBuildSheetSet)
    MergeFrom(*source);
  }
}

void ProtoBuildSheetSet::MergeFrom(const ProtoBuildSheetSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WakfuProto.ProtoBuildSheetSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  buildsheets_.MergeFrom(from.buildsheets_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_automaticsheet()) {
      mutable_automaticsheet()->::WakfuProto::ProtoBuildSheet::MergeFrom(from.automaticsheet());
    }
    if (from.has_activesheetindex()) {
      set_activesheetindex(from.activesheetindex());
    }
  }
}

void ProtoBuildSheetSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WakfuProto.ProtoBuildSheetSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoBuildSheetSet::CopyFrom(const ProtoBuildSheetSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WakfuProto.ProtoBuildSheetSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoBuildSheetSet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->buildsheets())) return false;
  if (has_automaticsheet()) {
    if (!this->automaticsheet_->IsInitialized()) return false;
  }
  return true;
}

void ProtoBuildSheetSet::Swap(ProtoBuildSheetSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoBuildSheetSet::InternalSwap(ProtoBuildSheetSet* other) {
  buildsheets_.UnsafeArenaSwap(&other->buildsheets_);
  std::swap(automaticsheet_, other->automaticsheet_);
  std::swap(activesheetindex_, other->activesheetindex_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoBuildSheetSet::GetMetadata() const {
  protobuf_buildSheet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_buildSheet_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtoBuildSheetSet

// required int32 activeSheetIndex = 1;
bool ProtoBuildSheetSet::has_activesheetindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ProtoBuildSheetSet::set_has_activesheetindex() {
  _has_bits_[0] |= 0x00000002u;
}
void ProtoBuildSheetSet::clear_has_activesheetindex() {
  _has_bits_[0] &= ~0x00000002u;
}
void ProtoBuildSheetSet::clear_activesheetindex() {
  activesheetindex_ = 0;
  clear_has_activesheetindex();
}
::google::protobuf::int32 ProtoBuildSheetSet::activesheetindex() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoBuildSheetSet.activeSheetIndex)
  return activesheetindex_;
}
void ProtoBuildSheetSet::set_activesheetindex(::google::protobuf::int32 value) {
  set_has_activesheetindex();
  activesheetindex_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoBuildSheetSet.activeSheetIndex)
}

// repeated .WakfuProto.ProtoBuildSheet buildSheets = 2;
int ProtoBuildSheetSet::buildsheets_size() const {
  return buildsheets_.size();
}
void ProtoBuildSheetSet::clear_buildsheets() {
  buildsheets_.Clear();
}
const ::WakfuProto::ProtoBuildSheet& ProtoBuildSheetSet::buildsheets(int index) const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoBuildSheetSet.buildSheets)
  return buildsheets_.Get(index);
}
::WakfuProto::ProtoBuildSheet* ProtoBuildSheetSet::mutable_buildsheets(int index) {
  // @@protoc_insertion_point(field_mutable:WakfuProto.ProtoBuildSheetSet.buildSheets)
  return buildsheets_.Mutable(index);
}
::WakfuProto::ProtoBuildSheet* ProtoBuildSheetSet::add_buildsheets() {
  // @@protoc_insertion_point(field_add:WakfuProto.ProtoBuildSheetSet.buildSheets)
  return buildsheets_.Add();
}
::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoBuildSheet >*
ProtoBuildSheetSet::mutable_buildsheets() {
  // @@protoc_insertion_point(field_mutable_list:WakfuProto.ProtoBuildSheetSet.buildSheets)
  return &buildsheets_;
}
const ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoBuildSheet >&
ProtoBuildSheetSet::buildsheets() const {
  // @@protoc_insertion_point(field_list:WakfuProto.ProtoBuildSheetSet.buildSheets)
  return buildsheets_;
}

// required .WakfuProto.ProtoBuildSheet automaticSheet = 3;
bool ProtoBuildSheetSet::has_automaticsheet() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProtoBuildSheetSet::set_has_automaticsheet() {
  _has_bits_[0] |= 0x00000001u;
}
void ProtoBuildSheetSet::clear_has_automaticsheet() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProtoBuildSheetSet::clear_automaticsheet() {
  if (automaticsheet_ != NULL) automaticsheet_->::WakfuProto::ProtoBuildSheet::Clear();
  clear_has_automaticsheet();
}
const ::WakfuProto::ProtoBuildSheet& ProtoBuildSheetSet::automaticsheet() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoBuildSheetSet.automaticSheet)
  return automaticsheet_ != NULL ? *automaticsheet_
                         : *::WakfuProto::ProtoBuildSheet::internal_default_instance();
}
::WakfuProto::ProtoBuildSheet* ProtoBuildSheetSet::mutable_automaticsheet() {
  set_has_automaticsheet();
  if (automaticsheet_ == NULL) {
    automaticsheet_ = new ::WakfuProto::ProtoBuildSheet;
  }
  // @@protoc_insertion_point(field_mutable:WakfuProto.ProtoBuildSheetSet.automaticSheet)
  return automaticsheet_;
}
::WakfuProto::ProtoBuildSheet* ProtoBuildSheetSet::release_automaticsheet() {
  // @@protoc_insertion_point(field_release:WakfuProto.ProtoBuildSheetSet.automaticSheet)
  clear_has_automaticsheet();
  ::WakfuProto::ProtoBuildSheet* temp = automaticsheet_;
  automaticsheet_ = NULL;
  return temp;
}
void ProtoBuildSheetSet::set_allocated_automaticsheet(::WakfuProto::ProtoBuildSheet* automaticsheet) {
  delete automaticsheet_;
  automaticsheet_ = automaticsheet;
  if (automaticsheet) {
    set_has_automaticsheet();
  } else {
    clear_has_automaticsheet();
  }
  // @@protoc_insertion_point(field_set_allocated:WakfuProto.ProtoBuildSheetSet.automaticSheet)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoBuildSheet::kIndexFieldNumber;
const int ProtoBuildSheet::kNameFieldNumber;
const int ProtoBuildSheet::kLevelFieldNumber;
const int ProtoBuildSheet::kSpellDeckIndexFieldNumber;
const int ProtoBuildSheet::kAptitudeSheetIndexFieldNumber;
const int ProtoBuildSheet::kEquipmentSheetIndexFieldNumber;
const int ProtoBuildSheet::kIconIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoBuildSheet::ProtoBuildSheet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_buildSheet_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WakfuProto.ProtoBuildSheet)
}
ProtoBuildSheet::ProtoBuildSheet(const ProtoBuildSheet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&index_, &from.index_,
    reinterpret_cast<char*>(&iconindex_) -
    reinterpret_cast<char*>(&index_) + sizeof(iconindex_));
  // @@protoc_insertion_point(copy_constructor:WakfuProto.ProtoBuildSheet)
}

void ProtoBuildSheet::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&index_, 0, reinterpret_cast<char*>(&iconindex_) -
    reinterpret_cast<char*>(&index_) + sizeof(iconindex_));
}

ProtoBuildSheet::~ProtoBuildSheet() {
  // @@protoc_insertion_point(destructor:WakfuProto.ProtoBuildSheet)
  SharedDtor();
}

void ProtoBuildSheet::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProtoBuildSheet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoBuildSheet::descriptor() {
  protobuf_buildSheet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_buildSheet_2eproto::file_level_metadata[1].descriptor;
}

const ProtoBuildSheet& ProtoBuildSheet::default_instance() {
  protobuf_buildSheet_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProtoBuildSheet* ProtoBuildSheet::New(::google::protobuf::Arena* arena) const {
  ProtoBuildSheet* n = new ProtoBuildSheet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoBuildSheet::Clear() {
// @@protoc_insertion_point(message_clear_start:WakfuProto.ProtoBuildSheet)
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 126u) {
    ::memset(&index_, 0, reinterpret_cast<char*>(&iconindex_) -
      reinterpret_cast<char*>(&index_) + sizeof(iconindex_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProtoBuildSheet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WakfuProto.ProtoBuildSheet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 index = 1;
      case 1: {
        if (tag == 8u) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "WakfuProto.ProtoBuildSheet.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 level = 3;
      case 3: {
        if (tag == 24u) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 spellDeckIndex = 4;
      case 4: {
        if (tag == 32u) {
          set_has_spelldeckindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &spelldeckindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 aptitudeSheetIndex = 5;
      case 5: {
        if (tag == 40u) {
          set_has_aptitudesheetindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &aptitudesheetindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 equipmentSheetIndex = 6;
      case 6: {
        if (tag == 48u) {
          set_has_equipmentsheetindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equipmentsheetindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 iconIndex = 7;
      case 7: {
        if (tag == 56u) {
          set_has_iconindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iconindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WakfuProto.ProtoBuildSheet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WakfuProto.ProtoBuildSheet)
  return false;
#undef DO_
}

void ProtoBuildSheet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WakfuProto.ProtoBuildSheet)
  // required int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "WakfuProto.ProtoBuildSheet.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required int32 level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }

  // required int32 spellDeckIndex = 4;
  if (has_spelldeckindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->spelldeckindex(), output);
  }

  // required int32 aptitudeSheetIndex = 5;
  if (has_aptitudesheetindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->aptitudesheetindex(), output);
  }

  // required int32 equipmentSheetIndex = 6;
  if (has_equipmentsheetindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->equipmentsheetindex(), output);
  }

  // required int32 iconIndex = 7;
  if (has_iconindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->iconindex(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WakfuProto.ProtoBuildSheet)
}

::google::protobuf::uint8* ProtoBuildSheet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WakfuProto.ProtoBuildSheet)
  // required int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "WakfuProto.ProtoBuildSheet.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required int32 level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }

  // required int32 spellDeckIndex = 4;
  if (has_spelldeckindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->spelldeckindex(), target);
  }

  // required int32 aptitudeSheetIndex = 5;
  if (has_aptitudesheetindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->aptitudesheetindex(), target);
  }

  // required int32 equipmentSheetIndex = 6;
  if (has_equipmentsheetindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->equipmentsheetindex(), target);
  }

  // required int32 iconIndex = 7;
  if (has_iconindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->iconindex(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WakfuProto.ProtoBuildSheet)
  return target;
}

size_t ProtoBuildSheet::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:WakfuProto.ProtoBuildSheet)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_index()) {
    // required int32 index = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  if (has_level()) {
    // required int32 level = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  if (has_spelldeckindex()) {
    // required int32 spellDeckIndex = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->spelldeckindex());
  }

  if (has_aptitudesheetindex()) {
    // required int32 aptitudeSheetIndex = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->aptitudesheetindex());
  }

  if (has_equipmentsheetindex()) {
    // required int32 equipmentSheetIndex = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->equipmentsheetindex());
  }

  if (has_iconindex()) {
    // required int32 iconIndex = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iconindex());
  }

  return total_size;
}
size_t ProtoBuildSheet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WakfuProto.ProtoBuildSheet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required int32 index = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());

    // required int32 level = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());

    // required int32 spellDeckIndex = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->spelldeckindex());

    // required int32 aptitudeSheetIndex = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->aptitudesheetindex());

    // required int32 equipmentSheetIndex = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->equipmentsheetindex());

    // required int32 iconIndex = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iconindex());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoBuildSheet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WakfuProto.ProtoBuildSheet)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoBuildSheet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoBuildSheet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WakfuProto.ProtoBuildSheet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WakfuProto.ProtoBuildSheet)
    MergeFrom(*source);
  }
}

void ProtoBuildSheet::MergeFrom(const ProtoBuildSheet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WakfuProto.ProtoBuildSheet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 127u) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_spelldeckindex()) {
      set_spelldeckindex(from.spelldeckindex());
    }
    if (from.has_aptitudesheetindex()) {
      set_aptitudesheetindex(from.aptitudesheetindex());
    }
    if (from.has_equipmentsheetindex()) {
      set_equipmentsheetindex(from.equipmentsheetindex());
    }
    if (from.has_iconindex()) {
      set_iconindex(from.iconindex());
    }
  }
}

void ProtoBuildSheet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WakfuProto.ProtoBuildSheet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoBuildSheet::CopyFrom(const ProtoBuildSheet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WakfuProto.ProtoBuildSheet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoBuildSheet::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;
  return true;
}

void ProtoBuildSheet::Swap(ProtoBuildSheet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoBuildSheet::InternalSwap(ProtoBuildSheet* other) {
  name_.Swap(&other->name_);
  std::swap(index_, other->index_);
  std::swap(level_, other->level_);
  std::swap(spelldeckindex_, other->spelldeckindex_);
  std::swap(aptitudesheetindex_, other->aptitudesheetindex_);
  std::swap(equipmentsheetindex_, other->equipmentsheetindex_);
  std::swap(iconindex_, other->iconindex_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoBuildSheet::GetMetadata() const {
  protobuf_buildSheet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_buildSheet_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtoBuildSheet

// required int32 index = 1;
bool ProtoBuildSheet::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ProtoBuildSheet::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
void ProtoBuildSheet::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
void ProtoBuildSheet::clear_index() {
  index_ = 0;
  clear_has_index();
}
::google::protobuf::int32 ProtoBuildSheet::index() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoBuildSheet.index)
  return index_;
}
void ProtoBuildSheet::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoBuildSheet.index)
}

// required string name = 2;
bool ProtoBuildSheet::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProtoBuildSheet::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void ProtoBuildSheet::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProtoBuildSheet::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& ProtoBuildSheet::name() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoBuildSheet.name)
  return name_.GetNoArena();
}
void ProtoBuildSheet::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoBuildSheet.name)
}
#if LANG_CXX11
void ProtoBuildSheet::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WakfuProto.ProtoBuildSheet.name)
}
#endif
void ProtoBuildSheet::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WakfuProto.ProtoBuildSheet.name)
}
void ProtoBuildSheet::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WakfuProto.ProtoBuildSheet.name)
}
::std::string* ProtoBuildSheet::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:WakfuProto.ProtoBuildSheet.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProtoBuildSheet::release_name() {
  // @@protoc_insertion_point(field_release:WakfuProto.ProtoBuildSheet.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProtoBuildSheet::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:WakfuProto.ProtoBuildSheet.name)
}

// required int32 level = 3;
bool ProtoBuildSheet::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ProtoBuildSheet::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
void ProtoBuildSheet::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
void ProtoBuildSheet::clear_level() {
  level_ = 0;
  clear_has_level();
}
::google::protobuf::int32 ProtoBuildSheet::level() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoBuildSheet.level)
  return level_;
}
void ProtoBuildSheet::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoBuildSheet.level)
}

// required int32 spellDeckIndex = 4;
bool ProtoBuildSheet::has_spelldeckindex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ProtoBuildSheet::set_has_spelldeckindex() {
  _has_bits_[0] |= 0x00000008u;
}
void ProtoBuildSheet::clear_has_spelldeckindex() {
  _has_bits_[0] &= ~0x00000008u;
}
void ProtoBuildSheet::clear_spelldeckindex() {
  spelldeckindex_ = 0;
  clear_has_spelldeckindex();
}
::google::protobuf::int32 ProtoBuildSheet::spelldeckindex() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoBuildSheet.spellDeckIndex)
  return spelldeckindex_;
}
void ProtoBuildSheet::set_spelldeckindex(::google::protobuf::int32 value) {
  set_has_spelldeckindex();
  spelldeckindex_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoBuildSheet.spellDeckIndex)
}

// required int32 aptitudeSheetIndex = 5;
bool ProtoBuildSheet::has_aptitudesheetindex() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ProtoBuildSheet::set_has_aptitudesheetindex() {
  _has_bits_[0] |= 0x00000010u;
}
void ProtoBuildSheet::clear_has_aptitudesheetindex() {
  _has_bits_[0] &= ~0x00000010u;
}
void ProtoBuildSheet::clear_aptitudesheetindex() {
  aptitudesheetindex_ = 0;
  clear_has_aptitudesheetindex();
}
::google::protobuf::int32 ProtoBuildSheet::aptitudesheetindex() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoBuildSheet.aptitudeSheetIndex)
  return aptitudesheetindex_;
}
void ProtoBuildSheet::set_aptitudesheetindex(::google::protobuf::int32 value) {
  set_has_aptitudesheetindex();
  aptitudesheetindex_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoBuildSheet.aptitudeSheetIndex)
}

// required int32 equipmentSheetIndex = 6;
bool ProtoBuildSheet::has_equipmentsheetindex() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ProtoBuildSheet::set_has_equipmentsheetindex() {
  _has_bits_[0] |= 0x00000020u;
}
void ProtoBuildSheet::clear_has_equipmentsheetindex() {
  _has_bits_[0] &= ~0x00000020u;
}
void ProtoBuildSheet::clear_equipmentsheetindex() {
  equipmentsheetindex_ = 0;
  clear_has_equipmentsheetindex();
}
::google::protobuf::int32 ProtoBuildSheet::equipmentsheetindex() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoBuildSheet.equipmentSheetIndex)
  return equipmentsheetindex_;
}
void ProtoBuildSheet::set_equipmentsheetindex(::google::protobuf::int32 value) {
  set_has_equipmentsheetindex();
  equipmentsheetindex_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoBuildSheet.equipmentSheetIndex)
}

// required int32 iconIndex = 7;
bool ProtoBuildSheet::has_iconindex() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ProtoBuildSheet::set_has_iconindex() {
  _has_bits_[0] |= 0x00000040u;
}
void ProtoBuildSheet::clear_has_iconindex() {
  _has_bits_[0] &= ~0x00000040u;
}
void ProtoBuildSheet::clear_iconindex() {
  iconindex_ = 0;
  clear_has_iconindex();
}
::google::protobuf::int32 ProtoBuildSheet::iconindex() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoBuildSheet.iconIndex)
  return iconindex_;
}
void ProtoBuildSheet::set_iconindex(::google::protobuf::int32 value) {
  set_has_iconindex();
  iconindex_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoBuildSheet.iconIndex)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace WakfuProto

// @@protoc_insertion_point(global_scope)
