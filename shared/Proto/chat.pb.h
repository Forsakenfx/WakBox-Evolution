// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chat.proto

#ifndef PROTOBUF_chat_2eproto__INCLUDED
#define PROTOBUF_chat_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace WakfuProto {
class ProtoFriend;
class ProtoFriendDefaultTypeInternal;
extern ProtoFriendDefaultTypeInternal _ProtoFriend_default_instance_;
class ProtoFriendInfoForClient;
class ProtoFriendInfoForClientDefaultTypeInternal;
extern ProtoFriendInfoForClientDefaultTypeInternal _ProtoFriendInfoForClient_default_instance_;
class ProtoFriendLists;
class ProtoFriendListsDefaultTypeInternal;
extern ProtoFriendListsDefaultTypeInternal _ProtoFriendLists_default_instance_;
class ProtoFriendListsForClient;
class ProtoFriendListsForClientDefaultTypeInternal;
extern ProtoFriendListsForClientDefaultTypeInternal _ProtoFriendListsForClient_default_instance_;
}  // namespace WakfuProto

namespace WakfuProto {

namespace protobuf_chat_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_chat_2eproto

// ===================================================================

class ProtoFriendLists : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WakfuProto.ProtoFriendLists) */ {
 public:
  ProtoFriendLists();
  virtual ~ProtoFriendLists();

  ProtoFriendLists(const ProtoFriendLists& from);

  inline ProtoFriendLists& operator=(const ProtoFriendLists& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoFriendLists& default_instance();

  static inline const ProtoFriendLists* internal_default_instance() {
    return reinterpret_cast<const ProtoFriendLists*>(
               &_ProtoFriendLists_default_instance_);
  }

  void Swap(ProtoFriendLists* other);

  // implements Message ----------------------------------------------

  inline ProtoFriendLists* New() const PROTOBUF_FINAL { return New(NULL); }

  ProtoFriendLists* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProtoFriendLists& from);
  void MergeFrom(const ProtoFriendLists& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProtoFriendLists* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .WakfuProto.ProtoFriend friends = 1;
  int friends_size() const;
  void clear_friends();
  static const int kFriendsFieldNumber = 1;
  const ::WakfuProto::ProtoFriend& friends(int index) const;
  ::WakfuProto::ProtoFriend* mutable_friends(int index);
  ::WakfuProto::ProtoFriend* add_friends();
  ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoFriend >*
      mutable_friends();
  const ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoFriend >&
      friends() const;

  // repeated .WakfuProto.ProtoFriend ignored = 3;
  int ignored_size() const;
  void clear_ignored();
  static const int kIgnoredFieldNumber = 3;
  const ::WakfuProto::ProtoFriend& ignored(int index) const;
  ::WakfuProto::ProtoFriend* mutable_ignored(int index);
  ::WakfuProto::ProtoFriend* add_ignored();
  ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoFriend >*
      mutable_ignored();
  const ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoFriend >&
      ignored() const;

  // optional bool uselessFieldToSeparate = 2 [default = true];
  bool has_uselessfieldtoseparate() const;
  void clear_uselessfieldtoseparate();
  static const int kUselessFieldToSeparateFieldNumber = 2;
  bool uselessfieldtoseparate() const;
  void set_uselessfieldtoseparate(bool value);

  // @@protoc_insertion_point(class_scope:WakfuProto.ProtoFriendLists)
 private:
  void set_has_uselessfieldtoseparate();
  void clear_has_uselessfieldtoseparate();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoFriend > friends_;
  ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoFriend > ignored_;
  bool uselessfieldtoseparate_;
  friend struct  protobuf_chat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProtoFriend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WakfuProto.ProtoFriend) */ {
 public:
  ProtoFriend();
  virtual ~ProtoFriend();

  ProtoFriend(const ProtoFriend& from);

  inline ProtoFriend& operator=(const ProtoFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoFriend& default_instance();

  static inline const ProtoFriend* internal_default_instance() {
    return reinterpret_cast<const ProtoFriend*>(
               &_ProtoFriend_default_instance_);
  }

  void Swap(ProtoFriend* other);

  // implements Message ----------------------------------------------

  inline ProtoFriend* New() const PROTOBUF_FINAL { return New(NULL); }

  ProtoFriend* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProtoFriend& from);
  void MergeFrom(const ProtoFriend& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProtoFriend* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string accountName = 2;
  bool has_accountname() const;
  void clear_accountname();
  static const int kAccountNameFieldNumber = 2;
  const ::std::string& accountname() const;
  void set_accountname(const ::std::string& value);
  #if LANG_CXX11
  void set_accountname(::std::string&& value);
  #endif
  void set_accountname(const char* value);
  void set_accountname(const char* value, size_t size);
  ::std::string* mutable_accountname();
  ::std::string* release_accountname();
  void set_allocated_accountname(::std::string* accountname);

  // optional string comment = 51;
  bool has_comment() const;
  void clear_comment();
  static const int kCommentFieldNumber = 51;
  const ::std::string& comment() const;
  void set_comment(const ::std::string& value);
  #if LANG_CXX11
  void set_comment(::std::string&& value);
  #endif
  void set_comment(const char* value);
  void set_comment(const char* value, size_t size);
  ::std::string* mutable_comment();
  ::std::string* release_comment();
  void set_allocated_comment(::std::string* comment);

  // required int64 accountId = 1;
  bool has_accountid() const;
  void clear_accountid();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::int64 accountid() const;
  void set_accountid(::google::protobuf::int64 value);

  // optional int32 flags = 50;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 50;
  ::google::protobuf::int32 flags() const;
  void set_flags(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WakfuProto.ProtoFriend)
 private:
  void set_has_accountid();
  void clear_has_accountid();
  void set_has_accountname();
  void clear_has_accountname();
  void set_has_flags();
  void clear_has_flags();
  void set_has_comment();
  void clear_has_comment();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr accountname_;
  ::google::protobuf::internal::ArenaStringPtr comment_;
  ::google::protobuf::int64 accountid_;
  ::google::protobuf::int32 flags_;
  friend struct  protobuf_chat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProtoFriendListsForClient : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WakfuProto.ProtoFriendListsForClient) */ {
 public:
  ProtoFriendListsForClient();
  virtual ~ProtoFriendListsForClient();

  ProtoFriendListsForClient(const ProtoFriendListsForClient& from);

  inline ProtoFriendListsForClient& operator=(const ProtoFriendListsForClient& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoFriendListsForClient& default_instance();

  static inline const ProtoFriendListsForClient* internal_default_instance() {
    return reinterpret_cast<const ProtoFriendListsForClient*>(
               &_ProtoFriendListsForClient_default_instance_);
  }

  void Swap(ProtoFriendListsForClient* other);

  // implements Message ----------------------------------------------

  inline ProtoFriendListsForClient* New() const PROTOBUF_FINAL { return New(NULL); }

  ProtoFriendListsForClient* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProtoFriendListsForClient& from);
  void MergeFrom(const ProtoFriendListsForClient& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProtoFriendListsForClient* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .WakfuProto.ProtoFriendInfoForClient friends = 1;
  int friends_size() const;
  void clear_friends();
  static const int kFriendsFieldNumber = 1;
  const ::WakfuProto::ProtoFriendInfoForClient& friends(int index) const;
  ::WakfuProto::ProtoFriendInfoForClient* mutable_friends(int index);
  ::WakfuProto::ProtoFriendInfoForClient* add_friends();
  ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoFriendInfoForClient >*
      mutable_friends();
  const ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoFriendInfoForClient >&
      friends() const;

  // repeated .WakfuProto.ProtoFriendInfoForClient ignored = 2;
  int ignored_size() const;
  void clear_ignored();
  static const int kIgnoredFieldNumber = 2;
  const ::WakfuProto::ProtoFriendInfoForClient& ignored(int index) const;
  ::WakfuProto::ProtoFriendInfoForClient* mutable_ignored(int index);
  ::WakfuProto::ProtoFriendInfoForClient* add_ignored();
  ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoFriendInfoForClient >*
      mutable_ignored();
  const ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoFriendInfoForClient >&
      ignored() const;

  // @@protoc_insertion_point(class_scope:WakfuProto.ProtoFriendListsForClient)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoFriendInfoForClient > friends_;
  ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoFriendInfoForClient > ignored_;
  friend struct  protobuf_chat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProtoFriendInfoForClient : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WakfuProto.ProtoFriendInfoForClient) */ {
 public:
  ProtoFriendInfoForClient();
  virtual ~ProtoFriendInfoForClient();

  ProtoFriendInfoForClient(const ProtoFriendInfoForClient& from);

  inline ProtoFriendInfoForClient& operator=(const ProtoFriendInfoForClient& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoFriendInfoForClient& default_instance();

  static inline const ProtoFriendInfoForClient* internal_default_instance() {
    return reinterpret_cast<const ProtoFriendInfoForClient*>(
               &_ProtoFriendInfoForClient_default_instance_);
  }

  void Swap(ProtoFriendInfoForClient* other);

  // implements Message ----------------------------------------------

  inline ProtoFriendInfoForClient* New() const PROTOBUF_FINAL { return New(NULL); }

  ProtoFriendInfoForClient* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProtoFriendInfoForClient& from);
  void MergeFrom(const ProtoFriendInfoForClient& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProtoFriendInfoForClient* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string accountName = 2;
  bool has_accountname() const;
  void clear_accountname();
  static const int kAccountNameFieldNumber = 2;
  const ::std::string& accountname() const;
  void set_accountname(const ::std::string& value);
  #if LANG_CXX11
  void set_accountname(::std::string&& value);
  #endif
  void set_accountname(const char* value);
  void set_accountname(const char* value, size_t size);
  ::std::string* mutable_accountname();
  ::std::string* release_accountname();
  void set_allocated_accountname(::std::string* accountname);

  // optional string characterName = 50 [default = ""];
  bool has_charactername() const;
  void clear_charactername();
  static const int kCharacterNameFieldNumber = 50;
  const ::std::string& charactername() const;
  void set_charactername(const ::std::string& value);
  #if LANG_CXX11
  void set_charactername(::std::string&& value);
  #endif
  void set_charactername(const char* value);
  void set_charactername(const char* value, size_t size);
  ::std::string* mutable_charactername();
  ::std::string* release_charactername();
  void set_allocated_charactername(::std::string* charactername);

  // optional string commentary = 54;
  bool has_commentary() const;
  void clear_commentary();
  static const int kCommentaryFieldNumber = 54;
  const ::std::string& commentary() const;
  void set_commentary(const ::std::string& value);
  #if LANG_CXX11
  void set_commentary(::std::string&& value);
  #endif
  void set_commentary(const char* value);
  void set_commentary(const char* value, size_t size);
  ::std::string* mutable_commentary();
  ::std::string* release_commentary();
  void set_allocated_commentary(::std::string* commentary);

  // required int64 accountId = 1;
  bool has_accountid() const;
  void clear_accountid();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::int64 accountid() const;
  void set_accountid(::google::protobuf::int64 value);

  // required bool isOnline = 4;
  bool has_isonline() const;
  void clear_isonline();
  static const int kIsOnlineFieldNumber = 4;
  bool isonline() const;
  void set_isonline(bool value);

  // optional bool notify = 51;
  bool has_notify() const;
  void clear_notify();
  static const int kNotifyFieldNumber = 51;
  bool notify() const;
  void set_notify(bool value);

  // optional int32 breedId = 52 [default = -1];
  bool has_breedid() const;
  void clear_breedid();
  static const int kBreedIdFieldNumber = 52;
  ::google::protobuf::int32 breedid() const;
  void set_breedid(::google::protobuf::int32 value);

  // optional int32 sex = 53 [default = -1];
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 53;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // optional int64 xp = 55 [default = -1];
  bool has_xp() const;
  void clear_xp();
  static const int kXpFieldNumber = 55;
  ::google::protobuf::int64 xp() const;
  void set_xp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:WakfuProto.ProtoFriendInfoForClient)
 private:
  void set_has_accountid();
  void clear_has_accountid();
  void set_has_accountname();
  void clear_has_accountname();
  void set_has_isonline();
  void clear_has_isonline();
  void set_has_charactername();
  void clear_has_charactername();
  void set_has_notify();
  void clear_has_notify();
  void set_has_breedid();
  void clear_has_breedid();
  void set_has_sex();
  void clear_has_sex();
  void set_has_commentary();
  void clear_has_commentary();
  void set_has_xp();
  void clear_has_xp();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr accountname_;
  ::google::protobuf::internal::ArenaStringPtr charactername_;
  ::google::protobuf::internal::ArenaStringPtr commentary_;
  ::google::protobuf::int64 accountid_;
  bool isonline_;
  bool notify_;
  ::google::protobuf::int32 breedid_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::int64 xp_;
  friend struct  protobuf_chat_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtoFriendLists

// repeated .WakfuProto.ProtoFriend friends = 1;
inline int ProtoFriendLists::friends_size() const {
  return friends_.size();
}
inline void ProtoFriendLists::clear_friends() {
  friends_.Clear();
}
inline const ::WakfuProto::ProtoFriend& ProtoFriendLists::friends(int index) const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriendLists.friends)
  return friends_.Get(index);
}
inline ::WakfuProto::ProtoFriend* ProtoFriendLists::mutable_friends(int index) {
  // @@protoc_insertion_point(field_mutable:WakfuProto.ProtoFriendLists.friends)
  return friends_.Mutable(index);
}
inline ::WakfuProto::ProtoFriend* ProtoFriendLists::add_friends() {
  // @@protoc_insertion_point(field_add:WakfuProto.ProtoFriendLists.friends)
  return friends_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoFriend >*
ProtoFriendLists::mutable_friends() {
  // @@protoc_insertion_point(field_mutable_list:WakfuProto.ProtoFriendLists.friends)
  return &friends_;
}
inline const ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoFriend >&
ProtoFriendLists::friends() const {
  // @@protoc_insertion_point(field_list:WakfuProto.ProtoFriendLists.friends)
  return friends_;
}

// optional bool uselessFieldToSeparate = 2 [default = true];
inline bool ProtoFriendLists::has_uselessfieldtoseparate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoFriendLists::set_has_uselessfieldtoseparate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoFriendLists::clear_has_uselessfieldtoseparate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoFriendLists::clear_uselessfieldtoseparate() {
  uselessfieldtoseparate_ = true;
  clear_has_uselessfieldtoseparate();
}
inline bool ProtoFriendLists::uselessfieldtoseparate() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriendLists.uselessFieldToSeparate)
  return uselessfieldtoseparate_;
}
inline void ProtoFriendLists::set_uselessfieldtoseparate(bool value) {
  set_has_uselessfieldtoseparate();
  uselessfieldtoseparate_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoFriendLists.uselessFieldToSeparate)
}

// repeated .WakfuProto.ProtoFriend ignored = 3;
inline int ProtoFriendLists::ignored_size() const {
  return ignored_.size();
}
inline void ProtoFriendLists::clear_ignored() {
  ignored_.Clear();
}
inline const ::WakfuProto::ProtoFriend& ProtoFriendLists::ignored(int index) const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriendLists.ignored)
  return ignored_.Get(index);
}
inline ::WakfuProto::ProtoFriend* ProtoFriendLists::mutable_ignored(int index) {
  // @@protoc_insertion_point(field_mutable:WakfuProto.ProtoFriendLists.ignored)
  return ignored_.Mutable(index);
}
inline ::WakfuProto::ProtoFriend* ProtoFriendLists::add_ignored() {
  // @@protoc_insertion_point(field_add:WakfuProto.ProtoFriendLists.ignored)
  return ignored_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoFriend >*
ProtoFriendLists::mutable_ignored() {
  // @@protoc_insertion_point(field_mutable_list:WakfuProto.ProtoFriendLists.ignored)
  return &ignored_;
}
inline const ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoFriend >&
ProtoFriendLists::ignored() const {
  // @@protoc_insertion_point(field_list:WakfuProto.ProtoFriendLists.ignored)
  return ignored_;
}

// -------------------------------------------------------------------

// ProtoFriend

// required int64 accountId = 1;
inline bool ProtoFriend::has_accountid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoFriend::set_has_accountid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoFriend::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoFriend::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
  clear_has_accountid();
}
inline ::google::protobuf::int64 ProtoFriend::accountid() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriend.accountId)
  return accountid_;
}
inline void ProtoFriend::set_accountid(::google::protobuf::int64 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoFriend.accountId)
}

// required string accountName = 2;
inline bool ProtoFriend::has_accountname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoFriend::set_has_accountname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoFriend::clear_has_accountname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoFriend::clear_accountname() {
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_accountname();
}
inline const ::std::string& ProtoFriend::accountname() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriend.accountName)
  return accountname_.GetNoArena();
}
inline void ProtoFriend::set_accountname(const ::std::string& value) {
  set_has_accountname();
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoFriend.accountName)
}
#if LANG_CXX11
inline void ProtoFriend::set_accountname(::std::string&& value) {
  set_has_accountname();
  accountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WakfuProto.ProtoFriend.accountName)
}
#endif
inline void ProtoFriend::set_accountname(const char* value) {
  set_has_accountname();
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WakfuProto.ProtoFriend.accountName)
}
inline void ProtoFriend::set_accountname(const char* value, size_t size) {
  set_has_accountname();
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WakfuProto.ProtoFriend.accountName)
}
inline ::std::string* ProtoFriend::mutable_accountname() {
  set_has_accountname();
  // @@protoc_insertion_point(field_mutable:WakfuProto.ProtoFriend.accountName)
  return accountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoFriend::release_accountname() {
  // @@protoc_insertion_point(field_release:WakfuProto.ProtoFriend.accountName)
  clear_has_accountname();
  return accountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoFriend::set_allocated_accountname(::std::string* accountname) {
  if (accountname != NULL) {
    set_has_accountname();
  } else {
    clear_has_accountname();
  }
  accountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountname);
  // @@protoc_insertion_point(field_set_allocated:WakfuProto.ProtoFriend.accountName)
}

// optional int32 flags = 50;
inline bool ProtoFriend::has_flags() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoFriend::set_has_flags() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoFriend::clear_has_flags() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoFriend::clear_flags() {
  flags_ = 0;
  clear_has_flags();
}
inline ::google::protobuf::int32 ProtoFriend::flags() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriend.flags)
  return flags_;
}
inline void ProtoFriend::set_flags(::google::protobuf::int32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoFriend.flags)
}

// optional string comment = 51;
inline bool ProtoFriend::has_comment() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoFriend::set_has_comment() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoFriend::clear_has_comment() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoFriend::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_comment();
}
inline const ::std::string& ProtoFriend::comment() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriend.comment)
  return comment_.GetNoArena();
}
inline void ProtoFriend::set_comment(const ::std::string& value) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoFriend.comment)
}
#if LANG_CXX11
inline void ProtoFriend::set_comment(::std::string&& value) {
  set_has_comment();
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WakfuProto.ProtoFriend.comment)
}
#endif
inline void ProtoFriend::set_comment(const char* value) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WakfuProto.ProtoFriend.comment)
}
inline void ProtoFriend::set_comment(const char* value, size_t size) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WakfuProto.ProtoFriend.comment)
}
inline ::std::string* ProtoFriend::mutable_comment() {
  set_has_comment();
  // @@protoc_insertion_point(field_mutable:WakfuProto.ProtoFriend.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoFriend::release_comment() {
  // @@protoc_insertion_point(field_release:WakfuProto.ProtoFriend.comment)
  clear_has_comment();
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoFriend::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    set_has_comment();
  } else {
    clear_has_comment();
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:WakfuProto.ProtoFriend.comment)
}

// -------------------------------------------------------------------

// ProtoFriendListsForClient

// repeated .WakfuProto.ProtoFriendInfoForClient friends = 1;
inline int ProtoFriendListsForClient::friends_size() const {
  return friends_.size();
}
inline void ProtoFriendListsForClient::clear_friends() {
  friends_.Clear();
}
inline const ::WakfuProto::ProtoFriendInfoForClient& ProtoFriendListsForClient::friends(int index) const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriendListsForClient.friends)
  return friends_.Get(index);
}
inline ::WakfuProto::ProtoFriendInfoForClient* ProtoFriendListsForClient::mutable_friends(int index) {
  // @@protoc_insertion_point(field_mutable:WakfuProto.ProtoFriendListsForClient.friends)
  return friends_.Mutable(index);
}
inline ::WakfuProto::ProtoFriendInfoForClient* ProtoFriendListsForClient::add_friends() {
  // @@protoc_insertion_point(field_add:WakfuProto.ProtoFriendListsForClient.friends)
  return friends_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoFriendInfoForClient >*
ProtoFriendListsForClient::mutable_friends() {
  // @@protoc_insertion_point(field_mutable_list:WakfuProto.ProtoFriendListsForClient.friends)
  return &friends_;
}
inline const ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoFriendInfoForClient >&
ProtoFriendListsForClient::friends() const {
  // @@protoc_insertion_point(field_list:WakfuProto.ProtoFriendListsForClient.friends)
  return friends_;
}

// repeated .WakfuProto.ProtoFriendInfoForClient ignored = 2;
inline int ProtoFriendListsForClient::ignored_size() const {
  return ignored_.size();
}
inline void ProtoFriendListsForClient::clear_ignored() {
  ignored_.Clear();
}
inline const ::WakfuProto::ProtoFriendInfoForClient& ProtoFriendListsForClient::ignored(int index) const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriendListsForClient.ignored)
  return ignored_.Get(index);
}
inline ::WakfuProto::ProtoFriendInfoForClient* ProtoFriendListsForClient::mutable_ignored(int index) {
  // @@protoc_insertion_point(field_mutable:WakfuProto.ProtoFriendListsForClient.ignored)
  return ignored_.Mutable(index);
}
inline ::WakfuProto::ProtoFriendInfoForClient* ProtoFriendListsForClient::add_ignored() {
  // @@protoc_insertion_point(field_add:WakfuProto.ProtoFriendListsForClient.ignored)
  return ignored_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoFriendInfoForClient >*
ProtoFriendListsForClient::mutable_ignored() {
  // @@protoc_insertion_point(field_mutable_list:WakfuProto.ProtoFriendListsForClient.ignored)
  return &ignored_;
}
inline const ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoFriendInfoForClient >&
ProtoFriendListsForClient::ignored() const {
  // @@protoc_insertion_point(field_list:WakfuProto.ProtoFriendListsForClient.ignored)
  return ignored_;
}

// -------------------------------------------------------------------

// ProtoFriendInfoForClient

// required int64 accountId = 1;
inline bool ProtoFriendInfoForClient::has_accountid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoFriendInfoForClient::set_has_accountid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoFriendInfoForClient::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoFriendInfoForClient::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
  clear_has_accountid();
}
inline ::google::protobuf::int64 ProtoFriendInfoForClient::accountid() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriendInfoForClient.accountId)
  return accountid_;
}
inline void ProtoFriendInfoForClient::set_accountid(::google::protobuf::int64 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoFriendInfoForClient.accountId)
}

// required string accountName = 2;
inline bool ProtoFriendInfoForClient::has_accountname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoFriendInfoForClient::set_has_accountname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoFriendInfoForClient::clear_has_accountname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoFriendInfoForClient::clear_accountname() {
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_accountname();
}
inline const ::std::string& ProtoFriendInfoForClient::accountname() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriendInfoForClient.accountName)
  return accountname_.GetNoArena();
}
inline void ProtoFriendInfoForClient::set_accountname(const ::std::string& value) {
  set_has_accountname();
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoFriendInfoForClient.accountName)
}
#if LANG_CXX11
inline void ProtoFriendInfoForClient::set_accountname(::std::string&& value) {
  set_has_accountname();
  accountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WakfuProto.ProtoFriendInfoForClient.accountName)
}
#endif
inline void ProtoFriendInfoForClient::set_accountname(const char* value) {
  set_has_accountname();
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WakfuProto.ProtoFriendInfoForClient.accountName)
}
inline void ProtoFriendInfoForClient::set_accountname(const char* value, size_t size) {
  set_has_accountname();
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WakfuProto.ProtoFriendInfoForClient.accountName)
}
inline ::std::string* ProtoFriendInfoForClient::mutable_accountname() {
  set_has_accountname();
  // @@protoc_insertion_point(field_mutable:WakfuProto.ProtoFriendInfoForClient.accountName)
  return accountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoFriendInfoForClient::release_accountname() {
  // @@protoc_insertion_point(field_release:WakfuProto.ProtoFriendInfoForClient.accountName)
  clear_has_accountname();
  return accountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoFriendInfoForClient::set_allocated_accountname(::std::string* accountname) {
  if (accountname != NULL) {
    set_has_accountname();
  } else {
    clear_has_accountname();
  }
  accountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountname);
  // @@protoc_insertion_point(field_set_allocated:WakfuProto.ProtoFriendInfoForClient.accountName)
}

// required bool isOnline = 4;
inline bool ProtoFriendInfoForClient::has_isonline() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoFriendInfoForClient::set_has_isonline() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoFriendInfoForClient::clear_has_isonline() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoFriendInfoForClient::clear_isonline() {
  isonline_ = false;
  clear_has_isonline();
}
inline bool ProtoFriendInfoForClient::isonline() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriendInfoForClient.isOnline)
  return isonline_;
}
inline void ProtoFriendInfoForClient::set_isonline(bool value) {
  set_has_isonline();
  isonline_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoFriendInfoForClient.isOnline)
}

// optional string characterName = 50 [default = ""];
inline bool ProtoFriendInfoForClient::has_charactername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoFriendInfoForClient::set_has_charactername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoFriendInfoForClient::clear_has_charactername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoFriendInfoForClient::clear_charactername() {
  charactername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_charactername();
}
inline const ::std::string& ProtoFriendInfoForClient::charactername() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriendInfoForClient.characterName)
  return charactername_.GetNoArena();
}
inline void ProtoFriendInfoForClient::set_charactername(const ::std::string& value) {
  set_has_charactername();
  charactername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoFriendInfoForClient.characterName)
}
#if LANG_CXX11
inline void ProtoFriendInfoForClient::set_charactername(::std::string&& value) {
  set_has_charactername();
  charactername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WakfuProto.ProtoFriendInfoForClient.characterName)
}
#endif
inline void ProtoFriendInfoForClient::set_charactername(const char* value) {
  set_has_charactername();
  charactername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WakfuProto.ProtoFriendInfoForClient.characterName)
}
inline void ProtoFriendInfoForClient::set_charactername(const char* value, size_t size) {
  set_has_charactername();
  charactername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WakfuProto.ProtoFriendInfoForClient.characterName)
}
inline ::std::string* ProtoFriendInfoForClient::mutable_charactername() {
  set_has_charactername();
  // @@protoc_insertion_point(field_mutable:WakfuProto.ProtoFriendInfoForClient.characterName)
  return charactername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoFriendInfoForClient::release_charactername() {
  // @@protoc_insertion_point(field_release:WakfuProto.ProtoFriendInfoForClient.characterName)
  clear_has_charactername();
  return charactername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoFriendInfoForClient::set_allocated_charactername(::std::string* charactername) {
  if (charactername != NULL) {
    set_has_charactername();
  } else {
    clear_has_charactername();
  }
  charactername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), charactername);
  // @@protoc_insertion_point(field_set_allocated:WakfuProto.ProtoFriendInfoForClient.characterName)
}

// optional bool notify = 51;
inline bool ProtoFriendInfoForClient::has_notify() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProtoFriendInfoForClient::set_has_notify() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProtoFriendInfoForClient::clear_has_notify() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProtoFriendInfoForClient::clear_notify() {
  notify_ = false;
  clear_has_notify();
}
inline bool ProtoFriendInfoForClient::notify() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriendInfoForClient.notify)
  return notify_;
}
inline void ProtoFriendInfoForClient::set_notify(bool value) {
  set_has_notify();
  notify_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoFriendInfoForClient.notify)
}

// optional int32 breedId = 52 [default = -1];
inline bool ProtoFriendInfoForClient::has_breedid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProtoFriendInfoForClient::set_has_breedid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProtoFriendInfoForClient::clear_has_breedid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProtoFriendInfoForClient::clear_breedid() {
  breedid_ = -1;
  clear_has_breedid();
}
inline ::google::protobuf::int32 ProtoFriendInfoForClient::breedid() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriendInfoForClient.breedId)
  return breedid_;
}
inline void ProtoFriendInfoForClient::set_breedid(::google::protobuf::int32 value) {
  set_has_breedid();
  breedid_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoFriendInfoForClient.breedId)
}

// optional int32 sex = 53 [default = -1];
inline bool ProtoFriendInfoForClient::has_sex() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProtoFriendInfoForClient::set_has_sex() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ProtoFriendInfoForClient::clear_has_sex() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ProtoFriendInfoForClient::clear_sex() {
  sex_ = -1;
  clear_has_sex();
}
inline ::google::protobuf::int32 ProtoFriendInfoForClient::sex() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriendInfoForClient.sex)
  return sex_;
}
inline void ProtoFriendInfoForClient::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoFriendInfoForClient.sex)
}

// optional string commentary = 54;
inline bool ProtoFriendInfoForClient::has_commentary() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoFriendInfoForClient::set_has_commentary() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoFriendInfoForClient::clear_has_commentary() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoFriendInfoForClient::clear_commentary() {
  commentary_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_commentary();
}
inline const ::std::string& ProtoFriendInfoForClient::commentary() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriendInfoForClient.commentary)
  return commentary_.GetNoArena();
}
inline void ProtoFriendInfoForClient::set_commentary(const ::std::string& value) {
  set_has_commentary();
  commentary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoFriendInfoForClient.commentary)
}
#if LANG_CXX11
inline void ProtoFriendInfoForClient::set_commentary(::std::string&& value) {
  set_has_commentary();
  commentary_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WakfuProto.ProtoFriendInfoForClient.commentary)
}
#endif
inline void ProtoFriendInfoForClient::set_commentary(const char* value) {
  set_has_commentary();
  commentary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WakfuProto.ProtoFriendInfoForClient.commentary)
}
inline void ProtoFriendInfoForClient::set_commentary(const char* value, size_t size) {
  set_has_commentary();
  commentary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WakfuProto.ProtoFriendInfoForClient.commentary)
}
inline ::std::string* ProtoFriendInfoForClient::mutable_commentary() {
  set_has_commentary();
  // @@protoc_insertion_point(field_mutable:WakfuProto.ProtoFriendInfoForClient.commentary)
  return commentary_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoFriendInfoForClient::release_commentary() {
  // @@protoc_insertion_point(field_release:WakfuProto.ProtoFriendInfoForClient.commentary)
  clear_has_commentary();
  return commentary_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoFriendInfoForClient::set_allocated_commentary(::std::string* commentary) {
  if (commentary != NULL) {
    set_has_commentary();
  } else {
    clear_has_commentary();
  }
  commentary_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commentary);
  // @@protoc_insertion_point(field_set_allocated:WakfuProto.ProtoFriendInfoForClient.commentary)
}

// optional int64 xp = 55 [default = -1];
inline bool ProtoFriendInfoForClient::has_xp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ProtoFriendInfoForClient::set_has_xp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ProtoFriendInfoForClient::clear_has_xp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ProtoFriendInfoForClient::clear_xp() {
  xp_ = GOOGLE_LONGLONG(-1);
  clear_has_xp();
}
inline ::google::protobuf::int64 ProtoFriendInfoForClient::xp() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriendInfoForClient.xp)
  return xp_;
}
inline void ProtoFriendInfoForClient::set_xp(::google::protobuf::int64 value) {
  set_has_xp();
  xp_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoFriendInfoForClient.xp)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace WakfuProto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_chat_2eproto__INCLUDED
