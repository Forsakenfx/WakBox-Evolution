// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chat.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "chat.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace WakfuProto {
class ProtoFriendListsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ProtoFriendLists> {
} _ProtoFriendLists_default_instance_;
class ProtoFriendDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ProtoFriend> {
} _ProtoFriend_default_instance_;
class ProtoFriendListsForClientDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ProtoFriendListsForClient> {
} _ProtoFriendListsForClient_default_instance_;
class ProtoFriendInfoForClientDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ProtoFriendInfoForClient> {
} _ProtoFriendInfoForClient_default_instance_;

namespace protobuf_chat_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoFriendLists, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoFriendLists, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoFriendLists, friends_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoFriendLists, uselessfieldtoseparate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoFriendLists, ignored_),
  ~0u,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoFriend, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoFriend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoFriend, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoFriend, accountname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoFriend, flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoFriend, comment_),
  2,
  0,
  3,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoFriendListsForClient, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoFriendListsForClient, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoFriendListsForClient, friends_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoFriendListsForClient, ignored_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoFriendInfoForClient, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoFriendInfoForClient, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoFriendInfoForClient, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoFriendInfoForClient, accountname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoFriendInfoForClient, isonline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoFriendInfoForClient, charactername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoFriendInfoForClient, notify_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoFriendInfoForClient, breedid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoFriendInfoForClient, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoFriendInfoForClient, commentary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoFriendInfoForClient, xp_),
  3,
  0,
  4,
  1,
  5,
  6,
  7,
  2,
  8,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(ProtoFriendLists)},
  { 10, 18, sizeof(ProtoFriend)},
  { 22, 28, sizeof(ProtoFriendListsForClient)},
  { 30, 43, sizeof(ProtoFriendInfoForClient)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProtoFriendLists_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProtoFriend_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProtoFriendListsForClient_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProtoFriendInfoForClient_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "chat.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace

void TableStruct::Shutdown() {
  _ProtoFriendLists_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ProtoFriend_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _ProtoFriendListsForClient_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _ProtoFriendInfoForClient_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ProtoFriendLists_default_instance_.DefaultConstruct();
  _ProtoFriend_default_instance_.DefaultConstruct();
  _ProtoFriendListsForClient_default_instance_.DefaultConstruct();
  _ProtoFriendInfoForClient_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\nchat.proto\022\nWakfuProto\"\214\001\n\020ProtoFriend"
      "Lists\022(\n\007friends\030\001 \003(\0132\027.WakfuProto.Prot"
      "oFriend\022$\n\026uselessFieldToSeparate\030\002 \001(\010:"
      "\004true\022(\n\007ignored\030\003 \003(\0132\027.WakfuProto.Prot"
      "oFriend\"U\n\013ProtoFriend\022\021\n\taccountId\030\001 \002("
      "\003\022\023\n\013accountName\030\002 \002(\t\022\r\n\005flags\0302 \001(\005\022\017\n"
      "\007comment\0303 \001(\t\"\211\001\n\031ProtoFriendListsForCl"
      "ient\0225\n\007friends\030\001 \003(\0132$.WakfuProto.Proto"
      "FriendInfoForClient\0225\n\007ignored\030\002 \003(\0132$.W"
      "akfuProto.ProtoFriendInfoForClient\"\307\001\n\030P"
      "rotoFriendInfoForClient\022\021\n\taccountId\030\001 \002"
      "(\003\022\023\n\013accountName\030\002 \002(\t\022\020\n\010isOnline\030\004 \002("
      "\010\022\027\n\rcharacterName\0302 \001(\t:\000\022\016\n\006notify\0303 \001"
      "(\010\022\023\n\007breedId\0304 \001(\005:\002-1\022\017\n\003sex\0305 \001(\005:\002-1"
      "\022\022\n\ncommentary\0306 \001(\t\022\016\n\002xp\0307 \001(\003:\002-1"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 596);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "chat.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_chat_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoFriendLists::kFriendsFieldNumber;
const int ProtoFriendLists::kUselessFieldToSeparateFieldNumber;
const int ProtoFriendLists::kIgnoredFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoFriendLists::ProtoFriendLists()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_chat_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WakfuProto.ProtoFriendLists)
}
ProtoFriendLists::ProtoFriendLists(const ProtoFriendLists& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      friends_(from.friends_),
      ignored_(from.ignored_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uselessfieldtoseparate_ = from.uselessfieldtoseparate_;
  // @@protoc_insertion_point(copy_constructor:WakfuProto.ProtoFriendLists)
}

void ProtoFriendLists::SharedCtor() {
  _cached_size_ = 0;
  uselessfieldtoseparate_ = true;
}

ProtoFriendLists::~ProtoFriendLists() {
  // @@protoc_insertion_point(destructor:WakfuProto.ProtoFriendLists)
  SharedDtor();
}

void ProtoFriendLists::SharedDtor() {
}

void ProtoFriendLists::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoFriendLists::descriptor() {
  protobuf_chat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_chat_2eproto::file_level_metadata[0].descriptor;
}

const ProtoFriendLists& ProtoFriendLists::default_instance() {
  protobuf_chat_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProtoFriendLists* ProtoFriendLists::New(::google::protobuf::Arena* arena) const {
  ProtoFriendLists* n = new ProtoFriendLists;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoFriendLists::Clear() {
// @@protoc_insertion_point(message_clear_start:WakfuProto.ProtoFriendLists)
  friends_.Clear();
  ignored_.Clear();
  uselessfieldtoseparate_ = true;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProtoFriendLists::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WakfuProto.ProtoFriendLists)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .WakfuProto.ProtoFriend friends = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_friends()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // optional bool uselessFieldToSeparate = 2 [default = true];
      case 2: {
        if (tag == 16u) {
          set_has_uselessfieldtoseparate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &uselessfieldtoseparate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .WakfuProto.ProtoFriend ignored = 3;
      case 3: {
        if (tag == 26u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ignored()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WakfuProto.ProtoFriendLists)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WakfuProto.ProtoFriendLists)
  return false;
#undef DO_
}

void ProtoFriendLists::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WakfuProto.ProtoFriendLists)
  // repeated .WakfuProto.ProtoFriend friends = 1;
  for (unsigned int i = 0, n = this->friends_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->friends(i), output);
  }

  // optional bool uselessFieldToSeparate = 2 [default = true];
  if (has_uselessfieldtoseparate()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->uselessfieldtoseparate(), output);
  }

  // repeated .WakfuProto.ProtoFriend ignored = 3;
  for (unsigned int i = 0, n = this->ignored_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->ignored(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WakfuProto.ProtoFriendLists)
}

::google::protobuf::uint8* ProtoFriendLists::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WakfuProto.ProtoFriendLists)
  // repeated .WakfuProto.ProtoFriend friends = 1;
  for (unsigned int i = 0, n = this->friends_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->friends(i), false, target);
  }

  // optional bool uselessFieldToSeparate = 2 [default = true];
  if (has_uselessfieldtoseparate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->uselessfieldtoseparate(), target);
  }

  // repeated .WakfuProto.ProtoFriend ignored = 3;
  for (unsigned int i = 0, n = this->ignored_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->ignored(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WakfuProto.ProtoFriendLists)
  return target;
}

size_t ProtoFriendLists::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WakfuProto.ProtoFriendLists)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .WakfuProto.ProtoFriend friends = 1;
  {
    unsigned int count = this->friends_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friends(i));
    }
  }

  // repeated .WakfuProto.ProtoFriend ignored = 3;
  {
    unsigned int count = this->ignored_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ignored(i));
    }
  }

  // optional bool uselessFieldToSeparate = 2 [default = true];
  if (has_uselessfieldtoseparate()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoFriendLists::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WakfuProto.ProtoFriendLists)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoFriendLists* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoFriendLists>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WakfuProto.ProtoFriendLists)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WakfuProto.ProtoFriendLists)
    MergeFrom(*source);
  }
}

void ProtoFriendLists::MergeFrom(const ProtoFriendLists& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WakfuProto.ProtoFriendLists)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  friends_.MergeFrom(from.friends_);
  ignored_.MergeFrom(from.ignored_);
  if (from.has_uselessfieldtoseparate()) {
    set_uselessfieldtoseparate(from.uselessfieldtoseparate());
  }
}

void ProtoFriendLists::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WakfuProto.ProtoFriendLists)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoFriendLists::CopyFrom(const ProtoFriendLists& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WakfuProto.ProtoFriendLists)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoFriendLists::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->friends())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->ignored())) return false;
  return true;
}

void ProtoFriendLists::Swap(ProtoFriendLists* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoFriendLists::InternalSwap(ProtoFriendLists* other) {
  friends_.UnsafeArenaSwap(&other->friends_);
  ignored_.UnsafeArenaSwap(&other->ignored_);
  std::swap(uselessfieldtoseparate_, other->uselessfieldtoseparate_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoFriendLists::GetMetadata() const {
  protobuf_chat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_chat_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtoFriendLists

// repeated .WakfuProto.ProtoFriend friends = 1;
int ProtoFriendLists::friends_size() const {
  return friends_.size();
}
void ProtoFriendLists::clear_friends() {
  friends_.Clear();
}
const ::WakfuProto::ProtoFriend& ProtoFriendLists::friends(int index) const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriendLists.friends)
  return friends_.Get(index);
}
::WakfuProto::ProtoFriend* ProtoFriendLists::mutable_friends(int index) {
  // @@protoc_insertion_point(field_mutable:WakfuProto.ProtoFriendLists.friends)
  return friends_.Mutable(index);
}
::WakfuProto::ProtoFriend* ProtoFriendLists::add_friends() {
  // @@protoc_insertion_point(field_add:WakfuProto.ProtoFriendLists.friends)
  return friends_.Add();
}
::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoFriend >*
ProtoFriendLists::mutable_friends() {
  // @@protoc_insertion_point(field_mutable_list:WakfuProto.ProtoFriendLists.friends)
  return &friends_;
}
const ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoFriend >&
ProtoFriendLists::friends() const {
  // @@protoc_insertion_point(field_list:WakfuProto.ProtoFriendLists.friends)
  return friends_;
}

// optional bool uselessFieldToSeparate = 2 [default = true];
bool ProtoFriendLists::has_uselessfieldtoseparate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProtoFriendLists::set_has_uselessfieldtoseparate() {
  _has_bits_[0] |= 0x00000001u;
}
void ProtoFriendLists::clear_has_uselessfieldtoseparate() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProtoFriendLists::clear_uselessfieldtoseparate() {
  uselessfieldtoseparate_ = true;
  clear_has_uselessfieldtoseparate();
}
bool ProtoFriendLists::uselessfieldtoseparate() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriendLists.uselessFieldToSeparate)
  return uselessfieldtoseparate_;
}
void ProtoFriendLists::set_uselessfieldtoseparate(bool value) {
  set_has_uselessfieldtoseparate();
  uselessfieldtoseparate_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoFriendLists.uselessFieldToSeparate)
}

// repeated .WakfuProto.ProtoFriend ignored = 3;
int ProtoFriendLists::ignored_size() const {
  return ignored_.size();
}
void ProtoFriendLists::clear_ignored() {
  ignored_.Clear();
}
const ::WakfuProto::ProtoFriend& ProtoFriendLists::ignored(int index) const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriendLists.ignored)
  return ignored_.Get(index);
}
::WakfuProto::ProtoFriend* ProtoFriendLists::mutable_ignored(int index) {
  // @@protoc_insertion_point(field_mutable:WakfuProto.ProtoFriendLists.ignored)
  return ignored_.Mutable(index);
}
::WakfuProto::ProtoFriend* ProtoFriendLists::add_ignored() {
  // @@protoc_insertion_point(field_add:WakfuProto.ProtoFriendLists.ignored)
  return ignored_.Add();
}
::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoFriend >*
ProtoFriendLists::mutable_ignored() {
  // @@protoc_insertion_point(field_mutable_list:WakfuProto.ProtoFriendLists.ignored)
  return &ignored_;
}
const ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoFriend >&
ProtoFriendLists::ignored() const {
  // @@protoc_insertion_point(field_list:WakfuProto.ProtoFriendLists.ignored)
  return ignored_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoFriend::kAccountIdFieldNumber;
const int ProtoFriend::kAccountNameFieldNumber;
const int ProtoFriend::kFlagsFieldNumber;
const int ProtoFriend::kCommentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoFriend::ProtoFriend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_chat_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WakfuProto.ProtoFriend)
}
ProtoFriend::ProtoFriend(const ProtoFriend& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_accountname()) {
    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_comment()) {
    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  ::memcpy(&accountid_, &from.accountid_,
    reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:WakfuProto.ProtoFriend)
}

void ProtoFriend::SharedCtor() {
  _cached_size_ = 0;
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(flags_));
}

ProtoFriend::~ProtoFriend() {
  // @@protoc_insertion_point(destructor:WakfuProto.ProtoFriend)
  SharedDtor();
}

void ProtoFriend::SharedDtor() {
  accountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProtoFriend::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoFriend::descriptor() {
  protobuf_chat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_chat_2eproto::file_level_metadata[1].descriptor;
}

const ProtoFriend& ProtoFriend::default_instance() {
  protobuf_chat_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProtoFriend* ProtoFriend::New(::google::protobuf::Arena* arena) const {
  ProtoFriend* n = new ProtoFriend;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoFriend::Clear() {
// @@protoc_insertion_point(message_clear_start:WakfuProto.ProtoFriend)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_accountname()) {
      GOOGLE_DCHECK(!accountname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*accountname_.UnsafeRawStringPointer())->clear();
    }
    if (has_comment()) {
      GOOGLE_DCHECK(!comment_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*comment_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 12u) {
    ::memset(&accountid_, 0, reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&accountid_) + sizeof(flags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProtoFriend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WakfuProto.ProtoFriend)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 accountId = 1;
      case 1: {
        if (tag == 8u) {
          set_has_accountid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string accountName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->accountname().data(), this->accountname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "WakfuProto.ProtoFriend.accountName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 flags = 50;
      case 50: {
        if (tag == 400u) {
          set_has_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string comment = 51;
      case 51: {
        if (tag == 410u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->comment().data(), this->comment().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "WakfuProto.ProtoFriend.comment");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WakfuProto.ProtoFriend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WakfuProto.ProtoFriend)
  return false;
#undef DO_
}

void ProtoFriend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WakfuProto.ProtoFriend)
  // required int64 accountId = 1;
  if (has_accountid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->accountid(), output);
  }

  // required string accountName = 2;
  if (has_accountname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "WakfuProto.ProtoFriend.accountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->accountname(), output);
  }

  // optional int32 flags = 50;
  if (has_flags()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(50, this->flags(), output);
  }

  // optional string comment = 51;
  if (has_comment()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "WakfuProto.ProtoFriend.comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      51, this->comment(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WakfuProto.ProtoFriend)
}

::google::protobuf::uint8* ProtoFriend::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WakfuProto.ProtoFriend)
  // required int64 accountId = 1;
  if (has_accountid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->accountid(), target);
  }

  // required string accountName = 2;
  if (has_accountname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "WakfuProto.ProtoFriend.accountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->accountname(), target);
  }

  // optional int32 flags = 50;
  if (has_flags()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(50, this->flags(), target);
  }

  // optional string comment = 51;
  if (has_comment()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "WakfuProto.ProtoFriend.comment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        51, this->comment(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WakfuProto.ProtoFriend)
  return target;
}

size_t ProtoFriend::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:WakfuProto.ProtoFriend)
  size_t total_size = 0;

  if (has_accountname()) {
    // required string accountName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accountname());
  }

  if (has_accountid()) {
    // required int64 accountId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->accountid());
  }

  return total_size;
}
size_t ProtoFriend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WakfuProto.ProtoFriend)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string accountName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accountname());

    // required int64 accountId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->accountid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string comment = 51;
  if (has_comment()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());
  }

  // optional int32 flags = 50;
  if (has_flags()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flags());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoFriend::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WakfuProto.ProtoFriend)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoFriend* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoFriend>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WakfuProto.ProtoFriend)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WakfuProto.ProtoFriend)
    MergeFrom(*source);
  }
}

void ProtoFriend::MergeFrom(const ProtoFriend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WakfuProto.ProtoFriend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_accountname()) {
      set_has_accountname();
      accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
    }
    if (from.has_comment()) {
      set_has_comment();
      comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
    }
    if (from.has_accountid()) {
      set_accountid(from.accountid());
    }
    if (from.has_flags()) {
      set_flags(from.flags());
    }
  }
}

void ProtoFriend::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WakfuProto.ProtoFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoFriend::CopyFrom(const ProtoFriend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WakfuProto.ProtoFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoFriend::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  return true;
}

void ProtoFriend::Swap(ProtoFriend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoFriend::InternalSwap(ProtoFriend* other) {
  accountname_.Swap(&other->accountname_);
  comment_.Swap(&other->comment_);
  std::swap(accountid_, other->accountid_);
  std::swap(flags_, other->flags_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoFriend::GetMetadata() const {
  protobuf_chat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_chat_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtoFriend

// required int64 accountId = 1;
bool ProtoFriend::has_accountid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ProtoFriend::set_has_accountid() {
  _has_bits_[0] |= 0x00000004u;
}
void ProtoFriend::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000004u;
}
void ProtoFriend::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
  clear_has_accountid();
}
::google::protobuf::int64 ProtoFriend::accountid() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriend.accountId)
  return accountid_;
}
void ProtoFriend::set_accountid(::google::protobuf::int64 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoFriend.accountId)
}

// required string accountName = 2;
bool ProtoFriend::has_accountname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProtoFriend::set_has_accountname() {
  _has_bits_[0] |= 0x00000001u;
}
void ProtoFriend::clear_has_accountname() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProtoFriend::clear_accountname() {
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_accountname();
}
const ::std::string& ProtoFriend::accountname() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriend.accountName)
  return accountname_.GetNoArena();
}
void ProtoFriend::set_accountname(const ::std::string& value) {
  set_has_accountname();
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoFriend.accountName)
}
#if LANG_CXX11
void ProtoFriend::set_accountname(::std::string&& value) {
  set_has_accountname();
  accountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WakfuProto.ProtoFriend.accountName)
}
#endif
void ProtoFriend::set_accountname(const char* value) {
  set_has_accountname();
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WakfuProto.ProtoFriend.accountName)
}
void ProtoFriend::set_accountname(const char* value, size_t size) {
  set_has_accountname();
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WakfuProto.ProtoFriend.accountName)
}
::std::string* ProtoFriend::mutable_accountname() {
  set_has_accountname();
  // @@protoc_insertion_point(field_mutable:WakfuProto.ProtoFriend.accountName)
  return accountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProtoFriend::release_accountname() {
  // @@protoc_insertion_point(field_release:WakfuProto.ProtoFriend.accountName)
  clear_has_accountname();
  return accountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProtoFriend::set_allocated_accountname(::std::string* accountname) {
  if (accountname != NULL) {
    set_has_accountname();
  } else {
    clear_has_accountname();
  }
  accountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountname);
  // @@protoc_insertion_point(field_set_allocated:WakfuProto.ProtoFriend.accountName)
}

// optional int32 flags = 50;
bool ProtoFriend::has_flags() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ProtoFriend::set_has_flags() {
  _has_bits_[0] |= 0x00000008u;
}
void ProtoFriend::clear_has_flags() {
  _has_bits_[0] &= ~0x00000008u;
}
void ProtoFriend::clear_flags() {
  flags_ = 0;
  clear_has_flags();
}
::google::protobuf::int32 ProtoFriend::flags() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriend.flags)
  return flags_;
}
void ProtoFriend::set_flags(::google::protobuf::int32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoFriend.flags)
}

// optional string comment = 51;
bool ProtoFriend::has_comment() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ProtoFriend::set_has_comment() {
  _has_bits_[0] |= 0x00000002u;
}
void ProtoFriend::clear_has_comment() {
  _has_bits_[0] &= ~0x00000002u;
}
void ProtoFriend::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_comment();
}
const ::std::string& ProtoFriend::comment() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriend.comment)
  return comment_.GetNoArena();
}
void ProtoFriend::set_comment(const ::std::string& value) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoFriend.comment)
}
#if LANG_CXX11
void ProtoFriend::set_comment(::std::string&& value) {
  set_has_comment();
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WakfuProto.ProtoFriend.comment)
}
#endif
void ProtoFriend::set_comment(const char* value) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WakfuProto.ProtoFriend.comment)
}
void ProtoFriend::set_comment(const char* value, size_t size) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WakfuProto.ProtoFriend.comment)
}
::std::string* ProtoFriend::mutable_comment() {
  set_has_comment();
  // @@protoc_insertion_point(field_mutable:WakfuProto.ProtoFriend.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProtoFriend::release_comment() {
  // @@protoc_insertion_point(field_release:WakfuProto.ProtoFriend.comment)
  clear_has_comment();
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProtoFriend::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    set_has_comment();
  } else {
    clear_has_comment();
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:WakfuProto.ProtoFriend.comment)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoFriendListsForClient::kFriendsFieldNumber;
const int ProtoFriendListsForClient::kIgnoredFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoFriendListsForClient::ProtoFriendListsForClient()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_chat_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WakfuProto.ProtoFriendListsForClient)
}
ProtoFriendListsForClient::ProtoFriendListsForClient(const ProtoFriendListsForClient& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      friends_(from.friends_),
      ignored_(from.ignored_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:WakfuProto.ProtoFriendListsForClient)
}

void ProtoFriendListsForClient::SharedCtor() {
  _cached_size_ = 0;
}

ProtoFriendListsForClient::~ProtoFriendListsForClient() {
  // @@protoc_insertion_point(destructor:WakfuProto.ProtoFriendListsForClient)
  SharedDtor();
}

void ProtoFriendListsForClient::SharedDtor() {
}

void ProtoFriendListsForClient::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoFriendListsForClient::descriptor() {
  protobuf_chat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_chat_2eproto::file_level_metadata[2].descriptor;
}

const ProtoFriendListsForClient& ProtoFriendListsForClient::default_instance() {
  protobuf_chat_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProtoFriendListsForClient* ProtoFriendListsForClient::New(::google::protobuf::Arena* arena) const {
  ProtoFriendListsForClient* n = new ProtoFriendListsForClient;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoFriendListsForClient::Clear() {
// @@protoc_insertion_point(message_clear_start:WakfuProto.ProtoFriendListsForClient)
  friends_.Clear();
  ignored_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProtoFriendListsForClient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WakfuProto.ProtoFriendListsForClient)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .WakfuProto.ProtoFriendInfoForClient friends = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_friends()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .WakfuProto.ProtoFriendInfoForClient ignored = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ignored()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WakfuProto.ProtoFriendListsForClient)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WakfuProto.ProtoFriendListsForClient)
  return false;
#undef DO_
}

void ProtoFriendListsForClient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WakfuProto.ProtoFriendListsForClient)
  // repeated .WakfuProto.ProtoFriendInfoForClient friends = 1;
  for (unsigned int i = 0, n = this->friends_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->friends(i), output);
  }

  // repeated .WakfuProto.ProtoFriendInfoForClient ignored = 2;
  for (unsigned int i = 0, n = this->ignored_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->ignored(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WakfuProto.ProtoFriendListsForClient)
}

::google::protobuf::uint8* ProtoFriendListsForClient::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WakfuProto.ProtoFriendListsForClient)
  // repeated .WakfuProto.ProtoFriendInfoForClient friends = 1;
  for (unsigned int i = 0, n = this->friends_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->friends(i), false, target);
  }

  // repeated .WakfuProto.ProtoFriendInfoForClient ignored = 2;
  for (unsigned int i = 0, n = this->ignored_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->ignored(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WakfuProto.ProtoFriendListsForClient)
  return target;
}

size_t ProtoFriendListsForClient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WakfuProto.ProtoFriendListsForClient)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .WakfuProto.ProtoFriendInfoForClient friends = 1;
  {
    unsigned int count = this->friends_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friends(i));
    }
  }

  // repeated .WakfuProto.ProtoFriendInfoForClient ignored = 2;
  {
    unsigned int count = this->ignored_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ignored(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoFriendListsForClient::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WakfuProto.ProtoFriendListsForClient)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoFriendListsForClient* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoFriendListsForClient>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WakfuProto.ProtoFriendListsForClient)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WakfuProto.ProtoFriendListsForClient)
    MergeFrom(*source);
  }
}

void ProtoFriendListsForClient::MergeFrom(const ProtoFriendListsForClient& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WakfuProto.ProtoFriendListsForClient)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  friends_.MergeFrom(from.friends_);
  ignored_.MergeFrom(from.ignored_);
}

void ProtoFriendListsForClient::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WakfuProto.ProtoFriendListsForClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoFriendListsForClient::CopyFrom(const ProtoFriendListsForClient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WakfuProto.ProtoFriendListsForClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoFriendListsForClient::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->friends())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->ignored())) return false;
  return true;
}

void ProtoFriendListsForClient::Swap(ProtoFriendListsForClient* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoFriendListsForClient::InternalSwap(ProtoFriendListsForClient* other) {
  friends_.UnsafeArenaSwap(&other->friends_);
  ignored_.UnsafeArenaSwap(&other->ignored_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoFriendListsForClient::GetMetadata() const {
  protobuf_chat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_chat_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtoFriendListsForClient

// repeated .WakfuProto.ProtoFriendInfoForClient friends = 1;
int ProtoFriendListsForClient::friends_size() const {
  return friends_.size();
}
void ProtoFriendListsForClient::clear_friends() {
  friends_.Clear();
}
const ::WakfuProto::ProtoFriendInfoForClient& ProtoFriendListsForClient::friends(int index) const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriendListsForClient.friends)
  return friends_.Get(index);
}
::WakfuProto::ProtoFriendInfoForClient* ProtoFriendListsForClient::mutable_friends(int index) {
  // @@protoc_insertion_point(field_mutable:WakfuProto.ProtoFriendListsForClient.friends)
  return friends_.Mutable(index);
}
::WakfuProto::ProtoFriendInfoForClient* ProtoFriendListsForClient::add_friends() {
  // @@protoc_insertion_point(field_add:WakfuProto.ProtoFriendListsForClient.friends)
  return friends_.Add();
}
::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoFriendInfoForClient >*
ProtoFriendListsForClient::mutable_friends() {
  // @@protoc_insertion_point(field_mutable_list:WakfuProto.ProtoFriendListsForClient.friends)
  return &friends_;
}
const ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoFriendInfoForClient >&
ProtoFriendListsForClient::friends() const {
  // @@protoc_insertion_point(field_list:WakfuProto.ProtoFriendListsForClient.friends)
  return friends_;
}

// repeated .WakfuProto.ProtoFriendInfoForClient ignored = 2;
int ProtoFriendListsForClient::ignored_size() const {
  return ignored_.size();
}
void ProtoFriendListsForClient::clear_ignored() {
  ignored_.Clear();
}
const ::WakfuProto::ProtoFriendInfoForClient& ProtoFriendListsForClient::ignored(int index) const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriendListsForClient.ignored)
  return ignored_.Get(index);
}
::WakfuProto::ProtoFriendInfoForClient* ProtoFriendListsForClient::mutable_ignored(int index) {
  // @@protoc_insertion_point(field_mutable:WakfuProto.ProtoFriendListsForClient.ignored)
  return ignored_.Mutable(index);
}
::WakfuProto::ProtoFriendInfoForClient* ProtoFriendListsForClient::add_ignored() {
  // @@protoc_insertion_point(field_add:WakfuProto.ProtoFriendListsForClient.ignored)
  return ignored_.Add();
}
::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoFriendInfoForClient >*
ProtoFriendListsForClient::mutable_ignored() {
  // @@protoc_insertion_point(field_mutable_list:WakfuProto.ProtoFriendListsForClient.ignored)
  return &ignored_;
}
const ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoFriendInfoForClient >&
ProtoFriendListsForClient::ignored() const {
  // @@protoc_insertion_point(field_list:WakfuProto.ProtoFriendListsForClient.ignored)
  return ignored_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoFriendInfoForClient::kAccountIdFieldNumber;
const int ProtoFriendInfoForClient::kAccountNameFieldNumber;
const int ProtoFriendInfoForClient::kIsOnlineFieldNumber;
const int ProtoFriendInfoForClient::kCharacterNameFieldNumber;
const int ProtoFriendInfoForClient::kNotifyFieldNumber;
const int ProtoFriendInfoForClient::kBreedIdFieldNumber;
const int ProtoFriendInfoForClient::kSexFieldNumber;
const int ProtoFriendInfoForClient::kCommentaryFieldNumber;
const int ProtoFriendInfoForClient::kXpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoFriendInfoForClient::ProtoFriendInfoForClient()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_chat_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WakfuProto.ProtoFriendInfoForClient)
}
ProtoFriendInfoForClient::ProtoFriendInfoForClient(const ProtoFriendInfoForClient& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_accountname()) {
    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  charactername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_charactername()) {
    charactername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.charactername_);
  }
  commentary_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_commentary()) {
    commentary_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commentary_);
  }
  ::memcpy(&accountid_, &from.accountid_,
    reinterpret_cast<char*>(&xp_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(xp_));
  // @@protoc_insertion_point(copy_constructor:WakfuProto.ProtoFriendInfoForClient)
}

void ProtoFriendInfoForClient::SharedCtor() {
  _cached_size_ = 0;
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  charactername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  commentary_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&notify_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(notify_));
  breedid_ = -1;
  sex_ = -1;
  xp_ = GOOGLE_LONGLONG(-1);
}

ProtoFriendInfoForClient::~ProtoFriendInfoForClient() {
  // @@protoc_insertion_point(destructor:WakfuProto.ProtoFriendInfoForClient)
  SharedDtor();
}

void ProtoFriendInfoForClient::SharedDtor() {
  accountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  charactername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  commentary_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProtoFriendInfoForClient::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoFriendInfoForClient::descriptor() {
  protobuf_chat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_chat_2eproto::file_level_metadata[3].descriptor;
}

const ProtoFriendInfoForClient& ProtoFriendInfoForClient::default_instance() {
  protobuf_chat_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProtoFriendInfoForClient* ProtoFriendInfoForClient::New(::google::protobuf::Arena* arena) const {
  ProtoFriendInfoForClient* n = new ProtoFriendInfoForClient;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoFriendInfoForClient::Clear() {
// @@protoc_insertion_point(message_clear_start:WakfuProto.ProtoFriendInfoForClient)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_accountname()) {
      GOOGLE_DCHECK(!accountname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*accountname_.UnsafeRawStringPointer())->clear();
    }
    if (has_charactername()) {
      GOOGLE_DCHECK(!charactername_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*charactername_.UnsafeRawStringPointer())->clear();
    }
    if (has_commentary()) {
      GOOGLE_DCHECK(!commentary_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*commentary_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 248u) {
    ::memset(&accountid_, 0, reinterpret_cast<char*>(&notify_) -
      reinterpret_cast<char*>(&accountid_) + sizeof(notify_));
    breedid_ = -1;
    sex_ = -1;
  }
  xp_ = GOOGLE_LONGLONG(-1);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProtoFriendInfoForClient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WakfuProto.ProtoFriendInfoForClient)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 accountId = 1;
      case 1: {
        if (tag == 8u) {
          set_has_accountid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string accountName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->accountname().data(), this->accountname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "WakfuProto.ProtoFriendInfoForClient.accountName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool isOnline = 4;
      case 4: {
        if (tag == 32u) {
          set_has_isonline();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isonline_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string characterName = 50 [default = ""];
      case 50: {
        if (tag == 402u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_charactername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->charactername().data(), this->charactername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "WakfuProto.ProtoFriendInfoForClient.characterName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool notify = 51;
      case 51: {
        if (tag == 408u) {
          set_has_notify();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &notify_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 breedId = 52 [default = -1];
      case 52: {
        if (tag == 416u) {
          set_has_breedid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &breedid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sex = 53 [default = -1];
      case 53: {
        if (tag == 424u) {
          set_has_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string commentary = 54;
      case 54: {
        if (tag == 434u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_commentary()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->commentary().data(), this->commentary().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "WakfuProto.ProtoFriendInfoForClient.commentary");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 xp = 55 [default = -1];
      case 55: {
        if (tag == 440u) {
          set_has_xp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &xp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WakfuProto.ProtoFriendInfoForClient)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WakfuProto.ProtoFriendInfoForClient)
  return false;
#undef DO_
}

void ProtoFriendInfoForClient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WakfuProto.ProtoFriendInfoForClient)
  // required int64 accountId = 1;
  if (has_accountid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->accountid(), output);
  }

  // required string accountName = 2;
  if (has_accountname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "WakfuProto.ProtoFriendInfoForClient.accountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->accountname(), output);
  }

  // required bool isOnline = 4;
  if (has_isonline()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->isonline(), output);
  }

  // optional string characterName = 50 [default = ""];
  if (has_charactername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->charactername().data(), this->charactername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "WakfuProto.ProtoFriendInfoForClient.characterName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      50, this->charactername(), output);
  }

  // optional bool notify = 51;
  if (has_notify()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(51, this->notify(), output);
  }

  // optional int32 breedId = 52 [default = -1];
  if (has_breedid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(52, this->breedid(), output);
  }

  // optional int32 sex = 53 [default = -1];
  if (has_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(53, this->sex(), output);
  }

  // optional string commentary = 54;
  if (has_commentary()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->commentary().data(), this->commentary().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "WakfuProto.ProtoFriendInfoForClient.commentary");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      54, this->commentary(), output);
  }

  // optional int64 xp = 55 [default = -1];
  if (has_xp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(55, this->xp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WakfuProto.ProtoFriendInfoForClient)
}

::google::protobuf::uint8* ProtoFriendInfoForClient::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WakfuProto.ProtoFriendInfoForClient)
  // required int64 accountId = 1;
  if (has_accountid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->accountid(), target);
  }

  // required string accountName = 2;
  if (has_accountname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "WakfuProto.ProtoFriendInfoForClient.accountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->accountname(), target);
  }

  // required bool isOnline = 4;
  if (has_isonline()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->isonline(), target);
  }

  // optional string characterName = 50 [default = ""];
  if (has_charactername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->charactername().data(), this->charactername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "WakfuProto.ProtoFriendInfoForClient.characterName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        50, this->charactername(), target);
  }

  // optional bool notify = 51;
  if (has_notify()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(51, this->notify(), target);
  }

  // optional int32 breedId = 52 [default = -1];
  if (has_breedid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(52, this->breedid(), target);
  }

  // optional int32 sex = 53 [default = -1];
  if (has_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(53, this->sex(), target);
  }

  // optional string commentary = 54;
  if (has_commentary()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->commentary().data(), this->commentary().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "WakfuProto.ProtoFriendInfoForClient.commentary");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        54, this->commentary(), target);
  }

  // optional int64 xp = 55 [default = -1];
  if (has_xp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(55, this->xp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WakfuProto.ProtoFriendInfoForClient)
  return target;
}

size_t ProtoFriendInfoForClient::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:WakfuProto.ProtoFriendInfoForClient)
  size_t total_size = 0;

  if (has_accountname()) {
    // required string accountName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accountname());
  }

  if (has_accountid()) {
    // required int64 accountId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->accountid());
  }

  if (has_isonline()) {
    // required bool isOnline = 4;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t ProtoFriendInfoForClient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WakfuProto.ProtoFriendInfoForClient)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000019) ^ 0x00000019) == 0) {  // All required fields are present.
    // required string accountName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accountname());

    // required int64 accountId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->accountid());

    // required bool isOnline = 4;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional string characterName = 50 [default = ""];
    if (has_charactername()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->charactername());
    }

    // optional string commentary = 54;
    if (has_commentary()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->commentary());
    }

  }
  if (_has_bits_[0 / 32] & 224u) {
    // optional bool notify = 51;
    if (has_notify()) {
      total_size += 2 + 1;
    }

    // optional int32 breedId = 52 [default = -1];
    if (has_breedid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->breedid());
    }

    // optional int32 sex = 53 [default = -1];
    if (has_sex()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex());
    }

  }
  // optional int64 xp = 55 [default = -1];
  if (has_xp()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->xp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoFriendInfoForClient::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WakfuProto.ProtoFriendInfoForClient)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoFriendInfoForClient* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoFriendInfoForClient>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WakfuProto.ProtoFriendInfoForClient)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WakfuProto.ProtoFriendInfoForClient)
    MergeFrom(*source);
  }
}

void ProtoFriendInfoForClient::MergeFrom(const ProtoFriendInfoForClient& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WakfuProto.ProtoFriendInfoForClient)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 255u) {
    if (from.has_accountname()) {
      set_has_accountname();
      accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
    }
    if (from.has_charactername()) {
      set_has_charactername();
      charactername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.charactername_);
    }
    if (from.has_commentary()) {
      set_has_commentary();
      commentary_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commentary_);
    }
    if (from.has_accountid()) {
      set_accountid(from.accountid());
    }
    if (from.has_isonline()) {
      set_isonline(from.isonline());
    }
    if (from.has_notify()) {
      set_notify(from.notify());
    }
    if (from.has_breedid()) {
      set_breedid(from.breedid());
    }
    if (from.has_sex()) {
      set_sex(from.sex());
    }
  }
  if (from.has_xp()) {
    set_xp(from.xp());
  }
}

void ProtoFriendInfoForClient::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WakfuProto.ProtoFriendInfoForClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoFriendInfoForClient::CopyFrom(const ProtoFriendInfoForClient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WakfuProto.ProtoFriendInfoForClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoFriendInfoForClient::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000019) != 0x00000019) return false;
  return true;
}

void ProtoFriendInfoForClient::Swap(ProtoFriendInfoForClient* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoFriendInfoForClient::InternalSwap(ProtoFriendInfoForClient* other) {
  accountname_.Swap(&other->accountname_);
  charactername_.Swap(&other->charactername_);
  commentary_.Swap(&other->commentary_);
  std::swap(accountid_, other->accountid_);
  std::swap(isonline_, other->isonline_);
  std::swap(notify_, other->notify_);
  std::swap(breedid_, other->breedid_);
  std::swap(sex_, other->sex_);
  std::swap(xp_, other->xp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoFriendInfoForClient::GetMetadata() const {
  protobuf_chat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_chat_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtoFriendInfoForClient

// required int64 accountId = 1;
bool ProtoFriendInfoForClient::has_accountid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ProtoFriendInfoForClient::set_has_accountid() {
  _has_bits_[0] |= 0x00000008u;
}
void ProtoFriendInfoForClient::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000008u;
}
void ProtoFriendInfoForClient::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
  clear_has_accountid();
}
::google::protobuf::int64 ProtoFriendInfoForClient::accountid() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriendInfoForClient.accountId)
  return accountid_;
}
void ProtoFriendInfoForClient::set_accountid(::google::protobuf::int64 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoFriendInfoForClient.accountId)
}

// required string accountName = 2;
bool ProtoFriendInfoForClient::has_accountname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProtoFriendInfoForClient::set_has_accountname() {
  _has_bits_[0] |= 0x00000001u;
}
void ProtoFriendInfoForClient::clear_has_accountname() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProtoFriendInfoForClient::clear_accountname() {
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_accountname();
}
const ::std::string& ProtoFriendInfoForClient::accountname() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriendInfoForClient.accountName)
  return accountname_.GetNoArena();
}
void ProtoFriendInfoForClient::set_accountname(const ::std::string& value) {
  set_has_accountname();
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoFriendInfoForClient.accountName)
}
#if LANG_CXX11
void ProtoFriendInfoForClient::set_accountname(::std::string&& value) {
  set_has_accountname();
  accountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WakfuProto.ProtoFriendInfoForClient.accountName)
}
#endif
void ProtoFriendInfoForClient::set_accountname(const char* value) {
  set_has_accountname();
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WakfuProto.ProtoFriendInfoForClient.accountName)
}
void ProtoFriendInfoForClient::set_accountname(const char* value, size_t size) {
  set_has_accountname();
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WakfuProto.ProtoFriendInfoForClient.accountName)
}
::std::string* ProtoFriendInfoForClient::mutable_accountname() {
  set_has_accountname();
  // @@protoc_insertion_point(field_mutable:WakfuProto.ProtoFriendInfoForClient.accountName)
  return accountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProtoFriendInfoForClient::release_accountname() {
  // @@protoc_insertion_point(field_release:WakfuProto.ProtoFriendInfoForClient.accountName)
  clear_has_accountname();
  return accountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProtoFriendInfoForClient::set_allocated_accountname(::std::string* accountname) {
  if (accountname != NULL) {
    set_has_accountname();
  } else {
    clear_has_accountname();
  }
  accountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountname);
  // @@protoc_insertion_point(field_set_allocated:WakfuProto.ProtoFriendInfoForClient.accountName)
}

// required bool isOnline = 4;
bool ProtoFriendInfoForClient::has_isonline() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ProtoFriendInfoForClient::set_has_isonline() {
  _has_bits_[0] |= 0x00000010u;
}
void ProtoFriendInfoForClient::clear_has_isonline() {
  _has_bits_[0] &= ~0x00000010u;
}
void ProtoFriendInfoForClient::clear_isonline() {
  isonline_ = false;
  clear_has_isonline();
}
bool ProtoFriendInfoForClient::isonline() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriendInfoForClient.isOnline)
  return isonline_;
}
void ProtoFriendInfoForClient::set_isonline(bool value) {
  set_has_isonline();
  isonline_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoFriendInfoForClient.isOnline)
}

// optional string characterName = 50 [default = ""];
bool ProtoFriendInfoForClient::has_charactername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ProtoFriendInfoForClient::set_has_charactername() {
  _has_bits_[0] |= 0x00000002u;
}
void ProtoFriendInfoForClient::clear_has_charactername() {
  _has_bits_[0] &= ~0x00000002u;
}
void ProtoFriendInfoForClient::clear_charactername() {
  charactername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_charactername();
}
const ::std::string& ProtoFriendInfoForClient::charactername() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriendInfoForClient.characterName)
  return charactername_.GetNoArena();
}
void ProtoFriendInfoForClient::set_charactername(const ::std::string& value) {
  set_has_charactername();
  charactername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoFriendInfoForClient.characterName)
}
#if LANG_CXX11
void ProtoFriendInfoForClient::set_charactername(::std::string&& value) {
  set_has_charactername();
  charactername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WakfuProto.ProtoFriendInfoForClient.characterName)
}
#endif
void ProtoFriendInfoForClient::set_charactername(const char* value) {
  set_has_charactername();
  charactername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WakfuProto.ProtoFriendInfoForClient.characterName)
}
void ProtoFriendInfoForClient::set_charactername(const char* value, size_t size) {
  set_has_charactername();
  charactername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WakfuProto.ProtoFriendInfoForClient.characterName)
}
::std::string* ProtoFriendInfoForClient::mutable_charactername() {
  set_has_charactername();
  // @@protoc_insertion_point(field_mutable:WakfuProto.ProtoFriendInfoForClient.characterName)
  return charactername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProtoFriendInfoForClient::release_charactername() {
  // @@protoc_insertion_point(field_release:WakfuProto.ProtoFriendInfoForClient.characterName)
  clear_has_charactername();
  return charactername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProtoFriendInfoForClient::set_allocated_charactername(::std::string* charactername) {
  if (charactername != NULL) {
    set_has_charactername();
  } else {
    clear_has_charactername();
  }
  charactername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), charactername);
  // @@protoc_insertion_point(field_set_allocated:WakfuProto.ProtoFriendInfoForClient.characterName)
}

// optional bool notify = 51;
bool ProtoFriendInfoForClient::has_notify() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ProtoFriendInfoForClient::set_has_notify() {
  _has_bits_[0] |= 0x00000020u;
}
void ProtoFriendInfoForClient::clear_has_notify() {
  _has_bits_[0] &= ~0x00000020u;
}
void ProtoFriendInfoForClient::clear_notify() {
  notify_ = false;
  clear_has_notify();
}
bool ProtoFriendInfoForClient::notify() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriendInfoForClient.notify)
  return notify_;
}
void ProtoFriendInfoForClient::set_notify(bool value) {
  set_has_notify();
  notify_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoFriendInfoForClient.notify)
}

// optional int32 breedId = 52 [default = -1];
bool ProtoFriendInfoForClient::has_breedid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ProtoFriendInfoForClient::set_has_breedid() {
  _has_bits_[0] |= 0x00000040u;
}
void ProtoFriendInfoForClient::clear_has_breedid() {
  _has_bits_[0] &= ~0x00000040u;
}
void ProtoFriendInfoForClient::clear_breedid() {
  breedid_ = -1;
  clear_has_breedid();
}
::google::protobuf::int32 ProtoFriendInfoForClient::breedid() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriendInfoForClient.breedId)
  return breedid_;
}
void ProtoFriendInfoForClient::set_breedid(::google::protobuf::int32 value) {
  set_has_breedid();
  breedid_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoFriendInfoForClient.breedId)
}

// optional int32 sex = 53 [default = -1];
bool ProtoFriendInfoForClient::has_sex() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ProtoFriendInfoForClient::set_has_sex() {
  _has_bits_[0] |= 0x00000080u;
}
void ProtoFriendInfoForClient::clear_has_sex() {
  _has_bits_[0] &= ~0x00000080u;
}
void ProtoFriendInfoForClient::clear_sex() {
  sex_ = -1;
  clear_has_sex();
}
::google::protobuf::int32 ProtoFriendInfoForClient::sex() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriendInfoForClient.sex)
  return sex_;
}
void ProtoFriendInfoForClient::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoFriendInfoForClient.sex)
}

// optional string commentary = 54;
bool ProtoFriendInfoForClient::has_commentary() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ProtoFriendInfoForClient::set_has_commentary() {
  _has_bits_[0] |= 0x00000004u;
}
void ProtoFriendInfoForClient::clear_has_commentary() {
  _has_bits_[0] &= ~0x00000004u;
}
void ProtoFriendInfoForClient::clear_commentary() {
  commentary_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_commentary();
}
const ::std::string& ProtoFriendInfoForClient::commentary() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriendInfoForClient.commentary)
  return commentary_.GetNoArena();
}
void ProtoFriendInfoForClient::set_commentary(const ::std::string& value) {
  set_has_commentary();
  commentary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoFriendInfoForClient.commentary)
}
#if LANG_CXX11
void ProtoFriendInfoForClient::set_commentary(::std::string&& value) {
  set_has_commentary();
  commentary_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WakfuProto.ProtoFriendInfoForClient.commentary)
}
#endif
void ProtoFriendInfoForClient::set_commentary(const char* value) {
  set_has_commentary();
  commentary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WakfuProto.ProtoFriendInfoForClient.commentary)
}
void ProtoFriendInfoForClient::set_commentary(const char* value, size_t size) {
  set_has_commentary();
  commentary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WakfuProto.ProtoFriendInfoForClient.commentary)
}
::std::string* ProtoFriendInfoForClient::mutable_commentary() {
  set_has_commentary();
  // @@protoc_insertion_point(field_mutable:WakfuProto.ProtoFriendInfoForClient.commentary)
  return commentary_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProtoFriendInfoForClient::release_commentary() {
  // @@protoc_insertion_point(field_release:WakfuProto.ProtoFriendInfoForClient.commentary)
  clear_has_commentary();
  return commentary_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProtoFriendInfoForClient::set_allocated_commentary(::std::string* commentary) {
  if (commentary != NULL) {
    set_has_commentary();
  } else {
    clear_has_commentary();
  }
  commentary_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commentary);
  // @@protoc_insertion_point(field_set_allocated:WakfuProto.ProtoFriendInfoForClient.commentary)
}

// optional int64 xp = 55 [default = -1];
bool ProtoFriendInfoForClient::has_xp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ProtoFriendInfoForClient::set_has_xp() {
  _has_bits_[0] |= 0x00000100u;
}
void ProtoFriendInfoForClient::clear_has_xp() {
  _has_bits_[0] &= ~0x00000100u;
}
void ProtoFriendInfoForClient::clear_xp() {
  xp_ = GOOGLE_LONGLONG(-1);
  clear_has_xp();
}
::google::protobuf::int64 ProtoFriendInfoForClient::xp() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoFriendInfoForClient.xp)
  return xp_;
}
void ProtoFriendInfoForClient::set_xp(::google::protobuf::int64 value) {
  set_has_xp();
  xp_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoFriendInfoForClient.xp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace WakfuProto

// @@protoc_insertion_point(global_scope)
