// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dungeon_progression.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dungeon_progression.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace WakfuProto {
class ProtoDungeonProgressionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ProtoDungeonProgression> {
} _ProtoDungeonProgression_default_instance_;
class ProtoDungeonEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ProtoDungeonEntry> {
} _ProtoDungeonEntry_default_instance_;

namespace protobuf_dungeon_5fprogression_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDungeonProgression, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDungeonProgression, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDungeonProgression, map_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDungeonEntry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDungeonEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDungeonEntry, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoDungeonEntry, difficulty_),
  0,
  1,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 5, sizeof(ProtoDungeonProgression)},
  { 6, 12, sizeof(ProtoDungeonEntry)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProtoDungeonProgression_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProtoDungeonEntry_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "dungeon_progression.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _ProtoDungeonProgression_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ProtoDungeonEntry_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ProtoDungeonProgression_default_instance_.DefaultConstruct();
  _ProtoDungeonEntry_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\031dungeon_progression.proto\022\nWakfuProto\""
      "E\n\027ProtoDungeonProgression\022*\n\003map\030\001 \003(\0132"
      "\035.WakfuProto.ProtoDungeonEntry\"6\n\021ProtoD"
      "ungeonEntry\022\r\n\005index\030\001 \002(\005\022\022\n\ndifficulty"
      "\030\002 \002(\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 166);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dungeon_progression.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_dungeon_5fprogression_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoDungeonProgression::kMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoDungeonProgression::ProtoDungeonProgression()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dungeon_5fprogression_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WakfuProto.ProtoDungeonProgression)
}
ProtoDungeonProgression::ProtoDungeonProgression(const ProtoDungeonProgression& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      map_(from.map_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:WakfuProto.ProtoDungeonProgression)
}

void ProtoDungeonProgression::SharedCtor() {
  _cached_size_ = 0;
}

ProtoDungeonProgression::~ProtoDungeonProgression() {
  // @@protoc_insertion_point(destructor:WakfuProto.ProtoDungeonProgression)
  SharedDtor();
}

void ProtoDungeonProgression::SharedDtor() {
}

void ProtoDungeonProgression::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoDungeonProgression::descriptor() {
  protobuf_dungeon_5fprogression_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dungeon_5fprogression_2eproto::file_level_metadata[0].descriptor;
}

const ProtoDungeonProgression& ProtoDungeonProgression::default_instance() {
  protobuf_dungeon_5fprogression_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProtoDungeonProgression* ProtoDungeonProgression::New(::google::protobuf::Arena* arena) const {
  ProtoDungeonProgression* n = new ProtoDungeonProgression;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoDungeonProgression::Clear() {
// @@protoc_insertion_point(message_clear_start:WakfuProto.ProtoDungeonProgression)
  map_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProtoDungeonProgression::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WakfuProto.ProtoDungeonProgression)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .WakfuProto.ProtoDungeonEntry map = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_map()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WakfuProto.ProtoDungeonProgression)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WakfuProto.ProtoDungeonProgression)
  return false;
#undef DO_
}

void ProtoDungeonProgression::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WakfuProto.ProtoDungeonProgression)
  // repeated .WakfuProto.ProtoDungeonEntry map = 1;
  for (unsigned int i = 0, n = this->map_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->map(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WakfuProto.ProtoDungeonProgression)
}

::google::protobuf::uint8* ProtoDungeonProgression::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WakfuProto.ProtoDungeonProgression)
  // repeated .WakfuProto.ProtoDungeonEntry map = 1;
  for (unsigned int i = 0, n = this->map_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->map(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WakfuProto.ProtoDungeonProgression)
  return target;
}

size_t ProtoDungeonProgression::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WakfuProto.ProtoDungeonProgression)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .WakfuProto.ProtoDungeonEntry map = 1;
  {
    unsigned int count = this->map_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->map(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoDungeonProgression::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WakfuProto.ProtoDungeonProgression)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoDungeonProgression* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoDungeonProgression>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WakfuProto.ProtoDungeonProgression)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WakfuProto.ProtoDungeonProgression)
    MergeFrom(*source);
  }
}

void ProtoDungeonProgression::MergeFrom(const ProtoDungeonProgression& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WakfuProto.ProtoDungeonProgression)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  map_.MergeFrom(from.map_);
}

void ProtoDungeonProgression::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WakfuProto.ProtoDungeonProgression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoDungeonProgression::CopyFrom(const ProtoDungeonProgression& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WakfuProto.ProtoDungeonProgression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoDungeonProgression::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->map())) return false;
  return true;
}

void ProtoDungeonProgression::Swap(ProtoDungeonProgression* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoDungeonProgression::InternalSwap(ProtoDungeonProgression* other) {
  map_.UnsafeArenaSwap(&other->map_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoDungeonProgression::GetMetadata() const {
  protobuf_dungeon_5fprogression_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dungeon_5fprogression_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtoDungeonProgression

// repeated .WakfuProto.ProtoDungeonEntry map = 1;
int ProtoDungeonProgression::map_size() const {
  return map_.size();
}
void ProtoDungeonProgression::clear_map() {
  map_.Clear();
}
const ::WakfuProto::ProtoDungeonEntry& ProtoDungeonProgression::map(int index) const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoDungeonProgression.map)
  return map_.Get(index);
}
::WakfuProto::ProtoDungeonEntry* ProtoDungeonProgression::mutable_map(int index) {
  // @@protoc_insertion_point(field_mutable:WakfuProto.ProtoDungeonProgression.map)
  return map_.Mutable(index);
}
::WakfuProto::ProtoDungeonEntry* ProtoDungeonProgression::add_map() {
  // @@protoc_insertion_point(field_add:WakfuProto.ProtoDungeonProgression.map)
  return map_.Add();
}
::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoDungeonEntry >*
ProtoDungeonProgression::mutable_map() {
  // @@protoc_insertion_point(field_mutable_list:WakfuProto.ProtoDungeonProgression.map)
  return &map_;
}
const ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoDungeonEntry >&
ProtoDungeonProgression::map() const {
  // @@protoc_insertion_point(field_list:WakfuProto.ProtoDungeonProgression.map)
  return map_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoDungeonEntry::kIndexFieldNumber;
const int ProtoDungeonEntry::kDifficultyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoDungeonEntry::ProtoDungeonEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dungeon_5fprogression_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WakfuProto.ProtoDungeonEntry)
}
ProtoDungeonEntry::ProtoDungeonEntry(const ProtoDungeonEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&index_, &from.index_,
    reinterpret_cast<char*>(&difficulty_) -
    reinterpret_cast<char*>(&index_) + sizeof(difficulty_));
  // @@protoc_insertion_point(copy_constructor:WakfuProto.ProtoDungeonEntry)
}

void ProtoDungeonEntry::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&index_, 0, reinterpret_cast<char*>(&difficulty_) -
    reinterpret_cast<char*>(&index_) + sizeof(difficulty_));
}

ProtoDungeonEntry::~ProtoDungeonEntry() {
  // @@protoc_insertion_point(destructor:WakfuProto.ProtoDungeonEntry)
  SharedDtor();
}

void ProtoDungeonEntry::SharedDtor() {
}

void ProtoDungeonEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoDungeonEntry::descriptor() {
  protobuf_dungeon_5fprogression_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dungeon_5fprogression_2eproto::file_level_metadata[1].descriptor;
}

const ProtoDungeonEntry& ProtoDungeonEntry::default_instance() {
  protobuf_dungeon_5fprogression_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProtoDungeonEntry* ProtoDungeonEntry::New(::google::protobuf::Arena* arena) const {
  ProtoDungeonEntry* n = new ProtoDungeonEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoDungeonEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:WakfuProto.ProtoDungeonEntry)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&index_, 0, reinterpret_cast<char*>(&difficulty_) -
      reinterpret_cast<char*>(&index_) + sizeof(difficulty_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProtoDungeonEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WakfuProto.ProtoDungeonEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 index = 1;
      case 1: {
        if (tag == 8u) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 difficulty = 2;
      case 2: {
        if (tag == 16u) {
          set_has_difficulty();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &difficulty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WakfuProto.ProtoDungeonEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WakfuProto.ProtoDungeonEntry)
  return false;
#undef DO_
}

void ProtoDungeonEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WakfuProto.ProtoDungeonEntry)
  // required int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // required int32 difficulty = 2;
  if (has_difficulty()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->difficulty(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WakfuProto.ProtoDungeonEntry)
}

::google::protobuf::uint8* ProtoDungeonEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WakfuProto.ProtoDungeonEntry)
  // required int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // required int32 difficulty = 2;
  if (has_difficulty()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->difficulty(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WakfuProto.ProtoDungeonEntry)
  return target;
}

size_t ProtoDungeonEntry::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:WakfuProto.ProtoDungeonEntry)
  size_t total_size = 0;

  if (has_index()) {
    // required int32 index = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  if (has_difficulty()) {
    // required int32 difficulty = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->difficulty());
  }

  return total_size;
}
size_t ProtoDungeonEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WakfuProto.ProtoDungeonEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 index = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());

    // required int32 difficulty = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->difficulty());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoDungeonEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WakfuProto.ProtoDungeonEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoDungeonEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoDungeonEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WakfuProto.ProtoDungeonEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WakfuProto.ProtoDungeonEntry)
    MergeFrom(*source);
  }
}

void ProtoDungeonEntry::MergeFrom(const ProtoDungeonEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WakfuProto.ProtoDungeonEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_difficulty()) {
      set_difficulty(from.difficulty());
    }
  }
}

void ProtoDungeonEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WakfuProto.ProtoDungeonEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoDungeonEntry::CopyFrom(const ProtoDungeonEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WakfuProto.ProtoDungeonEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoDungeonEntry::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ProtoDungeonEntry::Swap(ProtoDungeonEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoDungeonEntry::InternalSwap(ProtoDungeonEntry* other) {
  std::swap(index_, other->index_);
  std::swap(difficulty_, other->difficulty_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoDungeonEntry::GetMetadata() const {
  protobuf_dungeon_5fprogression_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dungeon_5fprogression_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtoDungeonEntry

// required int32 index = 1;
bool ProtoDungeonEntry::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProtoDungeonEntry::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
void ProtoDungeonEntry::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProtoDungeonEntry::clear_index() {
  index_ = 0;
  clear_has_index();
}
::google::protobuf::int32 ProtoDungeonEntry::index() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoDungeonEntry.index)
  return index_;
}
void ProtoDungeonEntry::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoDungeonEntry.index)
}

// required int32 difficulty = 2;
bool ProtoDungeonEntry::has_difficulty() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ProtoDungeonEntry::set_has_difficulty() {
  _has_bits_[0] |= 0x00000002u;
}
void ProtoDungeonEntry::clear_has_difficulty() {
  _has_bits_[0] &= ~0x00000002u;
}
void ProtoDungeonEntry::clear_difficulty() {
  difficulty_ = 0;
  clear_has_difficulty();
}
::google::protobuf::int32 ProtoDungeonEntry::difficulty() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoDungeonEntry.difficulty)
  return difficulty_;
}
void ProtoDungeonEntry::set_difficulty(::google::protobuf::int32 value) {
  set_has_difficulty();
  difficulty_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoDungeonEntry.difficulty)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace WakfuProto

// @@protoc_insertion_point(global_scope)
