// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: equipment.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "equipment.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace WakfuProto {
class ProtoEquipmentSheet_ProtoEquipmentItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ProtoEquipmentSheet_ProtoEquipmentItem> {
} _ProtoEquipmentSheet_ProtoEquipmentItem_default_instance_;
class ProtoEquipmentSheetDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ProtoEquipmentSheet> {
} _ProtoEquipmentSheet_default_instance_;
class ProtoEquipmentSetDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ProtoEquipmentSet> {
} _ProtoEquipmentSet_default_instance_;
class ProtoEquipmentAccountDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ProtoEquipmentAccount> {
} _ProtoEquipmentAccount_default_instance_;
class ProtoEquipmentInventoryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ProtoEquipmentInventory> {
} _ProtoEquipmentInventory_default_instance_;

namespace protobuf_equipment_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoEquipmentSheet_ProtoEquipmentItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoEquipmentSheet_ProtoEquipmentItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoEquipmentSheet_ProtoEquipmentItem, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoEquipmentSheet_ProtoEquipmentItem, position_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoEquipmentSheet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoEquipmentSheet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoEquipmentSheet, items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoEquipmentSheet, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoEquipmentSheet, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoEquipmentSheet, level_),
  ~0u,
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoEquipmentSet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoEquipmentSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoEquipmentSet, sheets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoEquipmentSet, characterid_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoEquipmentAccount, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoEquipmentAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoEquipmentAccount, sets_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoEquipmentInventory, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoEquipmentInventory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoEquipmentInventory, items_),
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 6, sizeof(ProtoEquipmentSheet_ProtoEquipmentItem)},
  { 8, 16, sizeof(ProtoEquipmentSheet)},
  { 20, 26, sizeof(ProtoEquipmentSet)},
  { 28, 33, sizeof(ProtoEquipmentAccount)},
  { 34, 39, sizeof(ProtoEquipmentInventory)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProtoEquipmentSheet_ProtoEquipmentItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProtoEquipmentSheet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProtoEquipmentSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProtoEquipmentAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProtoEquipmentInventory_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "equipment.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace

void TableStruct::Shutdown() {
  _ProtoEquipmentSheet_ProtoEquipmentItem_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ProtoEquipmentSheet_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _ProtoEquipmentSet_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _ProtoEquipmentAccount_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _ProtoEquipmentInventory_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::WakfuProto::protobuf_item_2eproto::InitDefaults();
  _ProtoEquipmentSheet_ProtoEquipmentItem_default_instance_.DefaultConstruct();
  _ProtoEquipmentSheet_default_instance_.DefaultConstruct();
  _ProtoEquipmentSet_default_instance_.DefaultConstruct();
  _ProtoEquipmentAccount_default_instance_.DefaultConstruct();
  _ProtoEquipmentInventory_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\017equipment.proto\022\nWakfuProto\032\nitem.prot"
      "o\"\271\001\n\023ProtoEquipmentSheet\022A\n\005items\030\001 \003(\013"
      "22.WakfuProto.ProtoEquipmentSheet.ProtoE"
      "quipmentItem\022\r\n\005index\0303 \001(\005\022\014\n\004name\0304 \001("
      "\t\022\r\n\005level\0305 \001(\005\0323\n\022ProtoEquipmentItem\022\013"
      "\n\003uid\030\001 \002(\003\022\020\n\010position\030\002 \002(\005\"Y\n\021ProtoEq"
      "uipmentSet\022/\n\006sheets\030\001 \003(\0132\037.WakfuProto."
      "ProtoEquipmentSheet\022\023\n\013characterId\030\002 \001(\003"
      "\"D\n\025ProtoEquipmentAccount\022+\n\004sets\030\001 \003(\0132"
      "\035.WakfuProto.ProtoEquipmentSet\"\?\n\027ProtoE"
      "quipmentInventory\022$\n\005items\030\001 \003(\0132\025.Wakfu"
      "Proto.ProtoItem"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 455);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "equipment.proto", &protobuf_RegisterTypes);
  ::WakfuProto::protobuf_item_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_equipment_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoEquipmentSheet_ProtoEquipmentItem::kUidFieldNumber;
const int ProtoEquipmentSheet_ProtoEquipmentItem::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoEquipmentSheet_ProtoEquipmentItem::ProtoEquipmentSheet_ProtoEquipmentItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_equipment_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WakfuProto.ProtoEquipmentSheet.ProtoEquipmentItem)
}
ProtoEquipmentSheet_ProtoEquipmentItem::ProtoEquipmentSheet_ProtoEquipmentItem(const ProtoEquipmentSheet_ProtoEquipmentItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uid_, &from.uid_,
    reinterpret_cast<char*>(&position_) -
    reinterpret_cast<char*>(&uid_) + sizeof(position_));
  // @@protoc_insertion_point(copy_constructor:WakfuProto.ProtoEquipmentSheet.ProtoEquipmentItem)
}

void ProtoEquipmentSheet_ProtoEquipmentItem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&uid_, 0, reinterpret_cast<char*>(&position_) -
    reinterpret_cast<char*>(&uid_) + sizeof(position_));
}

ProtoEquipmentSheet_ProtoEquipmentItem::~ProtoEquipmentSheet_ProtoEquipmentItem() {
  // @@protoc_insertion_point(destructor:WakfuProto.ProtoEquipmentSheet.ProtoEquipmentItem)
  SharedDtor();
}

void ProtoEquipmentSheet_ProtoEquipmentItem::SharedDtor() {
}

void ProtoEquipmentSheet_ProtoEquipmentItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoEquipmentSheet_ProtoEquipmentItem::descriptor() {
  protobuf_equipment_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_equipment_2eproto::file_level_metadata[0].descriptor;
}

const ProtoEquipmentSheet_ProtoEquipmentItem& ProtoEquipmentSheet_ProtoEquipmentItem::default_instance() {
  protobuf_equipment_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProtoEquipmentSheet_ProtoEquipmentItem* ProtoEquipmentSheet_ProtoEquipmentItem::New(::google::protobuf::Arena* arena) const {
  ProtoEquipmentSheet_ProtoEquipmentItem* n = new ProtoEquipmentSheet_ProtoEquipmentItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoEquipmentSheet_ProtoEquipmentItem::Clear() {
// @@protoc_insertion_point(message_clear_start:WakfuProto.ProtoEquipmentSheet.ProtoEquipmentItem)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&uid_, 0, reinterpret_cast<char*>(&position_) -
      reinterpret_cast<char*>(&uid_) + sizeof(position_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProtoEquipmentSheet_ProtoEquipmentItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WakfuProto.ProtoEquipmentSheet.ProtoEquipmentItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 uid = 1;
      case 1: {
        if (tag == 8u) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 position = 2;
      case 2: {
        if (tag == 16u) {
          set_has_position();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WakfuProto.ProtoEquipmentSheet.ProtoEquipmentItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WakfuProto.ProtoEquipmentSheet.ProtoEquipmentItem)
  return false;
#undef DO_
}

void ProtoEquipmentSheet_ProtoEquipmentItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WakfuProto.ProtoEquipmentSheet.ProtoEquipmentItem)
  // required int64 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uid(), output);
  }

  // required int32 position = 2;
  if (has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->position(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WakfuProto.ProtoEquipmentSheet.ProtoEquipmentItem)
}

::google::protobuf::uint8* ProtoEquipmentSheet_ProtoEquipmentItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WakfuProto.ProtoEquipmentSheet.ProtoEquipmentItem)
  // required int64 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uid(), target);
  }

  // required int32 position = 2;
  if (has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->position(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WakfuProto.ProtoEquipmentSheet.ProtoEquipmentItem)
  return target;
}

size_t ProtoEquipmentSheet_ProtoEquipmentItem::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:WakfuProto.ProtoEquipmentSheet.ProtoEquipmentItem)
  size_t total_size = 0;

  if (has_uid()) {
    // required int64 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->uid());
  }

  if (has_position()) {
    // required int32 position = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->position());
  }

  return total_size;
}
size_t ProtoEquipmentSheet_ProtoEquipmentItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WakfuProto.ProtoEquipmentSheet.ProtoEquipmentItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->uid());

    // required int32 position = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->position());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoEquipmentSheet_ProtoEquipmentItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WakfuProto.ProtoEquipmentSheet.ProtoEquipmentItem)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoEquipmentSheet_ProtoEquipmentItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoEquipmentSheet_ProtoEquipmentItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WakfuProto.ProtoEquipmentSheet.ProtoEquipmentItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WakfuProto.ProtoEquipmentSheet.ProtoEquipmentItem)
    MergeFrom(*source);
  }
}

void ProtoEquipmentSheet_ProtoEquipmentItem::MergeFrom(const ProtoEquipmentSheet_ProtoEquipmentItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WakfuProto.ProtoEquipmentSheet.ProtoEquipmentItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_position()) {
      set_position(from.position());
    }
  }
}

void ProtoEquipmentSheet_ProtoEquipmentItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WakfuProto.ProtoEquipmentSheet.ProtoEquipmentItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoEquipmentSheet_ProtoEquipmentItem::CopyFrom(const ProtoEquipmentSheet_ProtoEquipmentItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WakfuProto.ProtoEquipmentSheet.ProtoEquipmentItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoEquipmentSheet_ProtoEquipmentItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ProtoEquipmentSheet_ProtoEquipmentItem::Swap(ProtoEquipmentSheet_ProtoEquipmentItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoEquipmentSheet_ProtoEquipmentItem::InternalSwap(ProtoEquipmentSheet_ProtoEquipmentItem* other) {
  std::swap(uid_, other->uid_);
  std::swap(position_, other->position_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoEquipmentSheet_ProtoEquipmentItem::GetMetadata() const {
  protobuf_equipment_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_equipment_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtoEquipmentSheet_ProtoEquipmentItem

// required int64 uid = 1;
bool ProtoEquipmentSheet_ProtoEquipmentItem::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProtoEquipmentSheet_ProtoEquipmentItem::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void ProtoEquipmentSheet_ProtoEquipmentItem::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProtoEquipmentSheet_ProtoEquipmentItem::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
::google::protobuf::int64 ProtoEquipmentSheet_ProtoEquipmentItem::uid() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoEquipmentSheet.ProtoEquipmentItem.uid)
  return uid_;
}
void ProtoEquipmentSheet_ProtoEquipmentItem::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoEquipmentSheet.ProtoEquipmentItem.uid)
}

// required int32 position = 2;
bool ProtoEquipmentSheet_ProtoEquipmentItem::has_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ProtoEquipmentSheet_ProtoEquipmentItem::set_has_position() {
  _has_bits_[0] |= 0x00000002u;
}
void ProtoEquipmentSheet_ProtoEquipmentItem::clear_has_position() {
  _has_bits_[0] &= ~0x00000002u;
}
void ProtoEquipmentSheet_ProtoEquipmentItem::clear_position() {
  position_ = 0;
  clear_has_position();
}
::google::protobuf::int32 ProtoEquipmentSheet_ProtoEquipmentItem::position() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoEquipmentSheet.ProtoEquipmentItem.position)
  return position_;
}
void ProtoEquipmentSheet_ProtoEquipmentItem::set_position(::google::protobuf::int32 value) {
  set_has_position();
  position_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoEquipmentSheet.ProtoEquipmentItem.position)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoEquipmentSheet::kItemsFieldNumber;
const int ProtoEquipmentSheet::kIndexFieldNumber;
const int ProtoEquipmentSheet::kNameFieldNumber;
const int ProtoEquipmentSheet::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoEquipmentSheet::ProtoEquipmentSheet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_equipment_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WakfuProto.ProtoEquipmentSheet)
}
ProtoEquipmentSheet::ProtoEquipmentSheet(const ProtoEquipmentSheet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&index_, &from.index_,
    reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&index_) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:WakfuProto.ProtoEquipmentSheet)
}

void ProtoEquipmentSheet::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&index_, 0, reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&index_) + sizeof(level_));
}

ProtoEquipmentSheet::~ProtoEquipmentSheet() {
  // @@protoc_insertion_point(destructor:WakfuProto.ProtoEquipmentSheet)
  SharedDtor();
}

void ProtoEquipmentSheet::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProtoEquipmentSheet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoEquipmentSheet::descriptor() {
  protobuf_equipment_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_equipment_2eproto::file_level_metadata[1].descriptor;
}

const ProtoEquipmentSheet& ProtoEquipmentSheet::default_instance() {
  protobuf_equipment_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProtoEquipmentSheet* ProtoEquipmentSheet::New(::google::protobuf::Arena* arena) const {
  ProtoEquipmentSheet* n = new ProtoEquipmentSheet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoEquipmentSheet::Clear() {
// @@protoc_insertion_point(message_clear_start:WakfuProto.ProtoEquipmentSheet)
  items_.Clear();
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&index_, 0, reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&index_) + sizeof(level_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProtoEquipmentSheet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WakfuProto.ProtoEquipmentSheet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .WakfuProto.ProtoEquipmentSheet.ProtoEquipmentItem items = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // optional int32 index = 51;
      case 51: {
        if (tag == 408u) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 52;
      case 52: {
        if (tag == 418u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "WakfuProto.ProtoEquipmentSheet.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 level = 53;
      case 53: {
        if (tag == 424u) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WakfuProto.ProtoEquipmentSheet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WakfuProto.ProtoEquipmentSheet)
  return false;
#undef DO_
}

void ProtoEquipmentSheet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WakfuProto.ProtoEquipmentSheet)
  // repeated .WakfuProto.ProtoEquipmentSheet.ProtoEquipmentItem items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // optional int32 index = 51;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(51, this->index(), output);
  }

  // optional string name = 52;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "WakfuProto.ProtoEquipmentSheet.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      52, this->name(), output);
  }

  // optional int32 level = 53;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(53, this->level(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WakfuProto.ProtoEquipmentSheet)
}

::google::protobuf::uint8* ProtoEquipmentSheet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WakfuProto.ProtoEquipmentSheet)
  // repeated .WakfuProto.ProtoEquipmentSheet.ProtoEquipmentItem items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->items(i), false, target);
  }

  // optional int32 index = 51;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(51, this->index(), target);
  }

  // optional string name = 52;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "WakfuProto.ProtoEquipmentSheet.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        52, this->name(), target);
  }

  // optional int32 level = 53;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(53, this->level(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WakfuProto.ProtoEquipmentSheet)
  return target;
}

size_t ProtoEquipmentSheet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WakfuProto.ProtoEquipmentSheet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .WakfuProto.ProtoEquipmentSheet.ProtoEquipmentItem items = 1;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 52;
    if (has_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 index = 51;
    if (has_index()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

    // optional int32 level = 53;
    if (has_level()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoEquipmentSheet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WakfuProto.ProtoEquipmentSheet)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoEquipmentSheet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoEquipmentSheet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WakfuProto.ProtoEquipmentSheet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WakfuProto.ProtoEquipmentSheet)
    MergeFrom(*source);
  }
}

void ProtoEquipmentSheet::MergeFrom(const ProtoEquipmentSheet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WakfuProto.ProtoEquipmentSheet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  items_.MergeFrom(from.items_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
  }
}

void ProtoEquipmentSheet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WakfuProto.ProtoEquipmentSheet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoEquipmentSheet::CopyFrom(const ProtoEquipmentSheet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WakfuProto.ProtoEquipmentSheet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoEquipmentSheet::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->items())) return false;
  return true;
}

void ProtoEquipmentSheet::Swap(ProtoEquipmentSheet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoEquipmentSheet::InternalSwap(ProtoEquipmentSheet* other) {
  items_.UnsafeArenaSwap(&other->items_);
  name_.Swap(&other->name_);
  std::swap(index_, other->index_);
  std::swap(level_, other->level_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoEquipmentSheet::GetMetadata() const {
  protobuf_equipment_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_equipment_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtoEquipmentSheet

// repeated .WakfuProto.ProtoEquipmentSheet.ProtoEquipmentItem items = 1;
int ProtoEquipmentSheet::items_size() const {
  return items_.size();
}
void ProtoEquipmentSheet::clear_items() {
  items_.Clear();
}
const ::WakfuProto::ProtoEquipmentSheet_ProtoEquipmentItem& ProtoEquipmentSheet::items(int index) const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoEquipmentSheet.items)
  return items_.Get(index);
}
::WakfuProto::ProtoEquipmentSheet_ProtoEquipmentItem* ProtoEquipmentSheet::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:WakfuProto.ProtoEquipmentSheet.items)
  return items_.Mutable(index);
}
::WakfuProto::ProtoEquipmentSheet_ProtoEquipmentItem* ProtoEquipmentSheet::add_items() {
  // @@protoc_insertion_point(field_add:WakfuProto.ProtoEquipmentSheet.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoEquipmentSheet_ProtoEquipmentItem >*
ProtoEquipmentSheet::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:WakfuProto.ProtoEquipmentSheet.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoEquipmentSheet_ProtoEquipmentItem >&
ProtoEquipmentSheet::items() const {
  // @@protoc_insertion_point(field_list:WakfuProto.ProtoEquipmentSheet.items)
  return items_;
}

// optional int32 index = 51;
bool ProtoEquipmentSheet::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ProtoEquipmentSheet::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
void ProtoEquipmentSheet::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
void ProtoEquipmentSheet::clear_index() {
  index_ = 0;
  clear_has_index();
}
::google::protobuf::int32 ProtoEquipmentSheet::index() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoEquipmentSheet.index)
  return index_;
}
void ProtoEquipmentSheet::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoEquipmentSheet.index)
}

// optional string name = 52;
bool ProtoEquipmentSheet::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProtoEquipmentSheet::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void ProtoEquipmentSheet::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProtoEquipmentSheet::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& ProtoEquipmentSheet::name() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoEquipmentSheet.name)
  return name_.GetNoArena();
}
void ProtoEquipmentSheet::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoEquipmentSheet.name)
}
#if LANG_CXX11
void ProtoEquipmentSheet::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WakfuProto.ProtoEquipmentSheet.name)
}
#endif
void ProtoEquipmentSheet::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WakfuProto.ProtoEquipmentSheet.name)
}
void ProtoEquipmentSheet::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WakfuProto.ProtoEquipmentSheet.name)
}
::std::string* ProtoEquipmentSheet::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:WakfuProto.ProtoEquipmentSheet.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProtoEquipmentSheet::release_name() {
  // @@protoc_insertion_point(field_release:WakfuProto.ProtoEquipmentSheet.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProtoEquipmentSheet::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:WakfuProto.ProtoEquipmentSheet.name)
}

// optional int32 level = 53;
bool ProtoEquipmentSheet::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ProtoEquipmentSheet::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
void ProtoEquipmentSheet::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
void ProtoEquipmentSheet::clear_level() {
  level_ = 0;
  clear_has_level();
}
::google::protobuf::int32 ProtoEquipmentSheet::level() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoEquipmentSheet.level)
  return level_;
}
void ProtoEquipmentSheet::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoEquipmentSheet.level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoEquipmentSet::kSheetsFieldNumber;
const int ProtoEquipmentSet::kCharacterIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoEquipmentSet::ProtoEquipmentSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_equipment_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WakfuProto.ProtoEquipmentSet)
}
ProtoEquipmentSet::ProtoEquipmentSet(const ProtoEquipmentSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      sheets_(from.sheets_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  characterid_ = from.characterid_;
  // @@protoc_insertion_point(copy_constructor:WakfuProto.ProtoEquipmentSet)
}

void ProtoEquipmentSet::SharedCtor() {
  _cached_size_ = 0;
  characterid_ = GOOGLE_LONGLONG(0);
}

ProtoEquipmentSet::~ProtoEquipmentSet() {
  // @@protoc_insertion_point(destructor:WakfuProto.ProtoEquipmentSet)
  SharedDtor();
}

void ProtoEquipmentSet::SharedDtor() {
}

void ProtoEquipmentSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoEquipmentSet::descriptor() {
  protobuf_equipment_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_equipment_2eproto::file_level_metadata[2].descriptor;
}

const ProtoEquipmentSet& ProtoEquipmentSet::default_instance() {
  protobuf_equipment_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProtoEquipmentSet* ProtoEquipmentSet::New(::google::protobuf::Arena* arena) const {
  ProtoEquipmentSet* n = new ProtoEquipmentSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoEquipmentSet::Clear() {
// @@protoc_insertion_point(message_clear_start:WakfuProto.ProtoEquipmentSet)
  sheets_.Clear();
  characterid_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProtoEquipmentSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WakfuProto.ProtoEquipmentSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .WakfuProto.ProtoEquipmentSheet sheets = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_sheets()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // optional int64 characterId = 2;
      case 2: {
        if (tag == 16u) {
          set_has_characterid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &characterid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WakfuProto.ProtoEquipmentSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WakfuProto.ProtoEquipmentSet)
  return false;
#undef DO_
}

void ProtoEquipmentSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WakfuProto.ProtoEquipmentSet)
  // repeated .WakfuProto.ProtoEquipmentSheet sheets = 1;
  for (unsigned int i = 0, n = this->sheets_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sheets(i), output);
  }

  // optional int64 characterId = 2;
  if (has_characterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->characterid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WakfuProto.ProtoEquipmentSet)
}

::google::protobuf::uint8* ProtoEquipmentSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WakfuProto.ProtoEquipmentSet)
  // repeated .WakfuProto.ProtoEquipmentSheet sheets = 1;
  for (unsigned int i = 0, n = this->sheets_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->sheets(i), false, target);
  }

  // optional int64 characterId = 2;
  if (has_characterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->characterid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WakfuProto.ProtoEquipmentSet)
  return target;
}

size_t ProtoEquipmentSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WakfuProto.ProtoEquipmentSet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .WakfuProto.ProtoEquipmentSheet sheets = 1;
  {
    unsigned int count = this->sheets_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sheets(i));
    }
  }

  // optional int64 characterId = 2;
  if (has_characterid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->characterid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoEquipmentSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WakfuProto.ProtoEquipmentSet)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoEquipmentSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoEquipmentSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WakfuProto.ProtoEquipmentSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WakfuProto.ProtoEquipmentSet)
    MergeFrom(*source);
  }
}

void ProtoEquipmentSet::MergeFrom(const ProtoEquipmentSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WakfuProto.ProtoEquipmentSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sheets_.MergeFrom(from.sheets_);
  if (from.has_characterid()) {
    set_characterid(from.characterid());
  }
}

void ProtoEquipmentSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WakfuProto.ProtoEquipmentSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoEquipmentSet::CopyFrom(const ProtoEquipmentSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WakfuProto.ProtoEquipmentSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoEquipmentSet::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->sheets())) return false;
  return true;
}

void ProtoEquipmentSet::Swap(ProtoEquipmentSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoEquipmentSet::InternalSwap(ProtoEquipmentSet* other) {
  sheets_.UnsafeArenaSwap(&other->sheets_);
  std::swap(characterid_, other->characterid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoEquipmentSet::GetMetadata() const {
  protobuf_equipment_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_equipment_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtoEquipmentSet

// repeated .WakfuProto.ProtoEquipmentSheet sheets = 1;
int ProtoEquipmentSet::sheets_size() const {
  return sheets_.size();
}
void ProtoEquipmentSet::clear_sheets() {
  sheets_.Clear();
}
const ::WakfuProto::ProtoEquipmentSheet& ProtoEquipmentSet::sheets(int index) const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoEquipmentSet.sheets)
  return sheets_.Get(index);
}
::WakfuProto::ProtoEquipmentSheet* ProtoEquipmentSet::mutable_sheets(int index) {
  // @@protoc_insertion_point(field_mutable:WakfuProto.ProtoEquipmentSet.sheets)
  return sheets_.Mutable(index);
}
::WakfuProto::ProtoEquipmentSheet* ProtoEquipmentSet::add_sheets() {
  // @@protoc_insertion_point(field_add:WakfuProto.ProtoEquipmentSet.sheets)
  return sheets_.Add();
}
::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoEquipmentSheet >*
ProtoEquipmentSet::mutable_sheets() {
  // @@protoc_insertion_point(field_mutable_list:WakfuProto.ProtoEquipmentSet.sheets)
  return &sheets_;
}
const ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoEquipmentSheet >&
ProtoEquipmentSet::sheets() const {
  // @@protoc_insertion_point(field_list:WakfuProto.ProtoEquipmentSet.sheets)
  return sheets_;
}

// optional int64 characterId = 2;
bool ProtoEquipmentSet::has_characterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProtoEquipmentSet::set_has_characterid() {
  _has_bits_[0] |= 0x00000001u;
}
void ProtoEquipmentSet::clear_has_characterid() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProtoEquipmentSet::clear_characterid() {
  characterid_ = GOOGLE_LONGLONG(0);
  clear_has_characterid();
}
::google::protobuf::int64 ProtoEquipmentSet::characterid() const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoEquipmentSet.characterId)
  return characterid_;
}
void ProtoEquipmentSet::set_characterid(::google::protobuf::int64 value) {
  set_has_characterid();
  characterid_ = value;
  // @@protoc_insertion_point(field_set:WakfuProto.ProtoEquipmentSet.characterId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoEquipmentAccount::kSetsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoEquipmentAccount::ProtoEquipmentAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_equipment_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WakfuProto.ProtoEquipmentAccount)
}
ProtoEquipmentAccount::ProtoEquipmentAccount(const ProtoEquipmentAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      sets_(from.sets_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:WakfuProto.ProtoEquipmentAccount)
}

void ProtoEquipmentAccount::SharedCtor() {
  _cached_size_ = 0;
}

ProtoEquipmentAccount::~ProtoEquipmentAccount() {
  // @@protoc_insertion_point(destructor:WakfuProto.ProtoEquipmentAccount)
  SharedDtor();
}

void ProtoEquipmentAccount::SharedDtor() {
}

void ProtoEquipmentAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoEquipmentAccount::descriptor() {
  protobuf_equipment_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_equipment_2eproto::file_level_metadata[3].descriptor;
}

const ProtoEquipmentAccount& ProtoEquipmentAccount::default_instance() {
  protobuf_equipment_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProtoEquipmentAccount* ProtoEquipmentAccount::New(::google::protobuf::Arena* arena) const {
  ProtoEquipmentAccount* n = new ProtoEquipmentAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoEquipmentAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:WakfuProto.ProtoEquipmentAccount)
  sets_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProtoEquipmentAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WakfuProto.ProtoEquipmentAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .WakfuProto.ProtoEquipmentSet sets = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_sets()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WakfuProto.ProtoEquipmentAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WakfuProto.ProtoEquipmentAccount)
  return false;
#undef DO_
}

void ProtoEquipmentAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WakfuProto.ProtoEquipmentAccount)
  // repeated .WakfuProto.ProtoEquipmentSet sets = 1;
  for (unsigned int i = 0, n = this->sets_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sets(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WakfuProto.ProtoEquipmentAccount)
}

::google::protobuf::uint8* ProtoEquipmentAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WakfuProto.ProtoEquipmentAccount)
  // repeated .WakfuProto.ProtoEquipmentSet sets = 1;
  for (unsigned int i = 0, n = this->sets_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->sets(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WakfuProto.ProtoEquipmentAccount)
  return target;
}

size_t ProtoEquipmentAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WakfuProto.ProtoEquipmentAccount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .WakfuProto.ProtoEquipmentSet sets = 1;
  {
    unsigned int count = this->sets_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sets(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoEquipmentAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WakfuProto.ProtoEquipmentAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoEquipmentAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoEquipmentAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WakfuProto.ProtoEquipmentAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WakfuProto.ProtoEquipmentAccount)
    MergeFrom(*source);
  }
}

void ProtoEquipmentAccount::MergeFrom(const ProtoEquipmentAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WakfuProto.ProtoEquipmentAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sets_.MergeFrom(from.sets_);
}

void ProtoEquipmentAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WakfuProto.ProtoEquipmentAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoEquipmentAccount::CopyFrom(const ProtoEquipmentAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WakfuProto.ProtoEquipmentAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoEquipmentAccount::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->sets())) return false;
  return true;
}

void ProtoEquipmentAccount::Swap(ProtoEquipmentAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoEquipmentAccount::InternalSwap(ProtoEquipmentAccount* other) {
  sets_.UnsafeArenaSwap(&other->sets_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoEquipmentAccount::GetMetadata() const {
  protobuf_equipment_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_equipment_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtoEquipmentAccount

// repeated .WakfuProto.ProtoEquipmentSet sets = 1;
int ProtoEquipmentAccount::sets_size() const {
  return sets_.size();
}
void ProtoEquipmentAccount::clear_sets() {
  sets_.Clear();
}
const ::WakfuProto::ProtoEquipmentSet& ProtoEquipmentAccount::sets(int index) const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoEquipmentAccount.sets)
  return sets_.Get(index);
}
::WakfuProto::ProtoEquipmentSet* ProtoEquipmentAccount::mutable_sets(int index) {
  // @@protoc_insertion_point(field_mutable:WakfuProto.ProtoEquipmentAccount.sets)
  return sets_.Mutable(index);
}
::WakfuProto::ProtoEquipmentSet* ProtoEquipmentAccount::add_sets() {
  // @@protoc_insertion_point(field_add:WakfuProto.ProtoEquipmentAccount.sets)
  return sets_.Add();
}
::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoEquipmentSet >*
ProtoEquipmentAccount::mutable_sets() {
  // @@protoc_insertion_point(field_mutable_list:WakfuProto.ProtoEquipmentAccount.sets)
  return &sets_;
}
const ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoEquipmentSet >&
ProtoEquipmentAccount::sets() const {
  // @@protoc_insertion_point(field_list:WakfuProto.ProtoEquipmentAccount.sets)
  return sets_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoEquipmentInventory::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoEquipmentInventory::ProtoEquipmentInventory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_equipment_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WakfuProto.ProtoEquipmentInventory)
}
ProtoEquipmentInventory::ProtoEquipmentInventory(const ProtoEquipmentInventory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:WakfuProto.ProtoEquipmentInventory)
}

void ProtoEquipmentInventory::SharedCtor() {
  _cached_size_ = 0;
}

ProtoEquipmentInventory::~ProtoEquipmentInventory() {
  // @@protoc_insertion_point(destructor:WakfuProto.ProtoEquipmentInventory)
  SharedDtor();
}

void ProtoEquipmentInventory::SharedDtor() {
}

void ProtoEquipmentInventory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoEquipmentInventory::descriptor() {
  protobuf_equipment_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_equipment_2eproto::file_level_metadata[4].descriptor;
}

const ProtoEquipmentInventory& ProtoEquipmentInventory::default_instance() {
  protobuf_equipment_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProtoEquipmentInventory* ProtoEquipmentInventory::New(::google::protobuf::Arena* arena) const {
  ProtoEquipmentInventory* n = new ProtoEquipmentInventory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoEquipmentInventory::Clear() {
// @@protoc_insertion_point(message_clear_start:WakfuProto.ProtoEquipmentInventory)
  items_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProtoEquipmentInventory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WakfuProto.ProtoEquipmentInventory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .WakfuProto.ProtoItem items = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WakfuProto.ProtoEquipmentInventory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WakfuProto.ProtoEquipmentInventory)
  return false;
#undef DO_
}

void ProtoEquipmentInventory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WakfuProto.ProtoEquipmentInventory)
  // repeated .WakfuProto.ProtoItem items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WakfuProto.ProtoEquipmentInventory)
}

::google::protobuf::uint8* ProtoEquipmentInventory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WakfuProto.ProtoEquipmentInventory)
  // repeated .WakfuProto.ProtoItem items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->items(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WakfuProto.ProtoEquipmentInventory)
  return target;
}

size_t ProtoEquipmentInventory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WakfuProto.ProtoEquipmentInventory)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .WakfuProto.ProtoItem items = 1;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoEquipmentInventory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WakfuProto.ProtoEquipmentInventory)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoEquipmentInventory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoEquipmentInventory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WakfuProto.ProtoEquipmentInventory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WakfuProto.ProtoEquipmentInventory)
    MergeFrom(*source);
  }
}

void ProtoEquipmentInventory::MergeFrom(const ProtoEquipmentInventory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WakfuProto.ProtoEquipmentInventory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  items_.MergeFrom(from.items_);
}

void ProtoEquipmentInventory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WakfuProto.ProtoEquipmentInventory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoEquipmentInventory::CopyFrom(const ProtoEquipmentInventory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WakfuProto.ProtoEquipmentInventory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoEquipmentInventory::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->items())) return false;
  return true;
}

void ProtoEquipmentInventory::Swap(ProtoEquipmentInventory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoEquipmentInventory::InternalSwap(ProtoEquipmentInventory* other) {
  items_.UnsafeArenaSwap(&other->items_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoEquipmentInventory::GetMetadata() const {
  protobuf_equipment_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_equipment_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtoEquipmentInventory

// repeated .WakfuProto.ProtoItem items = 1;
int ProtoEquipmentInventory::items_size() const {
  return items_.size();
}
void ProtoEquipmentInventory::clear_items() {
  items_.Clear();
}
const ::WakfuProto::ProtoItem& ProtoEquipmentInventory::items(int index) const {
  // @@protoc_insertion_point(field_get:WakfuProto.ProtoEquipmentInventory.items)
  return items_.Get(index);
}
::WakfuProto::ProtoItem* ProtoEquipmentInventory::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:WakfuProto.ProtoEquipmentInventory.items)
  return items_.Mutable(index);
}
::WakfuProto::ProtoItem* ProtoEquipmentInventory::add_items() {
  // @@protoc_insertion_point(field_add:WakfuProto.ProtoEquipmentInventory.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoItem >*
ProtoEquipmentInventory::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:WakfuProto.ProtoEquipmentInventory.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::WakfuProto::ProtoItem >&
ProtoEquipmentInventory::items() const {
  // @@protoc_insertion_point(field_list:WakfuProto.ProtoEquipmentInventory.items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace WakfuProto

// @@protoc_insertion_point(global_scope)
